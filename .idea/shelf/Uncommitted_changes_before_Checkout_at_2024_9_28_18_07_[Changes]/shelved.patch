Index: GitTest.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>print(\"Hello World\")\r\nprint(\"Git Test\")
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/GitTest.py b/GitTest.py
--- a/GitTest.py	
+++ b/GitTest.py	
@@ -1,2 +1,3 @@
 print("Hello World")
-print("Git Test")
\ No newline at end of file
+print("Git Test")
+print("Hello World2")
\ No newline at end of file
Index: .idea/misc.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/misc.xml b/.idea/misc.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/misc.xml	
@@ -0,0 +1,7 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="Black">
+    <option name="sdkName" value="aitest" />
+  </component>
+  <component name="ProjectRootManager" version="2" project-jdk-name="ai" project-jdk-type="Python SDK" />
+</project>
\ No newline at end of file
Index: .idea/inspectionProfiles/Project_Default.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/inspectionProfiles/Project_Default.xml b/.idea/inspectionProfiles/Project_Default.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/inspectionProfiles/Project_Default.xml	
@@ -0,0 +1,12 @@
+<component name="InspectionProjectProfileManager">
+  <profile version="1.0">
+    <option name="myName" value="Project Default" />
+    <inspection_tool class="PyPep8NamingInspection" enabled="true" level="WEAK WARNING" enabled_by_default="true">
+      <option name="ignoredErrors">
+        <list>
+          <option value="N806" />
+        </list>
+      </option>
+    </inspection_tool>
+  </profile>
+</component>
\ No newline at end of file
Index: test.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/test.py b/test.py
new file mode 100644
--- /dev/null	
+++ b/test.py	
@@ -0,0 +1,34 @@
+class Tool(object):
+    count = 0
+
+    def __init__(self, name):
+        self.name = name
+        Tool.count += 1
+
+    @classmethod
+    def getCount(cls):
+        return cls.count
+
+    @staticmethod
+    def printCount():
+        print(Tool.count)
+
+
+tool1 = Tool("hammer")
+tool2 = Tool("screwdriver")
+print(Tool.getCount())
+Tool.printCount()
+
+
+class Tool(object):
+    def __init__(self, name, a, b):
+        self.name = name
+        self.a = a
+        self.b = b
+
+    def __call__(self, c, age):
+        return self.a + self.b + c, f"hello {self.name},{age}"
+
+
+tool = Tool("world", 1, 2)
+print(*tool(3, 18))
Index: .idea/inspectionProfiles/profiles_settings.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/inspectionProfiles/profiles_settings.xml b/.idea/inspectionProfiles/profiles_settings.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/inspectionProfiles/profiles_settings.xml	
@@ -0,0 +1,6 @@
+<component name="InspectionProjectProfileManager">
+  <settings>
+    <option name="USE_PROJECT_PROFILE" value="false" />
+    <version value="1.0" />
+  </settings>
+</component>
\ No newline at end of file
Index: Numpy库.ipynb
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Numpy库.ipynb b/Numpy库.ipynb
new file mode 100644
--- /dev/null	
+++ b/Numpy库.ipynb	
@@ -0,0 +1,4902 @@
+{
+ "cells": [
+  {
+   "cell_type": "markdown",
+   "id": "311d30c8f173df1d",
+   "metadata": {},
+   "source": [
+    "## 1.为什么要用Numpy\n",
+    "### 1.1Numpy为什么如此高效\n",
+    "Numpy是由C语言编写的\n",
+    "#### 1.1.1编译型语言VS解释型语言\n",
+    "C语言执行是，对代码进行整体编译，速度更快\n",
+    "#### 1.1.2连续单一类型存储VS分散多变类型存储\n",
+    "（1）Numpy数组内的数据类型必须是统一的，如全部是浮点型，而Python列表支持任意类型数据的填充\n",
+    "（2）Numpy数组内的数据连续存储在内存中，而Python列表的数据分散在内存中\n",
+    "这种存储结构，与一些更加高效的底层处理方式更加的契合\n",
+    "#### 1.1.3多线程VS线程锁\n",
+    "Python语言执行是有线程锁，无法实现真正的多线程并行，而C语言可以\n",
+    "## 1.2什么时候用Numpy\n",
+    "在数据处理的过程中，遇到使用“Python for循环”实现一些向量化、矩阵化操作的时候，要优先考虑用Numpy\n",
+    "如：1、两个向量的点乘  2、矩阵乘法"
+   ]
+  },
+  {
+   "cell_type": "markdown",
+   "source": [
+    "## 2.Numpy数组的创建\n",
+    "### 2.1从列表开始创建"
+   ],
+   "metadata": {
+    "collapsed": false
+   },
+   "id": "acf740a8440f24d9"
+  },
+  {
+   "cell_type": "code",
+   "outputs": [
+    {
+     "name": "stdout",
+     "output_type": "stream",
+     "text": [
+      "[1 2 3 4 5]\n"
+     ]
+    }
+   ],
+   "source": [
+    "import numpy as np\n",
+    "\n",
+    "x = np.array([1, 2, 3, 4, 5])\n",
+    "print(x)"
+   ],
+   "metadata": {
+    "collapsed": false,
+    "ExecuteTime": {
+     "end_time": "2024-07-16T07:27:38.961262300Z",
+     "start_time": "2024-07-16T07:27:38.839891900Z"
+    }
+   },
+   "id": "71d6b89c6891db4b",
+   "execution_count": 1
+  },
+  {
+   "cell_type": "code",
+   "outputs": [
+    {
+     "name": "stdout",
+     "output_type": "stream",
+     "text": [
+      "<class 'numpy.ndarray'>\n",
+      "(5,)\n"
+     ]
+    }
+   ],
+   "source": [
+    "print(type(x))\n",
+    "print(x.shape)"
+   ],
+   "metadata": {
+    "collapsed": false,
+    "ExecuteTime": {
+     "end_time": "2024-07-16T07:27:39.003768900Z",
+     "start_time": "2024-07-16T07:27:38.945260700Z"
+    }
+   },
+   "id": "9db1656443bf4f5d",
+   "execution_count": 2
+  },
+  {
+   "cell_type": "markdown",
+   "source": [
+    "* 设置数组的数据类型"
+   ],
+   "metadata": {
+    "collapsed": false
+   },
+   "id": "876b55c4827058b1"
+  },
+  {
+   "cell_type": "code",
+   "outputs": [
+    {
+     "name": "stdout",
+     "output_type": "stream",
+     "text": [
+      "[1. 2. 3. 4. 5.]\n",
+      "<class 'numpy.float32'>\n"
+     ]
+    }
+   ],
+   "source": [
+    "x = np.array([1, 2, 3, 4, 5], dtype=\"float32\")\n",
+    "print(x)\n",
+    "print(type(x[0]))"
+   ],
+   "metadata": {
+    "collapsed": false,
+    "ExecuteTime": {
+     "end_time": "2024-07-16T07:27:39.113276300Z",
+     "start_time": "2024-07-16T07:27:38.960260500Z"
+    }
+   },
+   "id": "d214f538f5507b0f",
+   "execution_count": 3
+  },
+  {
+   "cell_type": "markdown",
+   "source": [
+    "* 二维数组"
+   ],
+   "metadata": {
+    "collapsed": false
+   },
+   "id": "c9b6897015965472"
+  },
+  {
+   "cell_type": "code",
+   "outputs": [
+    {
+     "name": "stdout",
+     "output_type": "stream",
+     "text": [
+      "[[1 2 3]\n",
+      " [4 5 6]\n",
+      " [7 8 9]]\n",
+      "(3, 3)\n"
+     ]
+    }
+   ],
+   "source": [
+    "x = np.array([[1, 2, 3],\n",
+    "              [4, 5, 6],\n",
+    "              [7, 8, 9]])\n",
+    "print(x)\n",
+    "print(x.shape)"
+   ],
+   "metadata": {
+    "collapsed": false,
+    "ExecuteTime": {
+     "end_time": "2024-07-16T07:27:39.138276Z",
+     "start_time": "2024-07-16T07:27:38.974262100Z"
+    }
+   },
+   "id": "6ec48828db3fd31d",
+   "execution_count": 4
+  },
+  {
+   "cell_type": "markdown",
+   "source": [
+    "### 2.2从头开始创建数组\n",
+    "#### 2.2.1创建长度为5的数组，值都为0"
+   ],
+   "metadata": {
+    "collapsed": false
+   },
+   "id": "b8166ad899c8febe"
+  },
+  {
+   "cell_type": "code",
+   "outputs": [
+    {
+     "data": {
+      "text/plain": "array([0, 0, 0, 0, 0])"
+     },
+     "execution_count": 5,
+     "metadata": {},
+     "output_type": "execute_result"
+    }
+   ],
+   "source": [
+    "np.zeros(5, dtype=int)"
+   ],
+   "metadata": {
+    "collapsed": false,
+    "ExecuteTime": {
+     "end_time": "2024-07-16T07:27:39.183422700Z",
+     "start_time": "2024-07-16T07:27:38.991769700Z"
+    }
+   },
+   "id": "9109cd8de8ff9224",
+   "execution_count": 5
+  },
+  {
+   "cell_type": "markdown",
+   "source": [
+    "#### 2.2.2创建一个2*4的浮点型数组，值都为1"
+   ],
+   "metadata": {
+    "collapsed": false
+   },
+   "id": "84f7926f42917433"
+  },
+  {
+   "cell_type": "code",
+   "outputs": [
+    {
+     "data": {
+      "text/plain": "array([[1., 1., 1., 1.],\n       [1., 1., 1., 1.]])"
+     },
+     "execution_count": 6,
+     "metadata": {},
+     "output_type": "execute_result"
+    }
+   ],
+   "source": [
+    "np.ones((2, 4), dtype=float)"
+   ],
+   "metadata": {
+    "collapsed": false,
+    "ExecuteTime": {
+     "end_time": "2024-07-16T07:27:39.186425Z",
+     "start_time": "2024-07-16T07:27:39.006768800Z"
+    }
+   },
+   "id": "8fb4064cf2d96bc2",
+   "execution_count": 6
+  },
+  {
+   "cell_type": "markdown",
+   "source": [
+    "#### 2.2.3创建一个3*5的数组，值都为8.8"
+   ],
+   "metadata": {
+    "collapsed": false
+   },
+   "id": "acec88ce60a77bb4"
+  },
+  {
+   "cell_type": "code",
+   "outputs": [
+    {
+     "data": {
+      "text/plain": "array([[8.8, 8.8, 8.8, 8.8, 8.8],\n       [8.8, 8.8, 8.8, 8.8, 8.8],\n       [8.8, 8.8, 8.8, 8.8, 8.8]])"
+     },
+     "execution_count": 7,
+     "metadata": {},
+     "output_type": "execute_result"
+    }
+   ],
+   "source": [
+    "np.full((3, 5), 8.8)"
+   ],
+   "metadata": {
+    "collapsed": false,
+    "ExecuteTime": {
+     "end_time": "2024-07-16T07:27:39.193423Z",
+     "start_time": "2024-07-16T07:27:39.021768800Z"
+    }
+   },
+   "id": "507db3166380feb3",
+   "execution_count": 7
+  },
+  {
+   "cell_type": "markdown",
+   "source": [
+    "#### 2.2.4创建一个3*3的单位矩阵"
+   ],
+   "metadata": {
+    "collapsed": false
+   },
+   "id": "b47ae9ab87819599"
+  },
+  {
+   "cell_type": "code",
+   "outputs": [
+    {
+     "data": {
+      "text/plain": "array([[1., 0., 0.],\n       [0., 1., 0.],\n       [0., 0., 1.]])"
+     },
+     "execution_count": 8,
+     "metadata": {},
+     "output_type": "execute_result"
+    }
+   ],
+   "source": [
+    "np.eye(3)"
+   ],
+   "metadata": {
+    "collapsed": false,
+    "ExecuteTime": {
+     "end_time": "2024-07-16T07:27:39.364508300Z",
+     "start_time": "2024-07-16T07:27:39.174012400Z"
+    }
+   },
+   "id": "69c8abc225842a9d",
+   "execution_count": 8
+  },
+  {
+   "cell_type": "markdown",
+   "source": [
+    "#### 2.2.5创建一个线性序列数组，从1开始，到15结束，步长为2"
+   ],
+   "metadata": {
+    "collapsed": false
+   },
+   "id": "718e37a22ded5bf"
+  },
+  {
+   "cell_type": "code",
+   "outputs": [
+    {
+     "data": {
+      "text/plain": "array([ 1,  3,  5,  7,  9, 11, 13])"
+     },
+     "execution_count": 9,
+     "metadata": {},
+     "output_type": "execute_result"
+    }
+   ],
+   "source": [
+    "np.arange(1, 15, 2)"
+   ],
+   "metadata": {
+    "collapsed": false,
+    "ExecuteTime": {
+     "end_time": "2024-07-16T07:27:39.395133500Z",
+     "start_time": "2024-07-16T07:27:39.323386200Z"
+    }
+   },
+   "id": "24379f466292331b",
+   "execution_count": 9
+  },
+  {
+   "cell_type": "markdown",
+   "source": [
+    "#### 2.2.6创建一个4个元素的数组，这四个数均匀的分配到0~1"
+   ],
+   "metadata": {
+    "collapsed": false
+   },
+   "id": "3b18621a0805382e"
+  },
+  {
+   "cell_type": "code",
+   "outputs": [
+    {
+     "data": {
+      "text/plain": "array([0.        , 0.33333333, 0.66666667, 1.        ])"
+     },
+     "execution_count": 10,
+     "metadata": {},
+     "output_type": "execute_result"
+    }
+   ],
+   "source": [
+    "np.linspace(0, 1, 4)"
+   ],
+   "metadata": {
+    "collapsed": false,
+    "ExecuteTime": {
+     "end_time": "2024-07-16T07:27:39.503826600Z",
+     "start_time": "2024-07-16T07:27:39.386130Z"
+    }
+   },
+   "id": "c6786bd3b3db86a0",
+   "execution_count": 10
+  },
+  {
+   "cell_type": "markdown",
+   "source": [
+    "#### 2.2.7创建一个10个元素的数组，形成1~10^9的等比数列"
+   ],
+   "metadata": {
+    "collapsed": false
+   },
+   "id": "2cbe137ca688bf6f"
+  },
+  {
+   "cell_type": "code",
+   "outputs": [
+    {
+     "data": {
+      "text/plain": "array([1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05, 1.e+06, 1.e+07,\n       1.e+08, 1.e+09])"
+     },
+     "execution_count": 11,
+     "metadata": {},
+     "output_type": "execute_result"
+    }
+   ],
+   "source": [
+    "np.logspace(0, 9, 10)"
+   ],
+   "metadata": {
+    "collapsed": false,
+    "ExecuteTime": {
+     "end_time": "2024-07-16T07:27:39.557312300Z",
+     "start_time": "2024-07-16T07:27:39.477797400Z"
+    }
+   },
+   "id": "7d552d2fc82efddc",
+   "execution_count": 11
+  },
+  {
+   "cell_type": "markdown",
+   "source": [
+    "#### 2.2.8创建一个3.3的，在0~1之间均匀分布的随机数构成的数组"
+   ],
+   "metadata": {
+    "collapsed": false
+   },
+   "id": "75e9f4f265d7513"
+  },
+  {
+   "cell_type": "code",
+   "outputs": [
+    {
+     "data": {
+      "text/plain": "array([[0.85567344, 0.68294392, 0.11853104],\n       [0.67315337, 0.00367542, 0.30260984],\n       [0.8335979 , 0.61983737, 0.81872959]])"
+     },
+     "execution_count": 12,
+     "metadata": {},
+     "output_type": "execute_result"
+    }
+   ],
+   "source": [
+    "np.random.random((3, 3))"
+   ],
+   "metadata": {
+    "collapsed": false,
+    "ExecuteTime": {
+     "end_time": "2024-07-16T07:27:39.647415Z",
+     "start_time": "2024-07-16T07:27:39.547307400Z"
+    }
+   },
+   "id": "5993458b858cd7fc",
+   "execution_count": 12
+  },
+  {
+   "cell_type": "markdown",
+   "source": [
+    "#### 2.2.9创建一个3*3的，均值为0，标准差为1的正态分布随机数构成的数组"
+   ],
+   "metadata": {
+    "collapsed": false
+   },
+   "id": "dba9c40240f2d4db"
+  },
+  {
+   "cell_type": "code",
+   "outputs": [
+    {
+     "data": {
+      "text/plain": "array([[ 7.06833572e-01, -1.87395940e+00,  4.46753432e-01],\n       [-5.66531142e-02, -6.21298202e-01, -3.64359876e-01],\n       [-9.32135875e-01,  5.06575676e-04,  3.09146364e-01]])"
+     },
+     "execution_count": 13,
+     "metadata": {},
+     "output_type": "execute_result"
+    }
+   ],
+   "source": [
+    "np.random.normal(0, 1, (3, 3))"
+   ],
+   "metadata": {
+    "collapsed": false,
+    "ExecuteTime": {
+     "end_time": "2024-07-16T07:27:39.690054100Z",
+     "start_time": "2024-07-16T07:27:39.633414900Z"
+    }
+   },
+   "id": "6ece5351d90fbcc1",
+   "execution_count": 13
+  },
+  {
+   "cell_type": "markdown",
+   "source": [
+    "#### 2.2.10创建一个3*3的，在[0,10)之间随机整数构成的数组"
+   ],
+   "metadata": {
+    "collapsed": false
+   },
+   "id": "1a6a3a2f0fff3f16"
+  },
+  {
+   "cell_type": "code",
+   "outputs": [
+    {
+     "data": {
+      "text/plain": "array([[3, 1, 7],\n       [5, 5, 2],\n       [6, 9, 8]])"
+     },
+     "execution_count": 14,
+     "metadata": {},
+     "output_type": "execute_result"
+    }
+   ],
+   "source": [
+    "np.random.randint(0, 10, (3, 3))"
+   ],
+   "metadata": {
+    "collapsed": false,
+    "ExecuteTime": {
+     "end_time": "2024-07-16T07:27:39.769774600Z",
+     "start_time": "2024-07-16T07:27:39.678677Z"
+    }
+   },
+   "id": "cc83bcb8a3821187",
+   "execution_count": 14
+  },
+  {
+   "cell_type": "markdown",
+   "source": [
+    "#### 2.2.11随机重排列"
+   ],
+   "metadata": {
+    "collapsed": false
+   },
+   "id": "dbed9112e0e6f342"
+  },
+  {
+   "cell_type": "code",
+   "outputs": [
+    {
+     "data": {
+      "text/plain": "array([40, 20, 10, 30])"
+     },
+     "execution_count": 15,
+     "metadata": {},
+     "output_type": "execute_result"
+    }
+   ],
+   "source": [
+    "x = np.array([10, 20, 30, 40])\n",
+    "np.random.permutation(x)  # 生产新列表"
+   ],
+   "metadata": {
+    "collapsed": false,
+    "ExecuteTime": {
+     "end_time": "2024-07-16T07:27:39.801022Z",
+     "start_time": "2024-07-16T07:27:39.746760900Z"
+    }
+   },
+   "id": "347383cafa338848",
+   "execution_count": 15
+  },
+  {
+   "cell_type": "code",
+   "outputs": [
+    {
+     "name": "stdout",
+     "output_type": "stream",
+     "text": [
+      "[10 20 30 40]\n",
+      "[10 30 40 20]\n"
+     ]
+    }
+   ],
+   "source": [
+    "print(x)\n",
+    "np.random.shuffle(x)  # 修改原列表\n",
+    "print(x)"
+   ],
+   "metadata": {
+    "collapsed": false,
+    "ExecuteTime": {
+     "end_time": "2024-07-16T07:27:39.895921400Z",
+     "start_time": "2024-07-16T07:27:39.793017200Z"
+    }
+   },
+   "id": "3c3de537decd4e01",
+   "execution_count": 16
+  },
+  {
+   "cell_type": "markdown",
+   "source": [
+    "#### 2.2.12随机采样\n",
+    "* 按指定形成采样"
+   ],
+   "metadata": {
+    "collapsed": false
+   },
+   "id": "79a2c22f1c8fb4d8"
+  },
+  {
+   "cell_type": "code",
+   "outputs": [
+    {
+     "data": {
+      "text/plain": "array([10., 11., 12., 13., 14., 15., 16., 17., 18., 19., 20., 21., 22.,\n       23., 24.])"
+     },
+     "execution_count": 17,
+     "metadata": {},
+     "output_type": "execute_result"
+    }
+   ],
+   "source": [
+    "x = np.arange(10, 25, dtype=float)\n",
+    "x"
+   ],
+   "metadata": {
+    "collapsed": false,
+    "ExecuteTime": {
+     "end_time": "2024-07-16T07:27:39.934917200Z",
+     "start_time": "2024-07-16T07:27:39.881916900Z"
+    }
+   },
+   "id": "b7747602b3ce08e2",
+   "execution_count": 17
+  },
+  {
+   "cell_type": "code",
+   "outputs": [
+    {
+     "data": {
+      "text/plain": "array([[15., 18., 24.],\n       [18., 19., 22.],\n       [16., 15., 18.],\n       [12., 12., 23.]])"
+     },
+     "execution_count": 18,
+     "metadata": {},
+     "output_type": "execute_result"
+    }
+   ],
+   "source": [
+    "np.random.choice(x, size=(4, 3))"
+   ],
+   "metadata": {
+    "collapsed": false,
+    "ExecuteTime": {
+     "end_time": "2024-07-16T07:27:39.999103100Z",
+     "start_time": "2024-07-16T07:27:39.922917Z"
+    }
+   },
+   "id": "4028b472c89c1043",
+   "execution_count": 18
+  },
+  {
+   "cell_type": "markdown",
+   "source": [
+    "* 按概率采样"
+   ],
+   "metadata": {
+    "collapsed": false
+   },
+   "id": "4b415e3b81f20de8"
+  },
+  {
+   "cell_type": "code",
+   "outputs": [
+    {
+     "data": {
+      "text/plain": "array([[16., 24., 21.],\n       [15., 12., 16.],\n       [14., 23., 22.],\n       [18., 24., 18.]])"
+     },
+     "execution_count": 19,
+     "metadata": {},
+     "output_type": "execute_result"
+    }
+   ],
+   "source": [
+    "np.random.choice(x, size=(4, 3), p=x / np.sum(x))"
+   ],
+   "metadata": {
+    "collapsed": false,
+    "ExecuteTime": {
+     "end_time": "2024-07-16T07:27:40.066600600Z",
+     "start_time": "2024-07-16T07:27:39.998102900Z"
+    }
+   },
+   "id": "498a6af9be90cb31",
+   "execution_count": 19
+  },
+  {
+   "cell_type": "markdown",
+   "source": [
+    "## 3.Numpy数组的性质\n",
+    "### 3.1数组的属性"
+   ],
+   "metadata": {
+    "collapsed": false
+   },
+   "id": "301793b744ef149"
+  },
+  {
+   "cell_type": "code",
+   "outputs": [
+    {
+     "data": {
+      "text/plain": "array([[4, 0, 3, 3],\n       [2, 2, 9, 7],\n       [8, 5, 3, 9]])"
+     },
+     "execution_count": 20,
+     "metadata": {},
+     "output_type": "execute_result"
+    }
+   ],
+   "source": [
+    "x = np.random.randint(10, size=(3, 4))\n",
+    "x"
+   ],
+   "metadata": {
+    "collapsed": false,
+    "ExecuteTime": {
+     "end_time": "2024-07-16T07:27:40.178434200Z",
+     "start_time": "2024-07-16T07:27:40.059586100Z"
+    }
+   },
+   "id": "65f5f95d68a91290",
+   "execution_count": 20
+  },
+  {
+   "cell_type": "markdown",
+   "source": [
+    "#### 3.1.1数组的形状shape"
+   ],
+   "metadata": {
+    "collapsed": false
+   },
+   "id": "c47f6bec31c5997d"
+  },
+  {
+   "cell_type": "code",
+   "outputs": [
+    {
+     "data": {
+      "text/plain": "(3, 4)"
+     },
+     "execution_count": 21,
+     "metadata": {},
+     "output_type": "execute_result"
+    }
+   ],
+   "source": [
+    "x.shape"
+   ],
+   "metadata": {
+    "collapsed": false,
+    "ExecuteTime": {
+     "end_time": "2024-07-16T07:27:40.201916100Z",
+     "start_time": "2024-07-16T07:27:40.147556600Z"
+    }
+   },
+   "id": "20ce23eda56605fa",
+   "execution_count": 21
+  },
+  {
+   "cell_type": "markdown",
+   "source": [
+    "#### 3.1.2数组的维度ndim"
+   ],
+   "metadata": {
+    "collapsed": false
+   },
+   "id": "bb1bc6249705b9c"
+  },
+  {
+   "cell_type": "code",
+   "outputs": [
+    {
+     "data": {
+      "text/plain": "2"
+     },
+     "execution_count": 22,
+     "metadata": {},
+     "output_type": "execute_result"
+    }
+   ],
+   "source": [
+    "x.ndim"
+   ],
+   "metadata": {
+    "collapsed": false,
+    "ExecuteTime": {
+     "end_time": "2024-07-16T07:27:40.290935300Z",
+     "start_time": "2024-07-16T07:27:40.190618900Z"
+    }
+   },
+   "id": "1299fe90db2fcab0",
+   "execution_count": 22
+  },
+  {
+   "cell_type": "code",
+   "outputs": [
+    {
+     "data": {
+      "text/plain": "array([0, 1, 2, 3, 4, 5, 6, 7, 8, 9])"
+     },
+     "execution_count": 23,
+     "metadata": {},
+     "output_type": "execute_result"
+    }
+   ],
+   "source": [
+    "y = np.arange(10)\n",
+    "y"
+   ],
+   "metadata": {
+    "collapsed": false,
+    "ExecuteTime": {
+     "end_time": "2024-07-16T07:27:40.325961700Z",
+     "start_time": "2024-07-16T07:27:40.276928900Z"
+    }
+   },
+   "id": "42b4088eb2322d43",
+   "execution_count": 23
+  },
+  {
+   "cell_type": "code",
+   "outputs": [
+    {
+     "data": {
+      "text/plain": "1"
+     },
+     "execution_count": 24,
+     "metadata": {},
+     "output_type": "execute_result"
+    }
+   ],
+   "source": [
+    "y.ndim"
+   ],
+   "metadata": {
+    "collapsed": false,
+    "ExecuteTime": {
+     "end_time": "2024-07-16T07:27:40.411289500Z",
+     "start_time": "2024-07-16T07:27:40.325961700Z"
+    }
+   },
+   "id": "c4c3777bcc59b6d4",
+   "execution_count": 24
+  },
+  {
+   "cell_type": "markdown",
+   "source": [
+    "#### 3.1.3数组的大小"
+   ],
+   "metadata": {
+    "collapsed": false
+   },
+   "id": "fb57735386514dd2"
+  },
+  {
+   "cell_type": "code",
+   "outputs": [
+    {
+     "data": {
+      "text/plain": "12"
+     },
+     "execution_count": 25,
+     "metadata": {},
+     "output_type": "execute_result"
+    }
+   ],
+   "source": [
+    "x.size"
+   ],
+   "metadata": {
+    "collapsed": false,
+    "ExecuteTime": {
+     "end_time": "2024-07-16T07:27:40.437411200Z",
+     "start_time": "2024-07-16T07:27:40.393116100Z"
+    }
+   },
+   "id": "885ff09b9c51b850",
+   "execution_count": 25
+  },
+  {
+   "cell_type": "markdown",
+   "source": [
+    "#### 3.1.4数组的数据类型"
+   ],
+   "metadata": {
+    "collapsed": false
+   },
+   "id": "ada9edf3d17aca1a"
+  },
+  {
+   "cell_type": "code",
+   "outputs": [
+    {
+     "data": {
+      "text/plain": "dtype('int32')"
+     },
+     "execution_count": 26,
+     "metadata": {},
+     "output_type": "execute_result"
+    }
+   ],
+   "source": [
+    "x.dtype"
+   ],
+   "metadata": {
+    "collapsed": false,
+    "ExecuteTime": {
+     "end_time": "2024-07-16T07:27:40.547709800Z",
+     "start_time": "2024-07-16T07:27:40.431411200Z"
+    }
+   },
+   "id": "bf05bb69fb88a58c",
+   "execution_count": 26
+  },
+  {
+   "cell_type": "markdown",
+   "source": [
+    "### 3.2数组索引\n",
+    "#### 3.2.1一维数组的索引"
+   ],
+   "metadata": {
+    "collapsed": false
+   },
+   "id": "91c393db38f86874"
+  },
+  {
+   "cell_type": "code",
+   "outputs": [
+    {
+     "data": {
+      "text/plain": "array([0, 1, 2, 3, 4, 5, 6, 7, 8, 9])"
+     },
+     "execution_count": 27,
+     "metadata": {},
+     "output_type": "execute_result"
+    }
+   ],
+   "source": [
+    "x1 = np.arange(10)\n",
+    "x1"
+   ],
+   "metadata": {
+    "collapsed": false,
+    "ExecuteTime": {
+     "end_time": "2024-07-16T07:27:40.585920600Z",
+     "start_time": "2024-07-16T07:27:40.518703800Z"
+    }
+   },
+   "id": "2e07e60b42448e3c",
+   "execution_count": 27
+  },
+  {
+   "cell_type": "code",
+   "outputs": [
+    {
+     "data": {
+      "text/plain": "0"
+     },
+     "execution_count": 28,
+     "metadata": {},
+     "output_type": "execute_result"
+    }
+   ],
+   "source": [
+    "x1[0]"
+   ],
+   "metadata": {
+    "collapsed": false,
+    "ExecuteTime": {
+     "end_time": "2024-07-16T07:27:40.667748700Z",
+     "start_time": "2024-07-16T07:27:40.572769800Z"
+    }
+   },
+   "id": "2d355d1349ed7d79",
+   "execution_count": 28
+  },
+  {
+   "cell_type": "code",
+   "outputs": [
+    {
+     "data": {
+      "text/plain": "5"
+     },
+     "execution_count": 29,
+     "metadata": {},
+     "output_type": "execute_result"
+    }
+   ],
+   "source": [
+    "x1[5]"
+   ],
+   "metadata": {
+    "collapsed": false,
+    "ExecuteTime": {
+     "end_time": "2024-07-16T07:27:40.729737500Z",
+     "start_time": "2024-07-16T07:27:40.667748700Z"
+    }
+   },
+   "id": "d7e4f9f0ea4d222e",
+   "execution_count": 29
+  },
+  {
+   "cell_type": "code",
+   "outputs": [
+    {
+     "data": {
+      "text/plain": "9"
+     },
+     "execution_count": 30,
+     "metadata": {},
+     "output_type": "execute_result"
+    }
+   ],
+   "source": [
+    "x1[-1]"
+   ],
+   "metadata": {
+    "collapsed": false,
+    "ExecuteTime": {
+     "end_time": "2024-07-16T07:27:40.803881300Z",
+     "start_time": "2024-07-16T07:27:40.721641800Z"
+    }
+   },
+   "id": "583e296d062382e0",
+   "execution_count": 30
+  },
+  {
+   "cell_type": "markdown",
+   "source": [
+    "#### 3.2.2多维数组的索引——以二维为例"
+   ],
+   "metadata": {
+    "collapsed": false
+   },
+   "id": "3a9ad18a29cec065"
+  },
+  {
+   "cell_type": "code",
+   "outputs": [
+    {
+     "data": {
+      "text/plain": "array([[ 1, 16, 10],\n       [14,  8, 18]])"
+     },
+     "execution_count": 31,
+     "metadata": {},
+     "output_type": "execute_result"
+    }
+   ],
+   "source": [
+    "x2 = np.random.randint(0, 20, (2, 3))\n",
+    "x2"
+   ],
+   "metadata": {
+    "collapsed": false,
+    "ExecuteTime": {
+     "end_time": "2024-07-16T07:27:40.826266700Z",
+     "start_time": "2024-07-16T07:27:40.785701100Z"
+    }
+   },
+   "id": "bc47b0a3a39f9453",
+   "execution_count": 31
+  },
+  {
+   "cell_type": "code",
+   "outputs": [
+    {
+     "data": {
+      "text/plain": "1"
+     },
+     "execution_count": 32,
+     "metadata": {},
+     "output_type": "execute_result"
+    }
+   ],
+   "source": [
+    "x2[0, 0]"
+   ],
+   "metadata": {
+    "collapsed": false,
+    "ExecuteTime": {
+     "end_time": "2024-07-16T07:27:40.967855Z",
+     "start_time": "2024-07-16T07:27:40.823262800Z"
+    }
+   },
+   "id": "d6a1e51e3ea1bc27",
+   "execution_count": 32
+  },
+  {
+   "cell_type": "code",
+   "outputs": [
+    {
+     "data": {
+      "text/plain": "8"
+     },
+     "execution_count": 33,
+     "metadata": {},
+     "output_type": "execute_result"
+    }
+   ],
+   "source": [
+    "x2[1][1]"
+   ],
+   "metadata": {
+    "collapsed": false,
+    "ExecuteTime": {
+     "end_time": "2024-07-16T07:27:41.027395800Z",
+     "start_time": "2024-07-16T07:27:40.951843300Z"
+    }
+   },
+   "id": "cd167f5761e8d430",
+   "execution_count": 33
+  },
+  {
+   "cell_type": "markdown",
+   "source": [
+    "**注意：numpy数组的数据类型是固定的，向一个整型数组插入一个浮点值，浮点值会向下进行取整**"
+   ],
+   "metadata": {
+    "collapsed": false
+   },
+   "id": "825af4b2ce2a810e"
+  },
+  {
+   "cell_type": "code",
+   "outputs": [
+    {
+     "data": {
+      "text/plain": "array([[ 1, 16, 10],\n       [14,  8, 18]])"
+     },
+     "execution_count": 34,
+     "metadata": {},
+     "output_type": "execute_result"
+    }
+   ],
+   "source": [
+    "x2[0, 0] = 1.618\n",
+    "x2"
+   ],
+   "metadata": {
+    "collapsed": false,
+    "ExecuteTime": {
+     "end_time": "2024-07-16T07:27:41.109792400Z",
+     "start_time": "2024-07-16T07:27:40.999389900Z"
+    }
+   },
+   "id": "da7fa548da9e1b49",
+   "execution_count": 34
+  },
+  {
+   "cell_type": "markdown",
+   "source": [
+    "### 3.3数组的切片\n",
+    "#### 3.3.1一维数组——跟列表一样"
+   ],
+   "metadata": {
+    "collapsed": false
+   },
+   "id": "1ecf9d7d191afa7c"
+  },
+  {
+   "cell_type": "code",
+   "outputs": [
+    {
+     "data": {
+      "text/plain": "array([0, 1, 2, 3, 4, 5, 6, 7, 8, 9])"
+     },
+     "execution_count": 35,
+     "metadata": {},
+     "output_type": "execute_result"
+    }
+   ],
+   "source": [
+    "x1 = np.arange(10)\n",
+    "x1\n"
+   ],
+   "metadata": {
+    "collapsed": false,
+    "ExecuteTime": {
+     "end_time": "2024-07-16T07:27:41.147722500Z",
+     "start_time": "2024-07-16T07:27:41.092307300Z"
+    }
+   },
+   "id": "58ab8299a0e98b29",
+   "execution_count": 35
+  },
+  {
+   "cell_type": "code",
+   "outputs": [
+    {
+     "data": {
+      "text/plain": "array([0, 1, 2])"
+     },
+     "execution_count": 36,
+     "metadata": {},
+     "output_type": "execute_result"
+    }
+   ],
+   "source": [
+    "x1[:3]"
+   ],
+   "metadata": {
+    "collapsed": false,
+    "ExecuteTime": {
+     "end_time": "2024-07-16T07:27:41.237251300Z",
+     "start_time": "2024-07-16T07:27:41.143717500Z"
+    }
+   },
+   "id": "1313ed40b857dadd",
+   "execution_count": 36
+  },
+  {
+   "cell_type": "code",
+   "outputs": [
+    {
+     "data": {
+      "text/plain": "array([3, 4, 5, 6, 7, 8, 9])"
+     },
+     "execution_count": 37,
+     "metadata": {},
+     "output_type": "execute_result"
+    }
+   ],
+   "source": [
+    "x1[3:]"
+   ],
+   "metadata": {
+    "collapsed": false,
+    "ExecuteTime": {
+     "end_time": "2024-07-16T07:27:41.267254100Z",
+     "start_time": "2024-07-16T07:27:41.218621200Z"
+    }
+   },
+   "id": "8f9d5a032430a311",
+   "execution_count": 37
+  },
+  {
+   "cell_type": "code",
+   "outputs": [
+    {
+     "data": {
+      "text/plain": "array([9, 8, 7, 6, 5, 4, 3, 2, 1, 0])"
+     },
+     "execution_count": 38,
+     "metadata": {},
+     "output_type": "execute_result"
+    }
+   ],
+   "source": [
+    "x1[::-1]"
+   ],
+   "metadata": {
+    "collapsed": false,
+    "ExecuteTime": {
+     "end_time": "2024-07-16T07:27:41.330779100Z",
+     "start_time": "2024-07-16T07:27:41.256246700Z"
+    }
+   },
+   "id": "122053e8ac2ea14b",
+   "execution_count": 38
+  },
+  {
+   "cell_type": "markdown",
+   "source": [
+    "#### 3.3.2多维数组——以二维为例"
+   ],
+   "metadata": {
+    "collapsed": false
+   },
+   "id": "e0b071b3f92794e8"
+  },
+  {
+   "cell_type": "code",
+   "outputs": [
+    {
+     "data": {
+      "text/plain": "array([[ 7, 16,  9,  0],\n       [19, 19, 17, 17],\n       [ 9,  9,  7, 14]])"
+     },
+     "execution_count": 39,
+     "metadata": {},
+     "output_type": "execute_result"
+    }
+   ],
+   "source": [
+    "x2 = np.random.randint(20, size=(3, 4))\n",
+    "x2"
+   ],
+   "metadata": {
+    "collapsed": false,
+    "ExecuteTime": {
+     "end_time": "2024-07-16T07:27:41.370227Z",
+     "start_time": "2024-07-16T07:27:41.315280200Z"
+    }
+   },
+   "id": "30a66c10e73c30b7",
+   "execution_count": 39
+  },
+  {
+   "cell_type": "code",
+   "outputs": [
+    {
+     "data": {
+      "text/plain": "array([[ 7, 16,  9],\n       [19, 19, 17]])"
+     },
+     "execution_count": 40,
+     "metadata": {},
+     "output_type": "execute_result"
+    }
+   ],
+   "source": [
+    "x2[:2, :3]  # 前两行，前三列"
+   ],
+   "metadata": {
+    "collapsed": false,
+    "ExecuteTime": {
+     "end_time": "2024-07-16T07:27:41.449504700Z",
+     "start_time": "2024-07-16T07:27:41.369225300Z"
+    }
+   },
+   "id": "33f5cb9ac8230d4d",
+   "execution_count": 40
+  },
+  {
+   "cell_type": "code",
+   "outputs": [
+    {
+     "data": {
+      "text/plain": "array([[ 7,  9],\n       [19, 17]])"
+     },
+     "execution_count": 41,
+     "metadata": {},
+     "output_type": "execute_result"
+    }
+   ],
+   "source": [
+    "x2[:2, 0:3:2]  # 前两行，前三列（每隔一列）"
+   ],
+   "metadata": {
+    "collapsed": false,
+    "ExecuteTime": {
+     "end_time": "2024-07-16T07:27:41.479776Z",
+     "start_time": "2024-07-16T07:27:41.428891700Z"
+    }
+   },
+   "id": "4825a98beaba65e2",
+   "execution_count": 41
+  },
+  {
+   "cell_type": "code",
+   "outputs": [
+    {
+     "data": {
+      "text/plain": "array([[14,  7,  9,  9],\n       [17, 17, 19, 19],\n       [ 0,  9, 16,  7]])"
+     },
+     "execution_count": 42,
+     "metadata": {},
+     "output_type": "execute_result"
+    }
+   ],
+   "source": [
+    "x2[::-1, ::-1]"
+   ],
+   "metadata": {
+    "collapsed": false,
+    "ExecuteTime": {
+     "end_time": "2024-07-16T07:27:41.572012800Z",
+     "start_time": "2024-07-16T07:27:41.472596600Z"
+    }
+   },
+   "id": "8df17f9fad3e2f91",
+   "execution_count": 42
+  },
+  {
+   "cell_type": "markdown",
+   "source": [
+    "#### 3.3.3获取数组的行和列"
+   ],
+   "metadata": {
+    "collapsed": false
+   },
+   "id": "8c6ef881486e243e"
+  },
+  {
+   "cell_type": "code",
+   "outputs": [
+    {
+     "data": {
+      "text/plain": "array([[ 8, 10,  5,  9],\n       [ 6, 14,  6, 16],\n       [15,  8, 16, 17]])"
+     },
+     "execution_count": 43,
+     "metadata": {},
+     "output_type": "execute_result"
+    }
+   ],
+   "source": [
+    "x3 = np.random.randint(20, size=(3, 4))\n",
+    "x3"
+   ],
+   "metadata": {
+    "collapsed": false,
+    "ExecuteTime": {
+     "end_time": "2024-07-16T07:27:41.618804600Z",
+     "start_time": "2024-07-16T07:27:41.546010700Z"
+    }
+   },
+   "id": "d29a5cd4f90ce084",
+   "execution_count": 43
+  },
+  {
+   "cell_type": "code",
+   "outputs": [
+    {
+     "data": {
+      "text/plain": "array([ 6, 14,  6, 16])"
+     },
+     "execution_count": 44,
+     "metadata": {},
+     "output_type": "execute_result"
+    }
+   ],
+   "source": [
+    "x3[1, :]  # 第一行  从0开始计数"
+   ],
+   "metadata": {
+    "collapsed": false,
+    "ExecuteTime": {
+     "end_time": "2024-07-16T07:27:41.683803600Z",
+     "start_time": "2024-07-16T07:27:41.592373300Z"
+    }
+   },
+   "id": "2d20402c05e0b975",
+   "execution_count": 44
+  },
+  {
+   "cell_type": "code",
+   "outputs": [
+    {
+     "data": {
+      "text/plain": "array([ 6, 14,  6, 16])"
+     },
+     "execution_count": 45,
+     "metadata": {},
+     "output_type": "execute_result"
+    }
+   ],
+   "source": [
+    "x3[1]  # 第一行简写"
+   ],
+   "metadata": {
+    "collapsed": false,
+    "ExecuteTime": {
+     "end_time": "2024-07-16T07:27:41.729507400Z",
+     "start_time": "2024-07-16T07:27:41.670726Z"
+    }
+   },
+   "id": "a9bc0c400e020f13",
+   "execution_count": 45
+  },
+  {
+   "cell_type": "code",
+   "outputs": [
+    {
+     "data": {
+      "text/plain": "array([ 5,  6, 16])"
+     },
+     "execution_count": 46,
+     "metadata": {},
+     "output_type": "execute_result"
+    }
+   ],
+   "source": [
+    "x3[:, 2]  # 第二列   从0开始计数"
+   ],
+   "metadata": {
+    "collapsed": false,
+    "ExecuteTime": {
+     "end_time": "2024-07-16T07:27:41.800030500Z",
+     "start_time": "2024-07-16T07:27:41.722254700Z"
+    }
+   },
+   "id": "8df7852854d225e8",
+   "execution_count": 46
+  },
+  {
+   "cell_type": "markdown",
+   "source": [
+    "#### 3.3.4切片获取的是视图，而非副本"
+   ],
+   "metadata": {
+    "collapsed": false
+   },
+   "id": "dbcf6aa48271c7dc"
+  },
+  {
+   "cell_type": "code",
+   "outputs": [
+    {
+     "data": {
+      "text/plain": "array([[13,  9,  2, 18],\n       [ 6,  5, 13, 13],\n       [14,  0,  7, 12]])"
+     },
+     "execution_count": 47,
+     "metadata": {},
+     "output_type": "execute_result"
+    }
+   ],
+   "source": [
+    "x4 = np.random.randint(20, size=(3, 4))\n",
+    "x4"
+   ],
+   "metadata": {
+    "collapsed": false,
+    "ExecuteTime": {
+     "end_time": "2024-07-16T07:27:41.829026200Z",
+     "start_time": "2024-07-16T07:27:41.781026900Z"
+    }
+   },
+   "id": "8b90a13be1f0c09e",
+   "execution_count": 47
+  },
+  {
+   "cell_type": "code",
+   "outputs": [
+    {
+     "data": {
+      "text/plain": "array([[13,  9],\n       [ 6,  5]])"
+     },
+     "execution_count": 48,
+     "metadata": {},
+     "output_type": "execute_result"
+    }
+   ],
+   "source": [
+    "x5 = x4[:2, :2]\n",
+    "x5"
+   ],
+   "metadata": {
+    "collapsed": false,
+    "ExecuteTime": {
+     "end_time": "2024-07-16T07:27:41.913577100Z",
+     "start_time": "2024-07-16T07:27:41.828026400Z"
+    }
+   },
+   "id": "429dcc3c2b4124a8",
+   "execution_count": 48
+  },
+  {
+   "cell_type": "markdown",
+   "source": [
+    "**注意：试图元素发生修改，则原数组亦发生相应修改**"
+   ],
+   "metadata": {
+    "collapsed": false
+   },
+   "id": "3b3c24937448fded"
+  },
+  {
+   "cell_type": "code",
+   "outputs": [
+    {
+     "data": {
+      "text/plain": "array([[0, 9],\n       [6, 5]])"
+     },
+     "execution_count": 49,
+     "metadata": {},
+     "output_type": "execute_result"
+    }
+   ],
+   "source": [
+    "x5[0, 0] = 0\n",
+    "x5"
+   ],
+   "metadata": {
+    "collapsed": false,
+    "ExecuteTime": {
+     "end_time": "2024-07-16T07:27:41.939581400Z",
+     "start_time": "2024-07-16T07:27:41.893832400Z"
+    }
+   },
+   "id": "77de8e1c7070b8b7",
+   "execution_count": 49
+  },
+  {
+   "cell_type": "code",
+   "outputs": [
+    {
+     "data": {
+      "text/plain": "array([[ 0,  9,  2, 18],\n       [ 6,  5, 13, 13],\n       [14,  0,  7, 12]])"
+     },
+     "execution_count": 50,
+     "metadata": {},
+     "output_type": "execute_result"
+    }
+   ],
+   "source": [
+    "x4"
+   ],
+   "metadata": {
+    "collapsed": false,
+    "ExecuteTime": {
+     "end_time": "2024-07-16T07:27:42.022923300Z",
+     "start_time": "2024-07-16T07:27:41.932579700Z"
+    }
+   },
+   "id": "a21c7b1cd8a21dd0",
+   "execution_count": 50
+  },
+  {
+   "cell_type": "markdown",
+   "source": [
+    "**修改切片的安全方式：copy**"
+   ],
+   "metadata": {
+    "collapsed": false
+   },
+   "id": "d2269fd172fbbc03"
+  },
+  {
+   "cell_type": "code",
+   "outputs": [
+    {
+     "data": {
+      "text/plain": "array([[15, 19,  0, 16],\n       [ 4,  2,  4,  9],\n       [ 4, 18, 14, 11]])"
+     },
+     "execution_count": 51,
+     "metadata": {},
+     "output_type": "execute_result"
+    }
+   ],
+   "source": [
+    "x4 = np.random.randint(20, size=(3, 4))\n",
+    "x4"
+   ],
+   "metadata": {
+    "collapsed": false,
+    "ExecuteTime": {
+     "end_time": "2024-07-16T07:27:42.059922Z",
+     "start_time": "2024-07-16T07:27:42.004696200Z"
+    }
+   },
+   "id": "391d3640444ac853",
+   "execution_count": 51
+  },
+  {
+   "cell_type": "code",
+   "outputs": [
+    {
+     "data": {
+      "text/plain": "array([[15, 19],\n       [ 4,  2]])"
+     },
+     "execution_count": 52,
+     "metadata": {},
+     "output_type": "execute_result"
+    }
+   ],
+   "source": [
+    "x6 = x4[:2, :2].copy()\n",
+    "x6"
+   ],
+   "metadata": {
+    "collapsed": false,
+    "ExecuteTime": {
+     "end_time": "2024-07-16T07:27:42.126694900Z",
+     "start_time": "2024-07-16T07:27:42.044922100Z"
+    }
+   },
+   "id": "f6ee0609f97701c6",
+   "execution_count": 52
+  },
+  {
+   "cell_type": "code",
+   "outputs": [
+    {
+     "data": {
+      "text/plain": "array([[ 0, 19],\n       [ 4,  2]])"
+     },
+     "execution_count": 53,
+     "metadata": {},
+     "output_type": "execute_result"
+    }
+   ],
+   "source": [
+    "x6[0, 0] = 0\n",
+    "x6"
+   ],
+   "metadata": {
+    "collapsed": false,
+    "ExecuteTime": {
+     "end_time": "2024-07-16T07:27:42.181768800Z",
+     "start_time": "2024-07-16T07:27:42.126694900Z"
+    }
+   },
+   "id": "49f0ddb5054e5505",
+   "execution_count": 53
+  },
+  {
+   "cell_type": "code",
+   "outputs": [
+    {
+     "data": {
+      "text/plain": "array([[15, 19,  0, 16],\n       [ 4,  2,  4,  9],\n       [ 4, 18, 14, 11]])"
+     },
+     "execution_count": 54,
+     "metadata": {},
+     "output_type": "execute_result"
+    }
+   ],
+   "source": [
+    "x4"
+   ],
+   "metadata": {
+    "collapsed": false,
+    "ExecuteTime": {
+     "end_time": "2024-07-16T07:27:42.259544100Z",
+     "start_time": "2024-07-16T07:27:42.166696900Z"
+    }
+   },
+   "id": "d91c93a889b428fb",
+   "execution_count": 54
+  },
+  {
+   "cell_type": "markdown",
+   "source": [
+    "### 3.4数组的变形"
+   ],
+   "metadata": {
+    "collapsed": false
+   },
+   "id": "a292cfe7c4cf5dde"
+  },
+  {
+   "cell_type": "code",
+   "outputs": [
+    {
+     "data": {
+      "text/plain": "array([7, 0, 4, 9, 0, 1, 6, 4, 8, 2, 9, 3])"
+     },
+     "execution_count": 55,
+     "metadata": {},
+     "output_type": "execute_result"
+    }
+   ],
+   "source": [
+    "x5 = np.random.randint(0, 10, (12,))\n",
+    "x5"
+   ],
+   "metadata": {
+    "collapsed": false,
+    "ExecuteTime": {
+     "end_time": "2024-07-16T07:27:42.271553Z",
+     "start_time": "2024-07-16T07:27:42.232327700Z"
+    }
+   },
+   "id": "6b630b55277a68e3",
+   "execution_count": 55
+  },
+  {
+   "cell_type": "code",
+   "outputs": [
+    {
+     "data": {
+      "text/plain": "(12,)"
+     },
+     "execution_count": 56,
+     "metadata": {},
+     "output_type": "execute_result"
+    }
+   ],
+   "source": [
+    "x5.shape"
+   ],
+   "metadata": {
+    "collapsed": false,
+    "ExecuteTime": {
+     "end_time": "2024-07-16T07:27:42.368422Z",
+     "start_time": "2024-07-16T07:27:42.270552800Z"
+    }
+   },
+   "id": "a9eb01eb2409e6ea",
+   "execution_count": 56
+  },
+  {
+   "cell_type": "code",
+   "outputs": [
+    {
+     "data": {
+      "text/plain": "array([[7, 0, 4, 9],\n       [0, 1, 6, 4],\n       [8, 2, 9, 3]])"
+     },
+     "execution_count": 57,
+     "metadata": {},
+     "output_type": "execute_result"
+    }
+   ],
+   "source": [
+    "x6 = x5.reshape(3, 4)\n",
+    "x6"
+   ],
+   "metadata": {
+    "collapsed": false,
+    "ExecuteTime": {
+     "end_time": "2024-07-16T07:27:42.388332900Z",
+     "start_time": "2024-07-16T07:27:42.342071Z"
+    }
+   },
+   "id": "2f0c320b56e3dfc7",
+   "execution_count": 57
+  },
+  {
+   "cell_type": "markdown",
+   "source": [
+    "**注意：reshape返回的是视图，而非副本**"
+   ],
+   "metadata": {
+    "collapsed": false
+   },
+   "id": "bbe44eca42e36a51"
+  },
+  {
+   "cell_type": "code",
+   "outputs": [
+    {
+     "data": {
+      "text/plain": "array([0, 0, 4, 9, 0, 1, 6, 4, 8, 2, 9, 3])"
+     },
+     "execution_count": 58,
+     "metadata": {},
+     "output_type": "execute_result"
+    }
+   ],
+   "source": [
+    "x6[0, 0] = 0\n",
+    "x5"
+   ],
+   "metadata": {
+    "collapsed": false,
+    "ExecuteTime": {
+     "end_time": "2024-07-16T07:27:42.489905400Z",
+     "start_time": "2024-07-16T07:27:42.388332900Z"
+    }
+   },
+   "id": "bf2139438f04b4cd",
+   "execution_count": 58
+  },
+  {
+   "cell_type": "markdown",
+   "source": [
+    "#### 3.4.1一维向量转行向量"
+   ],
+   "metadata": {
+    "collapsed": false
+   },
+   "id": "9c50100084ed73a0"
+  },
+  {
+   "cell_type": "code",
+   "outputs": [
+    {
+     "data": {
+      "text/plain": "array([[0, 0, 4, 9, 0, 1, 6, 4, 8, 2, 9, 3]])"
+     },
+     "execution_count": 59,
+     "metadata": {},
+     "output_type": "execute_result"
+    }
+   ],
+   "source": [
+    "x7 = x5.reshape(1, x5.shape[0])\n",
+    "x7"
+   ],
+   "metadata": {
+    "collapsed": false,
+    "ExecuteTime": {
+     "end_time": "2024-07-16T07:27:42.511254300Z",
+     "start_time": "2024-07-16T07:27:42.465043Z"
+    }
+   },
+   "id": "210978a8244f54b9",
+   "execution_count": 59
+  },
+  {
+   "cell_type": "code",
+   "outputs": [
+    {
+     "data": {
+      "text/plain": "array([[0, 0, 4, 9, 0, 1, 6, 4, 8, 2, 9, 3]])"
+     },
+     "execution_count": 60,
+     "metadata": {},
+     "output_type": "execute_result"
+    }
+   ],
+   "source": [
+    "x8 = x5[np.newaxis, :]\n",
+    "x8"
+   ],
+   "metadata": {
+    "collapsed": false,
+    "ExecuteTime": {
+     "end_time": "2024-07-16T07:27:42.598683300Z",
+     "start_time": "2024-07-16T07:27:42.511254300Z"
+    }
+   },
+   "id": "cb19b3c6f43e837e",
+   "execution_count": 60
+  },
+  {
+   "cell_type": "markdown",
+   "source": [
+    "#### 3.4.2一维向量转列向量"
+   ],
+   "metadata": {
+    "collapsed": false
+   },
+   "id": "1da809d1e2d58099"
+  },
+  {
+   "cell_type": "code",
+   "outputs": [
+    {
+     "data": {
+      "text/plain": "array([[0],\n       [0],\n       [4],\n       [9],\n       [0],\n       [1],\n       [6],\n       [4],\n       [8],\n       [2],\n       [9],\n       [3]])"
+     },
+     "execution_count": 61,
+     "metadata": {},
+     "output_type": "execute_result"
+    }
+   ],
+   "source": [
+    "x7 = x5.reshape(x5.shape[0], 1)\n",
+    "x7"
+   ],
+   "metadata": {
+    "collapsed": false,
+    "ExecuteTime": {
+     "end_time": "2024-07-16T07:27:42.617678200Z",
+     "start_time": "2024-07-16T07:27:42.576489Z"
+    }
+   },
+   "id": "ed0516e028e74c51",
+   "execution_count": 61
+  },
+  {
+   "cell_type": "code",
+   "outputs": [
+    {
+     "data": {
+      "text/plain": "array([[0],\n       [0],\n       [4],\n       [9],\n       [0],\n       [1],\n       [6],\n       [4],\n       [8],\n       [2],\n       [9],\n       [3]])"
+     },
+     "execution_count": 62,
+     "metadata": {},
+     "output_type": "execute_result"
+    }
+   ],
+   "source": [
+    "x8 = x5[:, np.newaxis]\n",
+    "x8"
+   ],
+   "metadata": {
+    "collapsed": false,
+    "ExecuteTime": {
+     "end_time": "2024-07-16T07:27:42.707444300Z",
+     "start_time": "2024-07-16T07:27:42.617678200Z"
+    }
+   },
+   "id": "d864e8892cb99d3d",
+   "execution_count": 62
+  },
+  {
+   "cell_type": "markdown",
+   "source": [
+    "#### 3.4.3多维向量转一维向量"
+   ],
+   "metadata": {
+    "collapsed": false
+   },
+   "id": "17f783b5225746e3"
+  },
+  {
+   "cell_type": "markdown",
+   "source": [],
+   "metadata": {
+    "collapsed": false
+   },
+   "id": "d77205dcaf5fb3ca"
+  },
+  {
+   "cell_type": "code",
+   "outputs": [
+    {
+     "data": {
+      "text/plain": "array([[2, 5, 3, 4],\n       [0, 2, 2, 8],\n       [5, 5, 7, 8]])"
+     },
+     "execution_count": 63,
+     "metadata": {},
+     "output_type": "execute_result"
+    }
+   ],
+   "source": [
+    "x6 = np.random.randint(0, 10, (3, 4))\n",
+    "x6"
+   ],
+   "metadata": {
+    "collapsed": false,
+    "ExecuteTime": {
+     "end_time": "2024-07-16T07:27:42.726518900Z",
+     "start_time": "2024-07-16T07:27:42.693205200Z"
+    }
+   },
+   "id": "75a561d00f340f3f",
+   "execution_count": 63
+  },
+  {
+   "cell_type": "markdown",
+   "source": [
+    "flatten返回的是副本"
+   ],
+   "metadata": {
+    "collapsed": false
+   },
+   "id": "289cfa31c1f13bcd"
+  },
+  {
+   "cell_type": "markdown",
+   "source": [],
+   "metadata": {
+    "collapsed": false
+   },
+   "id": "6bcc9d38ad3799e0"
+  },
+  {
+   "cell_type": "code",
+   "outputs": [
+    {
+     "data": {
+      "text/plain": "array([2, 5, 3, 4, 0, 2, 2, 8, 5, 5, 7, 8])"
+     },
+     "execution_count": 64,
+     "metadata": {},
+     "output_type": "execute_result"
+    }
+   ],
+   "source": [
+    "x9 = x6.flatten()\n",
+    "x9"
+   ],
+   "metadata": {
+    "collapsed": false,
+    "ExecuteTime": {
+     "end_time": "2024-07-16T07:27:42.816543300Z",
+     "start_time": "2024-07-16T07:27:42.718514800Z"
+    }
+   },
+   "id": "1a4457de94f38f45",
+   "execution_count": 64
+  },
+  {
+   "cell_type": "code",
+   "outputs": [
+    {
+     "data": {
+      "text/plain": "array([[2, 5, 3, 4],\n       [0, 2, 2, 8],\n       [5, 5, 7, 8]])"
+     },
+     "execution_count": 65,
+     "metadata": {},
+     "output_type": "execute_result"
+    }
+   ],
+   "source": [
+    "x9[0] = 0\n",
+    "x6"
+   ],
+   "metadata": {
+    "collapsed": false,
+    "ExecuteTime": {
+     "end_time": "2024-07-16T07:27:42.849546600Z",
+     "start_time": "2024-07-16T07:27:42.792421800Z"
+    }
+   },
+   "id": "67ae1100d8afca58",
+   "execution_count": 65
+  },
+  {
+   "cell_type": "markdown",
+   "source": [
+    "ravel返回的是视图"
+   ],
+   "metadata": {
+    "collapsed": false
+   },
+   "id": "23ce1639b8202e25"
+  },
+  {
+   "cell_type": "code",
+   "outputs": [
+    {
+     "data": {
+      "text/plain": "array([2, 5, 3, 4, 0, 2, 2, 8, 5, 5, 7, 8])"
+     },
+     "execution_count": 66,
+     "metadata": {},
+     "output_type": "execute_result"
+    }
+   ],
+   "source": [
+    "x10 = x6.ravel()\n",
+    "x10"
+   ],
+   "metadata": {
+    "collapsed": false,
+    "ExecuteTime": {
+     "end_time": "2024-07-16T07:27:42.929197300Z",
+     "start_time": "2024-07-16T07:27:42.838538800Z"
+    }
+   },
+   "id": "9ea1b9f357de538a",
+   "execution_count": 66
+  },
+  {
+   "cell_type": "code",
+   "outputs": [
+    {
+     "data": {
+      "text/plain": "array([[0, 5, 3, 4],\n       [0, 2, 2, 8],\n       [5, 5, 7, 8]])"
+     },
+     "execution_count": 67,
+     "metadata": {},
+     "output_type": "execute_result"
+    }
+   ],
+   "source": [
+    "x10[0] = 0\n",
+    "x6"
+   ],
+   "metadata": {
+    "collapsed": false,
+    "ExecuteTime": {
+     "end_time": "2024-07-16T07:27:42.952407700Z",
+     "start_time": "2024-07-16T07:27:42.899199Z"
+    }
+   },
+   "id": "7498e8a5b8325594",
+   "execution_count": 67
+  },
+  {
+   "cell_type": "markdown",
+   "source": [
+    "reshape返回的是视图"
+   ],
+   "metadata": {
+    "collapsed": false
+   },
+   "id": "fe3314b50120416"
+  },
+  {
+   "cell_type": "code",
+   "outputs": [
+    {
+     "data": {
+      "text/plain": "array([0, 5, 3, 4, 0, 2, 2, 8, 5, 5, 7, 8])"
+     },
+     "execution_count": 68,
+     "metadata": {},
+     "output_type": "execute_result"
+    }
+   ],
+   "source": [
+    "x11 = x6.reshape(-1)\n",
+    "x11"
+   ],
+   "metadata": {
+    "collapsed": false,
+    "ExecuteTime": {
+     "end_time": "2024-07-16T07:27:43.030935600Z",
+     "start_time": "2024-07-16T07:27:42.947643200Z"
+    }
+   },
+   "id": "3b71d3b9d72b6e62",
+   "execution_count": 68
+  },
+  {
+   "cell_type": "code",
+   "outputs": [
+    {
+     "data": {
+      "text/plain": "array([[10,  5,  3,  4],\n       [ 0,  2,  2,  8],\n       [ 5,  5,  7,  8]])"
+     },
+     "execution_count": 69,
+     "metadata": {},
+     "output_type": "execute_result"
+    }
+   ],
+   "source": [
+    "x11[0] = 10\n",
+    "x6"
+   ],
+   "metadata": {
+    "collapsed": false,
+    "ExecuteTime": {
+     "end_time": "2024-07-16T07:27:43.051995200Z",
+     "start_time": "2024-07-16T07:27:43.012935300Z"
+    }
+   },
+   "id": "e2d843788ae5c517",
+   "execution_count": 69
+  },
+  {
+   "cell_type": "markdown",
+   "source": [
+    "### 3.5数组的拼接"
+   ],
+   "metadata": {
+    "collapsed": false
+   },
+   "id": "fb822181172fad9d"
+  },
+  {
+   "cell_type": "code",
+   "outputs": [],
+   "source": [
+    "x1 = np.array([[1, 2, 3],\n",
+    "               [4, 5, 6]])\n",
+    "x2 = np.array([[7, 8, 9],\n",
+    "               [0, 1, 2]])"
+   ],
+   "metadata": {
+    "collapsed": false,
+    "ExecuteTime": {
+     "end_time": "2024-07-16T07:27:43.140723500Z",
+     "start_time": "2024-07-16T07:27:43.050989500Z"
+    }
+   },
+   "id": "b88e657a9baf2557",
+   "execution_count": 70
+  },
+  {
+   "cell_type": "markdown",
+   "source": [
+    "#### 3.5.1水平拼接——非视图"
+   ],
+   "metadata": {
+    "collapsed": false
+   },
+   "id": "59a6bf687ba6afa5"
+  },
+  {
+   "cell_type": "code",
+   "outputs": [
+    {
+     "data": {
+      "text/plain": "array([[1, 2, 3, 7, 8, 9],\n       [4, 5, 6, 0, 1, 2]])"
+     },
+     "execution_count": 71,
+     "metadata": {},
+     "output_type": "execute_result"
+    }
+   ],
+   "source": [
+    "x3 = np.hstack([x1, x2])\n",
+    "x3"
+   ],
+   "metadata": {
+    "collapsed": false,
+    "ExecuteTime": {
+     "end_time": "2024-07-16T07:27:43.169804200Z",
+     "start_time": "2024-07-16T07:27:43.120694300Z"
+    }
+   },
+   "id": "d1e892a7fded23c2",
+   "execution_count": 71
+  },
+  {
+   "cell_type": "code",
+   "outputs": [
+    {
+     "data": {
+      "text/plain": "array([[1, 2, 3],\n       [4, 5, 6]])"
+     },
+     "execution_count": 72,
+     "metadata": {},
+     "output_type": "execute_result"
+    }
+   ],
+   "source": [
+    "x3[0][0] = 0\n",
+    "x1"
+   ],
+   "metadata": {
+    "collapsed": false,
+    "ExecuteTime": {
+     "end_time": "2024-07-16T07:27:43.230337300Z",
+     "start_time": "2024-07-16T07:27:43.155635500Z"
+    }
+   },
+   "id": "96e8cf8d745903e3",
+   "execution_count": 72
+  },
+  {
+   "cell_type": "code",
+   "outputs": [
+    {
+     "data": {
+      "text/plain": "array([[1, 2, 3, 7, 8, 9],\n       [4, 5, 6, 0, 1, 2]])"
+     },
+     "execution_count": 73,
+     "metadata": {},
+     "output_type": "execute_result"
+    }
+   ],
+   "source": [
+    "x4 = np.c_[x1, x2]\n",
+    "x4"
+   ],
+   "metadata": {
+    "collapsed": false,
+    "ExecuteTime": {
+     "end_time": "2024-07-16T07:27:43.285807500Z",
+     "start_time": "2024-07-16T07:27:43.230337300Z"
+    }
+   },
+   "id": "361f42d8e0823fe8",
+   "execution_count": 73
+  },
+  {
+   "cell_type": "code",
+   "outputs": [
+    {
+     "data": {
+      "text/plain": "array([[1, 2, 3],\n       [4, 5, 6]])"
+     },
+     "execution_count": 74,
+     "metadata": {},
+     "output_type": "execute_result"
+    }
+   ],
+   "source": [
+    "x4[0][0] = 0\n",
+    "x1"
+   ],
+   "metadata": {
+    "collapsed": false,
+    "ExecuteTime": {
+     "end_time": "2024-07-16T07:27:43.338740700Z",
+     "start_time": "2024-07-16T07:27:43.262364900Z"
+    }
+   },
+   "id": "6d7f50bf5e2c6ac2",
+   "execution_count": 74
+  },
+  {
+   "cell_type": "markdown",
+   "source": [
+    "#### 3.5.2垂直拼接——非视图"
+   ],
+   "metadata": {
+    "collapsed": false
+   },
+   "id": "93a1a0d8e93adc36"
+  },
+  {
+   "cell_type": "code",
+   "outputs": [
+    {
+     "data": {
+      "text/plain": "array([[1, 2, 3],\n       [4, 5, 6],\n       [7, 8, 9],\n       [0, 1, 2]])"
+     },
+     "execution_count": 75,
+     "metadata": {},
+     "output_type": "execute_result"
+    }
+   ],
+   "source": [
+    "x5 = np.vstack([x1, x2])\n",
+    "x5"
+   ],
+   "metadata": {
+    "collapsed": false,
+    "ExecuteTime": {
+     "end_time": "2024-07-16T07:27:43.394523100Z",
+     "start_time": "2024-07-16T07:27:43.322808200Z"
+    }
+   },
+   "id": "ee2e2d45d01a9360",
+   "execution_count": 75
+  },
+  {
+   "cell_type": "code",
+   "outputs": [
+    {
+     "data": {
+      "text/plain": "array([[1, 2, 3],\n       [4, 5, 6],\n       [7, 8, 9],\n       [0, 1, 2]])"
+     },
+     "execution_count": 76,
+     "metadata": {},
+     "output_type": "execute_result"
+    }
+   ],
+   "source": [
+    "x6 = np.r_[x1, x2]\n",
+    "x6"
+   ],
+   "metadata": {
+    "collapsed": false,
+    "ExecuteTime": {
+     "end_time": "2024-07-16T07:27:43.454504900Z",
+     "start_time": "2024-07-16T07:27:43.377861100Z"
+    }
+   },
+   "id": "f3cbfc1f70bf40b",
+   "execution_count": 76
+  },
+  {
+   "cell_type": "markdown",
+   "source": [
+    "### 3.6数组的分裂\n",
+    "#### 3.6.1split的用法"
+   ],
+   "metadata": {
+    "collapsed": false
+   },
+   "id": "4b477608638780f3"
+  },
+  {
+   "cell_type": "code",
+   "outputs": [
+    {
+     "data": {
+      "text/plain": "array([0, 1, 2, 3, 4, 5, 6, 7, 8, 9])"
+     },
+     "execution_count": 77,
+     "metadata": {},
+     "output_type": "execute_result"
+    }
+   ],
+   "source": [
+    "x6 = np.arange(10)\n",
+    "x6"
+   ],
+   "metadata": {
+    "collapsed": false,
+    "ExecuteTime": {
+     "end_time": "2024-07-16T07:27:43.521968500Z",
+     "start_time": "2024-07-16T07:27:43.453506200Z"
+    }
+   },
+   "id": "2944bfc77546388f",
+   "execution_count": 77
+  },
+  {
+   "cell_type": "code",
+   "outputs": [
+    {
+     "name": "stdout",
+     "output_type": "stream",
+     "text": [
+      "[0 1] [2 3 4 5 6] [7 8 9]\n"
+     ]
+    }
+   ],
+   "source": [
+    "x1, x2, x3 = np.split(x6, [2, 7])\n",
+    "print(x1, x2, x3)"
+   ],
+   "metadata": {
+    "collapsed": false,
+    "ExecuteTime": {
+     "end_time": "2024-07-16T07:27:43.593540500Z",
+     "start_time": "2024-07-16T07:27:43.506962400Z"
+    }
+   },
+   "id": "5a91d879e60b0ecf",
+   "execution_count": 78
+  },
+  {
+   "cell_type": "markdown",
+   "source": [
+    "#### 3.6.2hsplit的用法"
+   ],
+   "metadata": {
+    "collapsed": false
+   },
+   "id": "6d6e060913656eec"
+  },
+  {
+   "cell_type": "code",
+   "outputs": [
+    {
+     "data": {
+      "text/plain": "array([[ 1,  2,  3,  4,  5],\n       [ 6,  7,  8,  9, 10],\n       [11, 12, 13, 14, 15],\n       [16, 17, 18, 19, 20],\n       [21, 22, 23, 24, 25]])"
+     },
+     "execution_count": 79,
+     "metadata": {},
+     "output_type": "execute_result"
+    }
+   ],
+   "source": [
+    "x7 = np.arange(1, 26).reshape(5, 5)\n",
+    "x7"
+   ],
+   "metadata": {
+    "collapsed": false,
+    "ExecuteTime": {
+     "end_time": "2024-07-16T07:27:43.633540300Z",
+     "start_time": "2024-07-16T07:27:43.579452600Z"
+    }
+   },
+   "id": "ef6e8e604a54deb1",
+   "execution_count": 79
+  },
+  {
+   "cell_type": "code",
+   "outputs": [
+    {
+     "name": "stdout",
+     "output_type": "stream",
+     "text": [
+      "left: [[ 1  2]\n",
+      " [ 6  7]\n",
+      " [11 12]\n",
+      " [16 17]\n",
+      " [21 22]]\n",
+      "middle: [[ 3  4]\n",
+      " [ 8  9]\n",
+      " [13 14]\n",
+      " [18 19]\n",
+      " [23 24]]\n",
+      "right: [[ 5]\n",
+      " [10]\n",
+      " [15]\n",
+      " [20]\n",
+      " [25]]\n"
+     ]
+    }
+   ],
+   "source": [
+    "left, middle, right = np.hsplit(x7, [2, 4])\n",
+    "print(\"left:\", left)\n",
+    "print(\"middle:\", middle)\n",
+    "print(\"right:\", right)"
+   ],
+   "metadata": {
+    "collapsed": false,
+    "ExecuteTime": {
+     "end_time": "2024-07-16T07:27:43.724238100Z",
+     "start_time": "2024-07-16T07:27:43.632540800Z"
+    }
+   },
+   "id": "4748fe4bf1c03bca",
+   "execution_count": 80
+  },
+  {
+   "cell_type": "markdown",
+   "source": [
+    "#### 3.6.3vsplit的用法"
+   ],
+   "metadata": {
+    "collapsed": false
+   },
+   "id": "46c828c44c50a96f"
+  },
+  {
+   "cell_type": "code",
+   "outputs": [
+    {
+     "name": "stdout",
+     "output_type": "stream",
+     "text": [
+      "upper: [[ 1  2  3  4  5]\n",
+      " [ 6  7  8  9 10]]\n",
+      "middle: [[11 12 13 14 15]\n",
+      " [16 17 18 19 20]]\n",
+      "lower: [[21 22 23 24 25]]\n"
+     ]
+    }
+   ],
+   "source": [
+    "upper, middle, lower = np.vsplit(x7, [2, 4])\n",
+    "print(\"upper:\", upper)\n",
+    "print(\"middle:\", middle)\n",
+    "print(\"lower:\", lower)"
+   ],
+   "metadata": {
+    "collapsed": false,
+    "ExecuteTime": {
+     "end_time": "2024-07-16T07:27:43.759228700Z",
+     "start_time": "2024-07-16T07:27:43.703238700Z"
+    }
+   },
+   "id": "a08bc4bcbfcddfaa",
+   "execution_count": 81
+  },
+  {
+   "cell_type": "markdown",
+   "source": [
+    "## 4.Numpy四大运算\n",
+    "### 4.1向量化运算\n",
+    "#### 4.1.1与数字的加减乘除等"
+   ],
+   "metadata": {
+    "collapsed": false
+   },
+   "id": "701e5d72b86d8155"
+  },
+  {
+   "cell_type": "code",
+   "outputs": [
+    {
+     "data": {
+      "text/plain": "array([1, 2, 3, 4, 5])"
+     },
+     "execution_count": 82,
+     "metadata": {},
+     "output_type": "execute_result"
+    }
+   ],
+   "source": [
+    "x1 = np.arange(1, 6)\n",
+    "x1"
+   ],
+   "metadata": {
+    "collapsed": false,
+    "ExecuteTime": {
+     "end_time": "2024-07-16T07:27:43.863062200Z",
+     "start_time": "2024-07-16T07:27:43.759228700Z"
+    }
+   },
+   "id": "4806447871c4cc1",
+   "execution_count": 82
+  },
+  {
+   "cell_type": "code",
+   "outputs": [
+    {
+     "name": "stdout",
+     "output_type": "stream",
+     "text": [
+      "x1+5 [ 6  7  8  9 10]\n",
+      "x1-5 [-4 -3 -2 -1  0]\n",
+      "x1*5 [ 5 10 15 20 25]\n",
+      "x1/5 [0.2 0.4 0.6 0.8 1. ]\n"
+     ]
+    }
+   ],
+   "source": [
+    "print(\"x1+5\", x1 + 5)\n",
+    "print(\"x1-5\", x1 - 5)\n",
+    "print(\"x1*5\", x1 * 5)\n",
+    "print(\"x1/5\", x1 / 5)"
+   ],
+   "metadata": {
+    "collapsed": false,
+    "ExecuteTime": {
+     "end_time": "2024-07-16T07:27:43.889588400Z",
+     "start_time": "2024-07-16T07:27:43.846057800Z"
+    }
+   },
+   "id": "ae228ef8073727cf",
+   "execution_count": 83
+  },
+  {
+   "cell_type": "code",
+   "outputs": [
+    {
+     "name": "stdout",
+     "output_type": "stream",
+     "text": [
+      "-x1 [-1 -2 -3 -4 -5]\n",
+      "x1**2 [ 1  4  9 16 25]\n",
+      "x1//2 [0 1 1 2 2]\n",
+      "x1%2 [1 0 1 0 1]\n"
+     ]
+    }
+   ],
+   "source": [
+    "print(\"-x1\", -x1)\n",
+    "print(\"x1**2\", x1 ** 2)\n",
+    "print(\"x1//2\", x1 // 2)\n",
+    "print(\"x1%2\", x1 % 2)"
+   ],
+   "metadata": {
+    "collapsed": false,
+    "ExecuteTime": {
+     "end_time": "2024-07-16T07:27:43.976681400Z",
+     "start_time": "2024-07-16T07:27:43.889588400Z"
+    }
+   },
+   "id": "f6d33b3433b26f6b",
+   "execution_count": 84
+  },
+  {
+   "cell_type": "markdown",
+   "source": [
+    "#### 4.1.2绝对值、三角函数、指数、对数"
+   ],
+   "metadata": {
+    "collapsed": false
+   },
+   "id": "797d911e4c14f6aa"
+  },
+  {
+   "cell_type": "markdown",
+   "source": [
+    "（1)绝对值"
+   ],
+   "metadata": {
+    "collapsed": false
+   },
+   "id": "38a78655720625ab"
+  },
+  {
+   "cell_type": "code",
+   "outputs": [
+    {
+     "data": {
+      "text/plain": "array([ 1, -1, -2, -2,  0])"
+     },
+     "execution_count": 85,
+     "metadata": {},
+     "output_type": "execute_result"
+    }
+   ],
+   "source": [
+    "x2 = np.array([1, -1, -2, -2, 0])\n",
+    "x2"
+   ],
+   "metadata": {
+    "collapsed": false,
+    "ExecuteTime": {
+     "end_time": "2024-07-16T07:27:44.006352300Z",
+     "start_time": "2024-07-16T07:27:43.959589400Z"
+    }
+   },
+   "id": "6086e0bbecf785dd",
+   "execution_count": 85
+  },
+  {
+   "cell_type": "code",
+   "outputs": [
+    {
+     "data": {
+      "text/plain": "array([1, 1, 2, 2, 0])"
+     },
+     "execution_count": 86,
+     "metadata": {},
+     "output_type": "execute_result"
+    }
+   ],
+   "source": [
+    "abs(x2)"
+   ],
+   "metadata": {
+    "collapsed": false,
+    "ExecuteTime": {
+     "end_time": "2024-07-16T07:27:44.111082600Z",
+     "start_time": "2024-07-16T07:27:43.996346400Z"
+    }
+   },
+   "id": "73e3a95cd325cb92",
+   "execution_count": 86
+  },
+  {
+   "cell_type": "code",
+   "outputs": [
+    {
+     "data": {
+      "text/plain": "array([1, 1, 2, 2, 0])"
+     },
+     "execution_count": 87,
+     "metadata": {},
+     "output_type": "execute_result"
+    }
+   ],
+   "source": [
+    "np.abs(x2)"
+   ],
+   "metadata": {
+    "collapsed": false,
+    "ExecuteTime": {
+     "end_time": "2024-07-16T07:27:44.123077600Z",
+     "start_time": "2024-07-16T07:27:44.086083Z"
+    }
+   },
+   "id": "a3013f31b400ec46",
+   "execution_count": 87
+  },
+  {
+   "cell_type": "markdown",
+   "source": [
+    "(2)三角函数"
+   ],
+   "metadata": {
+    "collapsed": false
+   },
+   "id": "2c5bfa1f0f20dc59"
+  },
+  {
+   "cell_type": "code",
+   "outputs": [
+    {
+     "data": {
+      "text/plain": "array([0.        , 1.57079633, 3.14159265])"
+     },
+     "execution_count": 88,
+     "metadata": {},
+     "output_type": "execute_result"
+    }
+   ],
+   "source": [
+    "theta = np.linspace(0, np.pi, 3)\n",
+    "theta"
+   ],
+   "metadata": {
+    "collapsed": false,
+    "ExecuteTime": {
+     "end_time": "2024-07-16T07:27:44.226314200Z",
+     "start_time": "2024-07-16T07:27:44.123077600Z"
+    }
+   },
+   "id": "5d76e4034a2fb291",
+   "execution_count": 88
+  },
+  {
+   "cell_type": "code",
+   "outputs": [
+    {
+     "name": "stdout",
+     "output_type": "stream",
+     "text": [
+      "sin(theta) [0.0000000e+00 1.0000000e+00 1.2246468e-16]\n",
+      "cos(theta) [ 1.000000e+00  6.123234e-17 -1.000000e+00]\n",
+      "tan(theta) [ 0.00000000e+00  1.63312394e+16 -1.22464680e-16]\n"
+     ]
+    }
+   ],
+   "source": [
+    "print(\"sin(theta)\", np.sin(theta))\n",
+    "print(\"cos(theta)\", np.cos(theta))\n",
+    "print(\"tan(theta)\", np.tan(theta))"
+   ],
+   "metadata": {
+    "collapsed": false,
+    "ExecuteTime": {
+     "end_time": "2024-07-16T07:27:44.262581900Z",
+     "start_time": "2024-07-16T07:27:44.201521800Z"
+    }
+   },
+   "id": "a7348b5379628e38",
+   "execution_count": 89
+  },
+  {
+   "cell_type": "code",
+   "outputs": [
+    {
+     "name": "stdout",
+     "output_type": "stream",
+     "text": [
+      "arcsin(x) [ 1.57079633  0.         -1.57079633]\n",
+      "arccos(x) [0.         1.57079633 3.14159265]\n",
+      "arctan(x) [ 0.78539816  0.         -0.78539816]\n"
+     ]
+    }
+   ],
+   "source": [
+    "x = [1, 0, -1]\n",
+    "print(\"arcsin(x)\", np.arcsin(x))\n",
+    "print(\"arccos(x)\", np.arccos(x))\n",
+    "print(\"arctan(x)\", np.arctan(x))"
+   ],
+   "metadata": {
+    "collapsed": false,
+    "ExecuteTime": {
+     "end_time": "2024-07-16T07:27:44.317399900Z",
+     "start_time": "2024-07-16T07:27:44.251526100Z"
+    }
+   },
+   "id": "57e1c5131f1059a0",
+   "execution_count": 90
+  },
+  {
+   "cell_type": "markdown",
+   "source": [
+    "(3)指数运算"
+   ],
+   "metadata": {
+    "collapsed": false
+   },
+   "id": "37e3979a1342c62"
+  },
+  {
+   "cell_type": "code",
+   "outputs": [
+    {
+     "data": {
+      "text/plain": "array([0, 1, 2])"
+     },
+     "execution_count": 91,
+     "metadata": {},
+     "output_type": "execute_result"
+    }
+   ],
+   "source": [
+    "x = np.arange(3)\n",
+    "x"
+   ],
+   "metadata": {
+    "collapsed": false,
+    "ExecuteTime": {
+     "end_time": "2024-07-16T07:27:44.377562900Z",
+     "start_time": "2024-07-16T07:27:44.316519400Z"
+    }
+   },
+   "id": "409e9982392e4b3f",
+   "execution_count": 91
+  },
+  {
+   "cell_type": "code",
+   "outputs": [
+    {
+     "data": {
+      "text/plain": "array([1.        , 2.71828183, 7.3890561 ])"
+     },
+     "execution_count": 92,
+     "metadata": {},
+     "output_type": "execute_result"
+    }
+   ],
+   "source": [
+    "np.exp(x)"
+   ],
+   "metadata": {
+    "collapsed": false,
+    "ExecuteTime": {
+     "end_time": "2024-07-16T07:27:44.442077800Z",
+     "start_time": "2024-07-16T07:27:44.359404200Z"
+    }
+   },
+   "id": "86ccb92ad38f9e95",
+   "execution_count": 92
+  },
+  {
+   "cell_type": "markdown",
+   "source": [
+    "(4)对数运算"
+   ],
+   "metadata": {
+    "collapsed": false
+   },
+   "id": "5b0a9d4d6966292"
+  },
+  {
+   "cell_type": "code",
+   "outputs": [
+    {
+     "name": "stdout",
+     "output_type": "stream",
+     "text": [
+      "ln(x) [0.         0.69314718 1.38629436 2.07944154 2.30258509]\n",
+      "log2(x) [0.         1.         2.         3.         3.32192809]\n",
+      "log10(x) [0.         0.30103    0.60205999 0.90308999 1.        ]\n"
+     ]
+    }
+   ],
+   "source": [
+    "x = np.array([1, 2, 4, 8, 10])\n",
+    "print(\"ln(x)\", np.log(x))\n",
+    "print(\"log2(x)\", np.log2(x))\n",
+    "print(\"log10(x)\", np.log10(x))"
+   ],
+   "metadata": {
+    "collapsed": false,
+    "ExecuteTime": {
+     "end_time": "2024-07-16T07:27:44.501747400Z",
+     "start_time": "2024-07-16T07:27:44.442077800Z"
+    }
+   },
+   "id": "d0b4020a851b0c6a",
+   "execution_count": 93
+  },
+  {
+   "cell_type": "markdown",
+   "source": [
+    "#### 4.1.3两个数组的运算"
+   ],
+   "metadata": {
+    "collapsed": false
+   },
+   "id": "292e9f8f66f5f9b4"
+  },
+  {
+   "cell_type": "code",
+   "outputs": [
+    {
+     "data": {
+      "text/plain": "array([1, 2, 3, 4, 5])"
+     },
+     "execution_count": 94,
+     "metadata": {},
+     "output_type": "execute_result"
+    }
+   ],
+   "source": [
+    "x1 = np.arange(1, 6)\n",
+    "x1"
+   ],
+   "metadata": {
+    "collapsed": false,
+    "ExecuteTime": {
+     "end_time": "2024-07-16T07:27:44.567159500Z",
+     "start_time": "2024-07-16T07:27:44.484650100Z"
+    }
+   },
+   "id": "825eeccfbdee21cf",
+   "execution_count": 94
+  },
+  {
+   "cell_type": "code",
+   "outputs": [
+    {
+     "data": {
+      "text/plain": "array([ 6,  7,  8,  9, 10])"
+     },
+     "execution_count": 95,
+     "metadata": {},
+     "output_type": "execute_result"
+    }
+   ],
+   "source": [
+    "x2 = np.arange(6, 11)\n",
+    "x2"
+   ],
+   "metadata": {
+    "collapsed": false,
+    "ExecuteTime": {
+     "end_time": "2024-07-16T07:27:44.630681900Z",
+     "start_time": "2024-07-16T07:27:44.566157600Z"
+    }
+   },
+   "id": "618797425833f82c",
+   "execution_count": 95
+  },
+  {
+   "cell_type": "code",
+   "outputs": [
+    {
+     "name": "stdout",
+     "output_type": "stream",
+     "text": [
+      "x1+x2 [ 7  9 11 13 15]\n",
+      "x1-x2 [-5 -5 -5 -5 -5]\n",
+      "x3*x2 [ 6 14 24 36 50]\n",
+      "x1/x2 [0.16666667 0.28571429 0.375      0.44444444 0.5       ]\n"
+     ]
+    }
+   ],
+   "source": [
+    "print(\"x1+x2\", x1 + x2)\n",
+    "print(\"x1-x2\", x1 - x2)\n",
+    "print(\"x3*x2\", x1 * x2)\n",
+    "print(\"x1/x2\", x1 / x2)"
+   ],
+   "metadata": {
+    "collapsed": false,
+    "ExecuteTime": {
+     "end_time": "2024-07-16T07:27:44.699925600Z",
+     "start_time": "2024-07-16T07:27:44.613677700Z"
+    }
+   },
+   "id": "5e2fd594641077a3",
+   "execution_count": 96
+  },
+  {
+   "cell_type": "markdown",
+   "source": [
+    "### 4.2矩阵运算"
+   ],
+   "metadata": {
+    "collapsed": false
+   },
+   "id": "129d6bef2d8cb7a3"
+  },
+  {
+   "cell_type": "code",
+   "outputs": [
+    {
+     "data": {
+      "text/plain": "array([[0, 1, 2],\n       [3, 4, 5],\n       [6, 7, 8]])"
+     },
+     "execution_count": 97,
+     "metadata": {},
+     "output_type": "execute_result"
+    }
+   ],
+   "source": [
+    "x = np.arange(9).reshape(3, 3)\n",
+    "x"
+   ],
+   "metadata": {
+    "collapsed": false,
+    "ExecuteTime": {
+     "end_time": "2024-07-16T07:27:44.727925900Z",
+     "start_time": "2024-07-16T07:27:44.682926300Z"
+    }
+   },
+   "id": "d0730338383db073",
+   "execution_count": 97
+  },
+  {
+   "cell_type": "markdown",
+   "source": [
+    "* 矩阵转置"
+   ],
+   "metadata": {
+    "collapsed": false
+   },
+   "id": "1f79c48880323580"
+  },
+  {
+   "cell_type": "code",
+   "outputs": [
+    {
+     "data": {
+      "text/plain": "array([[0, 3, 6],\n       [1, 4, 7],\n       [2, 5, 8]])"
+     },
+     "execution_count": 98,
+     "metadata": {},
+     "output_type": "execute_result"
+    }
+   ],
+   "source": [
+    "y = x.T\n",
+    "y"
+   ],
+   "metadata": {
+    "collapsed": false,
+    "ExecuteTime": {
+     "end_time": "2024-07-16T07:27:44.823445300Z",
+     "start_time": "2024-07-16T07:27:44.716925900Z"
+    }
+   },
+   "id": "f0a162c8a41dc968",
+   "execution_count": 98
+  },
+  {
+   "cell_type": "markdown",
+   "source": [
+    "* 矩阵乘法"
+   ],
+   "metadata": {
+    "collapsed": false
+   },
+   "id": "a51bacc7e5ae0b87"
+  },
+  {
+   "cell_type": "code",
+   "outputs": [],
+   "source": [
+    "x = np.array([[1, 0],\n",
+    "              [1, 1]])\n",
+    "y = np.array([[0, 1],\n",
+    "              [1, 1]])"
+   ],
+   "metadata": {
+    "collapsed": false,
+    "ExecuteTime": {
+     "end_time": "2024-07-16T07:27:44.861525600Z",
+     "start_time": "2024-07-16T07:27:44.803441400Z"
+    }
+   },
+   "id": "e13babff2222675d",
+   "execution_count": 99
+  },
+  {
+   "cell_type": "code",
+   "outputs": [
+    {
+     "data": {
+      "text/plain": "array([[0, 1],\n       [1, 2]])"
+     },
+     "execution_count": 100,
+     "metadata": {},
+     "output_type": "execute_result"
+    }
+   ],
+   "source": [
+    "x.dot(y)"
+   ],
+   "metadata": {
+    "collapsed": false,
+    "ExecuteTime": {
+     "end_time": "2024-07-16T07:27:44.936740Z",
+     "start_time": "2024-07-16T07:27:44.849522Z"
+    }
+   },
+   "id": "554ff221fa1262d7",
+   "execution_count": 100
+  },
+  {
+   "cell_type": "code",
+   "outputs": [
+    {
+     "data": {
+      "text/plain": "array([[0, 1],\n       [1, 2]])"
+     },
+     "execution_count": 101,
+     "metadata": {},
+     "output_type": "execute_result"
+    }
+   ],
+   "source": [
+    "np.dot(x, y)"
+   ],
+   "metadata": {
+    "collapsed": false,
+    "ExecuteTime": {
+     "end_time": "2024-07-16T07:27:44.978293300Z",
+     "start_time": "2024-07-16T07:27:44.921740100Z"
+    }
+   },
+   "id": "d32072bd3de7398f",
+   "execution_count": 101
+  },
+  {
+   "cell_type": "code",
+   "outputs": [
+    {
+     "data": {
+      "text/plain": "array([[1, 1],\n       [2, 1]])"
+     },
+     "execution_count": 102,
+     "metadata": {},
+     "output_type": "execute_result"
+    }
+   ],
+   "source": [
+    "np.dot(y, x)"
+   ],
+   "metadata": {
+    "collapsed": false,
+    "ExecuteTime": {
+     "end_time": "2024-07-16T07:27:45.050470400Z",
+     "start_time": "2024-07-16T07:27:44.977293400Z"
+    }
+   },
+   "id": "1ba3c084c89ecb61",
+   "execution_count": 102
+  },
+  {
+   "cell_type": "markdown",
+   "source": [
+    "**注意跟x*y的区别**"
+   ],
+   "metadata": {
+    "collapsed": false
+   },
+   "id": "4c051c3ae1984069"
+  },
+  {
+   "cell_type": "code",
+   "outputs": [
+    {
+     "data": {
+      "text/plain": "array([[0, 0],\n       [1, 1]])"
+     },
+     "execution_count": 103,
+     "metadata": {},
+     "output_type": "execute_result"
+    }
+   ],
+   "source": [
+    "x * y"
+   ],
+   "metadata": {
+    "collapsed": false,
+    "ExecuteTime": {
+     "end_time": "2024-07-16T07:27:45.071460100Z",
+     "start_time": "2024-07-16T07:27:45.032409300Z"
+    }
+   },
+   "id": "c93a1d382759189f",
+   "execution_count": 103
+  },
+  {
+   "cell_type": "markdown",
+   "source": [
+    "### 4.3广播运算"
+   ],
+   "metadata": {
+    "collapsed": false
+   },
+   "id": "dad85b29fedad65"
+  },
+  {
+   "cell_type": "code",
+   "outputs": [
+    {
+     "data": {
+      "text/plain": "array([[0, 1, 2]])"
+     },
+     "execution_count": 104,
+     "metadata": {},
+     "output_type": "execute_result"
+    }
+   ],
+   "source": [
+    "x = np.arange(3).reshape(1, 3)\n",
+    "x"
+   ],
+   "metadata": {
+    "collapsed": false,
+    "ExecuteTime": {
+     "end_time": "2024-07-16T07:27:45.179808800Z",
+     "start_time": "2024-07-16T07:27:45.071460100Z"
+    }
+   },
+   "id": "c6c84b4c1a68d70a",
+   "execution_count": 104
+  },
+  {
+   "cell_type": "code",
+   "outputs": [
+    {
+     "data": {
+      "text/plain": "array([[5, 6, 7]])"
+     },
+     "execution_count": 105,
+     "metadata": {},
+     "output_type": "execute_result"
+    }
+   ],
+   "source": [
+    "x + 5"
+   ],
+   "metadata": {
+    "collapsed": false,
+    "ExecuteTime": {
+     "end_time": "2024-07-16T07:27:45.198832400Z",
+     "start_time": "2024-07-16T07:27:45.158281Z"
+    }
+   },
+   "id": "a3b0ee5084bdaadb",
+   "execution_count": 105
+  },
+  {
+   "cell_type": "markdown",
+   "source": [
+    "**规则**\n",
+    "如果两个数组的形状在维度上不匹配\n",
+    "那么数组的形状会沿着维度为1的维度进行扩展以匹配另一个数组的形状"
+   ],
+   "metadata": {
+    "collapsed": false
+   },
+   "id": "bf6892c8bf70621f"
+  },
+  {
+   "cell_type": "code",
+   "outputs": [
+    {
+     "data": {
+      "text/plain": "array([[1., 1., 1.],\n       [1., 1., 1.],\n       [1., 1., 1.]])"
+     },
+     "execution_count": 106,
+     "metadata": {},
+     "output_type": "execute_result"
+    }
+   ],
+   "source": [
+    "x1 = np.ones((3, 3))\n",
+    "x1"
+   ],
+   "metadata": {
+    "collapsed": false,
+    "ExecuteTime": {
+     "end_time": "2024-07-16T07:27:45.280620500Z",
+     "start_time": "2024-07-16T07:27:45.198832400Z"
+    }
+   },
+   "id": "6d6b3311b5d88eda",
+   "execution_count": 106
+  },
+  {
+   "cell_type": "code",
+   "outputs": [
+    {
+     "data": {
+      "text/plain": "array([[0, 1, 2]])"
+     },
+     "execution_count": 107,
+     "metadata": {},
+     "output_type": "execute_result"
+    }
+   ],
+   "source": [
+    "x2 = np.arange(3).reshape(1, 3)\n",
+    "x2"
+   ],
+   "metadata": {
+    "collapsed": false,
+    "ExecuteTime": {
+     "end_time": "2024-07-16T07:27:45.307273Z",
+     "start_time": "2024-07-16T07:27:45.262612500Z"
+    }
+   },
+   "id": "82d45a581971deb1",
+   "execution_count": 107
+  },
+  {
+   "cell_type": "code",
+   "outputs": [
+    {
+     "data": {
+      "text/plain": "array([[1., 2., 3.],\n       [1., 2., 3.],\n       [1., 2., 3.]])"
+     },
+     "execution_count": 108,
+     "metadata": {},
+     "output_type": "execute_result"
+    }
+   ],
+   "source": [
+    "x1 + x2"
+   ],
+   "metadata": {
+    "collapsed": false,
+    "ExecuteTime": {
+     "end_time": "2024-07-16T07:27:45.374404600Z",
+     "start_time": "2024-07-16T07:27:45.299194700Z"
+    }
+   },
+   "id": "fd6ab73680f9dae1",
+   "execution_count": 108
+  },
+  {
+   "cell_type": "code",
+   "outputs": [
+    {
+     "data": {
+      "text/plain": "array([[   2.,    4.,    8.,   16.,   32.],\n       [  64.,  128.,  256.,  512., 1024.]])"
+     },
+     "execution_count": 109,
+     "metadata": {},
+     "output_type": "execute_result"
+    }
+   ],
+   "source": [
+    "x3 = np.logspace(1, 10, 10, base=2).reshape(2, 5)\n",
+    "x3"
+   ],
+   "metadata": {
+    "collapsed": false,
+    "ExecuteTime": {
+     "end_time": "2024-07-16T07:27:45.411117900Z",
+     "start_time": "2024-07-16T07:27:45.361332800Z"
+    }
+   },
+   "id": "9fd15b6ea8622bac",
+   "execution_count": 109
+  },
+  {
+   "cell_type": "code",
+   "outputs": [
+    {
+     "data": {
+      "text/plain": "array([[ 1,  2,  4,  8, 16]])"
+     },
+     "execution_count": 110,
+     "metadata": {},
+     "output_type": "execute_result"
+    }
+   ],
+   "source": [
+    "x4 = np.array([[1, 2, 4, 8, 16]])\n",
+    "x4"
+   ],
+   "metadata": {
+    "collapsed": false,
+    "ExecuteTime": {
+     "end_time": "2024-07-16T07:27:45.481506600Z",
+     "start_time": "2024-07-16T07:27:45.399065700Z"
+    }
+   },
+   "id": "b0229353315c1531",
+   "execution_count": 110
+  },
+  {
+   "cell_type": "code",
+   "outputs": [
+    {
+     "data": {
+      "text/plain": "array([[ 2.,  2.,  2.,  2.,  2.],\n       [64., 64., 64., 64., 64.]])"
+     },
+     "execution_count": 111,
+     "metadata": {},
+     "output_type": "execute_result"
+    }
+   ],
+   "source": [
+    "x3 / x4"
+   ],
+   "metadata": {
+    "collapsed": false,
+    "ExecuteTime": {
+     "end_time": "2024-07-16T07:27:45.527219600Z",
+     "start_time": "2024-07-16T07:27:45.460500700Z"
+    }
+   },
+   "id": "c7203d051e8e3e2f",
+   "execution_count": 111
+  },
+  {
+   "cell_type": "code",
+   "outputs": [
+    {
+     "data": {
+      "text/plain": "array([[0],\n       [1],\n       [2]])"
+     },
+     "execution_count": 112,
+     "metadata": {},
+     "output_type": "execute_result"
+    }
+   ],
+   "source": [
+    "x5 = np.arange(3).reshape(3, 1)\n",
+    "x5"
+   ],
+   "metadata": {
+    "collapsed": false,
+    "ExecuteTime": {
+     "end_time": "2024-07-16T07:27:45.568277700Z",
+     "start_time": "2024-07-16T07:27:45.500216Z"
+    }
+   },
+   "id": "b13d36d400226d04",
+   "execution_count": 112
+  },
+  {
+   "cell_type": "code",
+   "outputs": [
+    {
+     "data": {
+      "text/plain": "array([[0, 1, 2]])"
+     },
+     "execution_count": 113,
+     "metadata": {},
+     "output_type": "execute_result"
+    }
+   ],
+   "source": [
+    "x6 = np.arange(3).reshape(1, 3)\n",
+    "x6"
+   ],
+   "metadata": {
+    "collapsed": false,
+    "ExecuteTime": {
+     "end_time": "2024-07-16T07:27:45.636610800Z",
+     "start_time": "2024-07-16T07:27:45.554274600Z"
+    }
+   },
+   "id": "809cac748f2614e8",
+   "execution_count": 113
+  },
+  {
+   "cell_type": "code",
+   "outputs": [
+    {
+     "data": {
+      "text/plain": "array([[0, 1, 2],\n       [1, 2, 3],\n       [2, 3, 4]])"
+     },
+     "execution_count": 114,
+     "metadata": {},
+     "output_type": "execute_result"
+    }
+   ],
+   "source": [
+    "x5 + x6"
+   ],
+   "metadata": {
+    "collapsed": false,
+    "ExecuteTime": {
+     "end_time": "2024-07-16T07:27:45.669939900Z",
+     "start_time": "2024-07-16T07:27:45.620322700Z"
+    }
+   },
+   "id": "3d72e69a77f56cad",
+   "execution_count": 114
+  },
+  {
+   "cell_type": "markdown",
+   "source": [
+    "### 4.4比较运算和掩码\n",
+    "#### 4.4.1比较运算"
+   ],
+   "metadata": {
+    "collapsed": false
+   },
+   "id": "c159abcd3188f919"
+  },
+  {
+   "cell_type": "code",
+   "outputs": [
+    {
+     "data": {
+      "text/plain": "array([[86,  7, 99,  7, 95, 57, 44, 73, 12, 32],\n       [81, 59, 70, 94, 97, 40,  1, 64, 43, 48],\n       [46, 22,  1, 11, 23, 18, 30,  3, 38, 10],\n       [52, 86, 94, 90,  2, 40,  2, 15, 74, 29],\n       [13, 81, 34, 31, 16, 35, 54,  0, 74, 94],\n       [75, 29,  7,  4, 18, 31, 87, 70, 25, 70],\n       [86, 22, 46,  7, 16, 12, 89, 99, 86, 44],\n       [18, 98, 84,  9, 49, 55, 66, 50, 56, 51],\n       [84, 36, 67, 97, 95,  7, 57, 87,  5, 44],\n       [53, 59, 64, 73, 26, 49, 26, 18,  8, 81]])"
+     },
+     "execution_count": 115,
+     "metadata": {},
+     "output_type": "execute_result"
+    }
+   ],
+   "source": [
+    "x1 = np.random.randint(100, size=(10, 10))\n",
+    "x1"
+   ],
+   "metadata": {
+    "collapsed": false,
+    "ExecuteTime": {
+     "end_time": "2024-07-16T07:27:45.729229100Z",
+     "start_time": "2024-07-16T07:27:45.658702900Z"
+    }
+   },
+   "id": "e63da2405a8a9d47",
+   "execution_count": 115
+  },
+  {
+   "cell_type": "code",
+   "outputs": [
+    {
+     "data": {
+      "text/plain": "array([[ True, False,  True, False,  True,  True, False,  True, False,\n        False],\n       [ True,  True,  True,  True,  True, False, False,  True, False,\n        False],\n       [False, False, False, False, False, False, False, False, False,\n        False],\n       [ True,  True,  True,  True, False, False, False, False,  True,\n        False],\n       [False,  True, False, False, False, False,  True, False,  True,\n         True],\n       [ True, False, False, False, False, False,  True,  True, False,\n         True],\n       [ True, False, False, False, False, False,  True,  True,  True,\n        False],\n       [False,  True,  True, False, False,  True,  True, False,  True,\n         True],\n       [ True, False,  True,  True,  True, False,  True,  True, False,\n        False],\n       [ True,  True,  True,  True, False, False, False, False, False,\n         True]])"
+     },
+     "execution_count": 116,
+     "metadata": {},
+     "output_type": "execute_result"
+    }
+   ],
+   "source": [
+    "x1 > 50"
+   ],
+   "metadata": {
+    "collapsed": false,
+    "ExecuteTime": {
+     "end_time": "2024-07-16T07:27:45.769362200Z",
+     "start_time": "2024-07-16T07:27:45.718228900Z"
+    }
+   },
+   "id": "d808a9fac06e4616",
+   "execution_count": 116
+  },
+  {
+   "cell_type": "markdown",
+   "source": [
+    "#### 4.4.2操作布尔数组"
+   ],
+   "metadata": {
+    "collapsed": false
+   },
+   "id": "9f9b0343d11a4f10"
+  },
+  {
+   "cell_type": "code",
+   "outputs": [
+    {
+     "data": {
+      "text/plain": "array([[3, 8, 7, 3],\n       [5, 1, 1, 9],\n       [7, 9, 0, 8]])"
+     },
+     "execution_count": 117,
+     "metadata": {},
+     "output_type": "execute_result"
+    }
+   ],
+   "source": [
+    "x2 = np.random.randint(10, size=(3, 4))\n",
+    "x2"
+   ],
+   "metadata": {
+    "collapsed": false,
+    "ExecuteTime": {
+     "end_time": "2024-07-16T07:27:45.852283300Z",
+     "start_time": "2024-07-16T07:27:45.768290500Z"
+    }
+   },
+   "id": "1dd41ba2753a121b",
+   "execution_count": 117
+  },
+  {
+   "cell_type": "code",
+   "outputs": [
+    {
+     "name": "stdout",
+     "output_type": "stream",
+     "text": [
+      "[[False  True  True False]\n",
+      " [False False False  True]\n",
+      " [ True  True False  True]]\n"
+     ]
+    },
+    {
+     "data": {
+      "text/plain": "6"
+     },
+     "execution_count": 118,
+     "metadata": {},
+     "output_type": "execute_result"
+    }
+   ],
+   "source": [
+    "print(x2 > 5)\n",
+    "np.sum(x2 > 5)"
+   ],
+   "metadata": {
+    "collapsed": false,
+    "ExecuteTime": {
+     "end_time": "2024-07-16T07:27:45.883352Z",
+     "start_time": "2024-07-16T07:27:45.834282900Z"
+    }
+   },
+   "id": "1094973c69da3b8f",
+   "execution_count": 118
+  },
+  {
+   "cell_type": "code",
+   "outputs": [
+    {
+     "data": {
+      "text/plain": "False"
+     },
+     "execution_count": 119,
+     "metadata": {},
+     "output_type": "execute_result"
+    }
+   ],
+   "source": [
+    "np.all(x2 > 0)"
+   ],
+   "metadata": {
+    "collapsed": false,
+    "ExecuteTime": {
+     "end_time": "2024-07-16T07:27:45.948897500Z",
+     "start_time": "2024-07-16T07:27:45.872290400Z"
+    }
+   },
+   "id": "68417aea51b8fab0",
+   "execution_count": 119
+  },
+  {
+   "cell_type": "code",
+   "outputs": [
+    {
+     "data": {
+      "text/plain": "False"
+     },
+     "execution_count": 120,
+     "metadata": {},
+     "output_type": "execute_result"
+    }
+   ],
+   "source": [
+    "np.any(x2 == 6)"
+   ],
+   "metadata": {
+    "collapsed": false,
+    "ExecuteTime": {
+     "end_time": "2024-07-16T07:27:46.011404700Z",
+     "start_time": "2024-07-16T07:27:45.935897600Z"
+    }
+   },
+   "id": "90183401741e5b57",
+   "execution_count": 120
+  },
+  {
+   "cell_type": "code",
+   "outputs": [
+    {
+     "data": {
+      "text/plain": "array([ True, False, False])"
+     },
+     "execution_count": 121,
+     "metadata": {},
+     "output_type": "execute_result"
+    }
+   ],
+   "source": [
+    "np.all(x2 < 9, axis=1)  # 按行进行判断"
+   ],
+   "metadata": {
+    "collapsed": false,
+    "ExecuteTime": {
+     "end_time": "2024-07-16T07:27:46.110615800Z",
+     "start_time": "2024-07-16T07:27:46.011404700Z"
+    }
+   },
+   "id": "cc3f53cd4927012",
+   "execution_count": 121
+  },
+  {
+   "cell_type": "code",
+   "outputs": [
+    {
+     "data": {
+      "text/plain": "array([[False,  True,  True, False],\n       [False, False, False, False],\n       [ True, False, False,  True]])"
+     },
+     "execution_count": 122,
+     "metadata": {},
+     "output_type": "execute_result"
+    }
+   ],
+   "source": [
+    "(x2 < 9) & (x2 > 5)"
+   ],
+   "metadata": {
+    "collapsed": false,
+    "ExecuteTime": {
+     "end_time": "2024-07-16T07:27:46.135077800Z",
+     "start_time": "2024-07-16T07:27:46.082862Z"
+    }
+   },
+   "id": "c031f8c6d4bdc3e2",
+   "execution_count": 122
+  },
+  {
+   "cell_type": "code",
+   "outputs": [
+    {
+     "data": {
+      "text/plain": "4"
+     },
+     "execution_count": 123,
+     "metadata": {},
+     "output_type": "execute_result"
+    }
+   ],
+   "source": [
+    "np.sum((x2 < 9) & (x2 > 5))"
+   ],
+   "metadata": {
+    "collapsed": false,
+    "ExecuteTime": {
+     "end_time": "2024-07-16T07:27:46.203190900Z",
+     "start_time": "2024-07-16T07:27:46.123615600Z"
+    }
+   },
+   "id": "4c76397f1eafd5ab",
+   "execution_count": 123
+  },
+  {
+   "cell_type": "markdown",
+   "source": [
+    "#### 4.4.3将布尔数组作为掩码"
+   ],
+   "metadata": {
+    "collapsed": false
+   },
+   "id": "797a6409573bf504"
+  },
+  {
+   "cell_type": "code",
+   "outputs": [
+    {
+     "data": {
+      "text/plain": "array([[False,  True,  True, False],\n       [False, False, False,  True],\n       [ True,  True, False,  True]])"
+     },
+     "execution_count": 124,
+     "metadata": {},
+     "output_type": "execute_result"
+    }
+   ],
+   "source": [
+    "x2 > 5"
+   ],
+   "metadata": {
+    "collapsed": false,
+    "ExecuteTime": {
+     "end_time": "2024-07-16T07:27:46.263456400Z",
+     "start_time": "2024-07-16T07:27:46.202195600Z"
+    }
+   },
+   "id": "a7f5fdf3f5d5e7ce",
+   "execution_count": 124
+  },
+  {
+   "cell_type": "code",
+   "outputs": [
+    {
+     "data": {
+      "text/plain": "array([8, 7, 9, 7, 9, 8])"
+     },
+     "execution_count": 125,
+     "metadata": {},
+     "output_type": "execute_result"
+    }
+   ],
+   "source": [
+    "x2[x2 > 5]"
+   ],
+   "metadata": {
+    "collapsed": false,
+    "ExecuteTime": {
+     "end_time": "2024-07-16T07:27:46.325044200Z",
+     "start_time": "2024-07-16T07:27:46.245489Z"
+    }
+   },
+   "id": "3c6f45031e774924",
+   "execution_count": 125
+  },
+  {
+   "cell_type": "markdown",
+   "source": [
+    "### 4.5花哨的索引\n",
+    "#### 4.5.1一维数组"
+   ],
+   "metadata": {
+    "collapsed": false
+   },
+   "id": "91d55c59d7e5f37e"
+  },
+  {
+   "cell_type": "code",
+   "outputs": [
+    {
+     "data": {
+      "text/plain": "array([93, 50, 55, 37, 27, 59, 81, 76, 30, 37])"
+     },
+     "execution_count": 126,
+     "metadata": {},
+     "output_type": "execute_result"
+    }
+   ],
+   "source": [
+    "x = np.random.randint(100, size=10)\n",
+    "x"
+   ],
+   "metadata": {
+    "collapsed": false,
+    "ExecuteTime": {
+     "end_time": "2024-07-16T07:27:46.384611200Z",
+     "start_time": "2024-07-16T07:27:46.325044200Z"
+    }
+   },
+   "id": "77e7a07afb60a4e2",
+   "execution_count": 126
+  },
+  {
+   "cell_type": "markdown",
+   "source": [
+    "**注意：结果的形状与索引数组ind一致**"
+   ],
+   "metadata": {
+    "collapsed": false
+   },
+   "id": "3748e4f0e8a92322"
+  },
+  {
+   "cell_type": "code",
+   "outputs": [
+    {
+     "data": {
+      "text/plain": "array([55, 81, 37])"
+     },
+     "execution_count": 127,
+     "metadata": {},
+     "output_type": "execute_result"
+    }
+   ],
+   "source": [
+    "ind = [2, 6, 9]\n",
+    "x[ind]"
+   ],
+   "metadata": {
+    "collapsed": false,
+    "ExecuteTime": {
+     "end_time": "2024-07-16T07:27:46.449696900Z",
+     "start_time": "2024-07-16T07:27:46.365044400Z"
+    }
+   },
+   "id": "4f42524a35778879",
+   "execution_count": 127
+  },
+  {
+   "cell_type": "code",
+   "outputs": [
+    {
+     "data": {
+      "text/plain": "array([[50, 93],\n       [55, 37]])"
+     },
+     "execution_count": 128,
+     "metadata": {},
+     "output_type": "execute_result"
+    }
+   ],
+   "source": [
+    "ind = np.array([[1, 0],\n",
+    "                [2, 3]])\n",
+    "x[ind]"
+   ],
+   "metadata": {
+    "collapsed": false,
+    "ExecuteTime": {
+     "end_time": "2024-07-16T07:27:46.509613600Z",
+     "start_time": "2024-07-16T07:27:46.449696900Z"
+    }
+   },
+   "id": "3e6098bc34307da",
+   "execution_count": 128
+  },
+  {
+   "cell_type": "markdown",
+   "source": [
+    "#### 4.5.2多维数组"
+   ],
+   "metadata": {
+    "collapsed": false
+   },
+   "id": "3e757163622c7f62"
+  },
+  {
+   "cell_type": "code",
+   "outputs": [
+    {
+     "data": {
+      "text/plain": "array([[ 0,  1,  2,  3],\n       [ 4,  5,  6,  7],\n       [ 8,  9, 10, 11]])"
+     },
+     "execution_count": 129,
+     "metadata": {},
+     "output_type": "execute_result"
+    }
+   ],
+   "source": [
+    "x = np.arange(12).reshape(3, 4)\n",
+    "x"
+   ],
+   "metadata": {
+    "collapsed": false,
+    "ExecuteTime": {
+     "end_time": "2024-07-16T07:27:46.565554200Z",
+     "start_time": "2024-07-16T07:27:46.501634300Z"
+    }
+   },
+   "id": "cd9acd4fb08b3432",
+   "execution_count": 129
+  },
+  {
+   "cell_type": "code",
+   "outputs": [
+    {
+     "data": {
+      "text/plain": "array([1, 7, 8])"
+     },
+     "execution_count": 130,
+     "metadata": {},
+     "output_type": "execute_result"
+    }
+   ],
+   "source": [
+    "row = np.array([0, 1, 2])\n",
+    "col = np.array([1, 3, 0])\n",
+    "x[row, col]"
+   ],
+   "metadata": {
+    "collapsed": false,
+    "ExecuteTime": {
+     "end_time": "2024-07-16T07:27:46.636859100Z",
+     "start_time": "2024-07-16T07:27:46.565554200Z"
+    }
+   },
+   "id": "2280e3af3434c091",
+   "execution_count": 130
+  },
+  {
+   "cell_type": "code",
+   "outputs": [
+    {
+     "data": {
+      "text/plain": "array([[0],\n       [1],\n       [2]])"
+     },
+     "execution_count": 131,
+     "metadata": {},
+     "output_type": "execute_result"
+    }
+   ],
+   "source": [
+    "row[:, np.newaxis]  # 列向量"
+   ],
+   "metadata": {
+    "collapsed": false,
+    "ExecuteTime": {
+     "end_time": "2024-07-16T07:27:46.677860600Z",
+     "start_time": "2024-07-16T07:27:46.610483100Z"
+    }
+   },
+   "id": "afe183e812692f0b",
+   "execution_count": 131
+  },
+  {
+   "cell_type": "code",
+   "outputs": [
+    {
+     "data": {
+      "text/plain": "array([[ 1,  3,  0],\n       [ 5,  7,  4],\n       [ 9, 11,  8]])"
+     },
+     "execution_count": 132,
+     "metadata": {},
+     "output_type": "execute_result"
+    }
+   ],
+   "source": [
+    "x[row[:, np.newaxis], col]"
+   ],
+   "metadata": {
+    "collapsed": false,
+    "ExecuteTime": {
+     "end_time": "2024-07-16T07:27:46.739377900Z",
+     "start_time": "2024-07-16T07:27:46.677860600Z"
+    }
+   },
+   "id": "918f9e809b92b0b1",
+   "execution_count": 132
+  },
+  {
+   "cell_type": "markdown",
+   "source": [
+    "## 5.其他Numpy通用函数\n",
+    "### 5.1数值函数"
+   ],
+   "metadata": {
+    "collapsed": false
+   },
+   "id": "acda187119b73f8f"
+  },
+  {
+   "cell_type": "markdown",
+   "source": [],
+   "metadata": {
+    "collapsed": false
+   },
+   "id": "c0628f1027a0e79c"
+  },
+  {
+   "cell_type": "code",
+   "outputs": [
+    {
+     "data": {
+      "text/plain": "array([46, 40, 37, 34, 35, 30, 40, 23, 46, 23])"
+     },
+     "execution_count": 133,
+     "metadata": {},
+     "output_type": "execute_result"
+    }
+   ],
+   "source": [
+    "x = np.random.randint(20, 50, size=10)\n",
+    "x"
+   ],
+   "metadata": {
+    "collapsed": false,
+    "ExecuteTime": {
+     "end_time": "2024-07-16T07:27:46.799412900Z",
+     "start_time": "2024-07-16T07:27:46.722377700Z"
+    }
+   },
+   "id": "d0d47d598e318a33",
+   "execution_count": 133
+  },
+  {
+   "cell_type": "markdown",
+   "source": [
+    "* 产生新的排序数组"
+   ],
+   "metadata": {
+    "collapsed": false
+   },
+   "id": "8de594dbbf7c95ce"
+  },
+  {
+   "cell_type": "code",
+   "outputs": [
+    {
+     "data": {
+      "text/plain": "array([23, 23, 30, 34, 35, 37, 40, 40, 46, 46])"
+     },
+     "execution_count": 134,
+     "metadata": {},
+     "output_type": "execute_result"
+    }
+   ],
+   "source": [
+    "np.sort(x)"
+   ],
+   "metadata": {
+    "collapsed": false,
+    "ExecuteTime": {
+     "end_time": "2024-07-16T07:27:46.857963400Z",
+     "start_time": "2024-07-16T07:27:46.798412500Z"
+    }
+   },
+   "id": "1b9169f19f5dacc9",
+   "execution_count": 134
+  },
+  {
+   "cell_type": "code",
+   "outputs": [
+    {
+     "data": {
+      "text/plain": "array([46, 40, 37, 34, 35, 30, 40, 23, 46, 23])"
+     },
+     "execution_count": 135,
+     "metadata": {},
+     "output_type": "execute_result"
+    }
+   ],
+   "source": [
+    "x"
+   ],
+   "metadata": {
+    "collapsed": false,
+    "ExecuteTime": {
+     "end_time": "2024-07-16T07:27:46.913433900Z",
+     "start_time": "2024-07-16T07:27:46.841417200Z"
+    }
+   },
+   "id": "c2a6b536dd5050ce",
+   "execution_count": 135
+  },
+  {
+   "cell_type": "markdown",
+   "source": [
+    "* 替换原数组"
+   ],
+   "metadata": {
+    "collapsed": false
+   },
+   "id": "bd030a32709be06c"
+  },
+  {
+   "cell_type": "code",
+   "outputs": [
+    {
+     "data": {
+      "text/plain": "array([23, 23, 30, 34, 35, 37, 40, 40, 46, 46])"
+     },
+     "execution_count": 136,
+     "metadata": {},
+     "output_type": "execute_result"
+    }
+   ],
+   "source": [
+    "x.sort()\n",
+    "x"
+   ],
+   "metadata": {
+    "collapsed": false,
+    "ExecuteTime": {
+     "end_time": "2024-07-16T07:27:46.968554Z",
+     "start_time": "2024-07-16T07:27:46.913433900Z"
+    }
+   },
+   "id": "87bffadcd3e9b83d",
+   "execution_count": 136
+  },
+  {
+   "cell_type": "markdown",
+   "source": [
+    "* 获得排序索引"
+   ],
+   "metadata": {
+    "collapsed": false
+   },
+   "id": "2c06b10efca3123"
+  },
+  {
+   "cell_type": "code",
+   "outputs": [
+    {
+     "data": {
+      "text/plain": "array([45, 25, 32, 31, 43, 34, 49, 37, 26, 33])"
+     },
+     "execution_count": 137,
+     "metadata": {},
+     "output_type": "execute_result"
+    }
+   ],
+   "source": [
+    "x = np.random.randint(20, 50, size=10)\n",
+    "x"
+   ],
+   "metadata": {
+    "collapsed": false,
+    "ExecuteTime": {
+     "end_time": "2024-07-16T07:27:47.044801400Z",
+     "start_time": "2024-07-16T07:27:46.950433700Z"
+    }
+   },
+   "id": "1600d2ee4aebcedc",
+   "execution_count": 137
+  },
+  {
+   "cell_type": "code",
+   "outputs": [
+    {
+     "data": {
+      "text/plain": "array([1, 8, 3, 2, 9, 5, 7, 4, 0, 6], dtype=int64)"
+     },
+     "execution_count": 138,
+     "metadata": {},
+     "output_type": "execute_result"
+    }
+   ],
+   "source": [
+    "i = np.argsort(x)\n",
+    "i"
+   ],
+   "metadata": {
+    "collapsed": false,
+    "ExecuteTime": {
+     "end_time": "2024-07-16T07:27:47.081829200Z",
+     "start_time": "2024-07-16T07:27:47.031801700Z"
+    }
+   },
+   "id": "b565b95a93d0c72b",
+   "execution_count": 138
+  },
+  {
+   "cell_type": "markdown",
+   "source": [
+    "### 5.2最大最小值"
+   ],
+   "metadata": {
+    "collapsed": false
+   },
+   "id": "fbcbf39633bc5909"
+  },
+  {
+   "cell_type": "code",
+   "outputs": [
+    {
+     "name": "stdout",
+     "output_type": "stream",
+     "text": [
+      "max: 49\n",
+      "min: 25\n"
+     ]
+    }
+   ],
+   "source": [
+    "print(\"max:\", np.max(x))\n",
+    "print(\"min:\", np.min(x))"
+   ],
+   "metadata": {
+    "collapsed": false,
+    "ExecuteTime": {
+     "end_time": "2024-07-16T07:27:47.142335700Z",
+     "start_time": "2024-07-16T07:27:47.070826200Z"
+    }
+   },
+   "id": "a6e00677312f4538",
+   "execution_count": 139
+  },
+  {
+   "cell_type": "code",
+   "outputs": [
+    {
+     "name": "stdout",
+     "output_type": "stream",
+     "text": [
+      "max_index: 6\n",
+      "min_index: 1\n"
+     ]
+    }
+   ],
+   "source": [
+    "print(\"max_index:\", np.argmax(x))\n",
+    "print(\"min_index:\", np.argmin(x))"
+   ],
+   "metadata": {
+    "collapsed": false,
+    "ExecuteTime": {
+     "end_time": "2024-07-16T07:27:47.195156Z",
+     "start_time": "2024-07-16T07:27:47.142335700Z"
+    }
+   },
+   "id": "dd4ee3d4f24a7b7f",
+   "execution_count": 140
+  },
+  {
+   "cell_type": "markdown",
+   "source": [
+    "### 5.3数值求和，求积"
+   ],
+   "metadata": {
+    "collapsed": false
+   },
+   "id": "a3db49a38bdbe602"
+  },
+  {
+   "cell_type": "code",
+   "outputs": [
+    {
+     "data": {
+      "text/plain": "array([1, 2, 3, 4, 5])"
+     },
+     "execution_count": 141,
+     "metadata": {},
+     "output_type": "execute_result"
+    }
+   ],
+   "source": [
+    "x = np.arange(1, 6)\n",
+    "x"
+   ],
+   "metadata": {
+    "collapsed": false,
+    "ExecuteTime": {
+     "end_time": "2024-07-16T07:27:47.256677600Z",
+     "start_time": "2024-07-16T07:27:47.180469400Z"
+    }
+   },
+   "id": "572b0d93a1bbb860",
+   "execution_count": 141
+  },
+  {
+   "cell_type": "code",
+   "outputs": [
+    {
+     "data": {
+      "text/plain": "15"
+     },
+     "execution_count": 142,
+     "metadata": {},
+     "output_type": "execute_result"
+    }
+   ],
+   "source": [
+    "x.sum()"
+   ],
+   "metadata": {
+    "collapsed": false,
+    "ExecuteTime": {
+     "end_time": "2024-07-16T07:27:47.313196Z",
+     "start_time": "2024-07-16T07:27:47.256677600Z"
+    }
+   },
+   "id": "f9fa3add793d9a87",
+   "execution_count": 142
+  },
+  {
+   "cell_type": "code",
+   "outputs": [
+    {
+     "data": {
+      "text/plain": "15"
+     },
+     "execution_count": 143,
+     "metadata": {},
+     "output_type": "execute_result"
+    }
+   ],
+   "source": [
+    "np.sum(x)"
+   ],
+   "metadata": {
+    "collapsed": false,
+    "ExecuteTime": {
+     "end_time": "2024-07-16T07:27:47.365586800Z",
+     "start_time": "2024-07-16T07:27:47.296630100Z"
+    }
+   },
+   "id": "8153def1d72c0d36",
+   "execution_count": 143
+  },
+  {
+   "cell_type": "code",
+   "outputs": [
+    {
+     "data": {
+      "text/plain": "array([[0, 1, 2],\n       [3, 4, 5]])"
+     },
+     "execution_count": 144,
+     "metadata": {},
+     "output_type": "execute_result"
+    }
+   ],
+   "source": [
+    "x1 = np.arange(6).reshape(2, 3)\n",
+    "x1"
+   ],
+   "metadata": {
+    "collapsed": false,
+    "ExecuteTime": {
+     "end_time": "2024-07-16T07:27:47.420657200Z",
+     "start_time": "2024-07-16T07:27:47.365586800Z"
+    }
+   },
+   "id": "2d6dab1310f6c729",
+   "execution_count": 144
+  },
+  {
+   "cell_type": "markdown",
+   "source": [
+    "* 按行求和"
+   ],
+   "metadata": {
+    "collapsed": false
+   },
+   "id": "2a87a4fd0a4eb434"
+  },
+  {
+   "cell_type": "code",
+   "outputs": [
+    {
+     "data": {
+      "text/plain": "array([ 3, 12])"
+     },
+     "execution_count": 145,
+     "metadata": {},
+     "output_type": "execute_result"
+    }
+   ],
+   "source": [
+    "np.sum(x1, axis=1)\n"
+   ],
+   "metadata": {
+    "collapsed": false,
+    "ExecuteTime": {
+     "end_time": "2024-07-16T07:27:47.482912700Z",
+     "start_time": "2024-07-16T07:27:47.405329400Z"
+    }
+   },
+   "id": "56be89f6fd6f81ba",
+   "execution_count": 145
+  },
+  {
+   "cell_type": "markdown",
+   "source": [
+    "* 按列求和"
+   ],
+   "metadata": {
+    "collapsed": false
+   },
+   "id": "a7b204fb3cbb0f26"
+  },
+  {
+   "cell_type": "code",
+   "outputs": [
+    {
+     "data": {
+      "text/plain": "array([3, 5, 7])"
+     },
+     "execution_count": 146,
+     "metadata": {},
+     "output_type": "execute_result"
+    }
+   ],
+   "source": [
+    "np.sum(x1, axis=0)"
+   ],
+   "metadata": {
+    "collapsed": false,
+    "ExecuteTime": {
+     "end_time": "2024-07-16T07:27:47.543523600Z",
+     "start_time": "2024-07-16T07:27:47.482912700Z"
+    }
+   },
+   "id": "7439f4614d5c8b4e",
+   "execution_count": 146
+  },
+  {
+   "cell_type": "markdown",
+   "source": [
+    "* 求积"
+   ],
+   "metadata": {
+    "collapsed": false
+   },
+   "id": "7e7f4b14c24677cd"
+  },
+  {
+   "cell_type": "code",
+   "outputs": [
+    {
+     "data": {
+      "text/plain": "120"
+     },
+     "execution_count": 147,
+     "metadata": {},
+     "output_type": "execute_result"
+    }
+   ],
+   "source": [
+    "x.prod()"
+   ],
+   "metadata": {
+    "collapsed": false,
+    "ExecuteTime": {
+     "end_time": "2024-07-16T07:27:47.607673800Z",
+     "start_time": "2024-07-16T07:27:47.523503300Z"
+    }
+   },
+   "id": "c08d962915a92f69",
+   "execution_count": 147
+  },
+  {
+   "cell_type": "code",
+   "outputs": [
+    {
+     "data": {
+      "text/plain": "120"
+     },
+     "execution_count": 148,
+     "metadata": {},
+     "output_type": "execute_result"
+    }
+   ],
+   "source": [
+    "np.prod(x)"
+   ],
+   "metadata": {
+    "collapsed": false,
+    "ExecuteTime": {
+     "end_time": "2024-07-16T07:27:47.663676600Z",
+     "start_time": "2024-07-16T07:27:47.606672700Z"
+    }
+   },
+   "id": "da844e181a13321f",
+   "execution_count": 148
+  },
+  {
+   "cell_type": "markdown",
+   "source": [
+    "### 5.4中位数、均值、方差、标准差"
+   ],
+   "metadata": {
+    "collapsed": false
+   },
+   "id": "2c65c8e203f5d2a2"
+  },
+  {
+   "cell_type": "code",
+   "outputs": [],
+   "source": [
+    "x = np.random.normal(0, 1, size=10000)"
+   ],
+   "metadata": {
+    "collapsed": false,
+    "ExecuteTime": {
+     "end_time": "2024-07-16T07:27:47.728352500Z",
+     "start_time": "2024-07-16T07:27:47.637674600Z"
+    }
+   },
+   "id": "533a6dbd8889137",
+   "execution_count": 149
+  },
+  {
+   "cell_type": "code",
+   "outputs": [
+    {
+     "data": {
+      "text/plain": "<Figure size 640x480 with 1 Axes>",
+      "image/png": ""
+     },
+     "metadata": {},
+     "output_type": "display_data"
+    }
+   ],
+   "source": [
+    "import matplotlib.pyplot as plt\n",
+    "\n",
+    "plt.hist(x, bins=50)\n",
+    "plt.show()"
+   ],
+   "metadata": {
+    "collapsed": false,
+    "ExecuteTime": {
+     "end_time": "2024-07-16T07:27:48.139386300Z",
+     "start_time": "2024-07-16T07:27:47.713782400Z"
+    }
+   },
+   "id": "474c9ea1fa56eba4",
+   "execution_count": 150
+  },
+  {
+   "cell_type": "markdown",
+   "source": [
+    "* 中位数"
+   ],
+   "metadata": {
+    "collapsed": false
+   },
+   "id": "75e91919b388ee39"
+  },
+  {
+   "cell_type": "code",
+   "outputs": [
+    {
+     "data": {
+      "text/plain": "-0.004709683531282821"
+     },
+     "execution_count": 151,
+     "metadata": {},
+     "output_type": "execute_result"
+    }
+   ],
+   "source": [
+    "np.median(x)"
+   ],
+   "metadata": {
+    "collapsed": false,
+    "ExecuteTime": {
+     "end_time": "2024-07-16T07:27:48.208398100Z",
+     "start_time": "2024-07-16T07:27:48.138386800Z"
+    }
+   },
+   "id": "5e324850ab65e4af",
+   "execution_count": 151
+  },
+  {
+   "cell_type": "markdown",
+   "source": [
+    "* 均值"
+   ],
+   "metadata": {
+    "collapsed": false
+   },
+   "id": "6b6eb73e7c0b63b"
+  },
+  {
+   "cell_type": "code",
+   "outputs": [
+    {
+     "data": {
+      "text/plain": "-0.008586278779275341"
+     },
+     "execution_count": 152,
+     "metadata": {},
+     "output_type": "execute_result"
+    }
+   ],
+   "source": [
+    "x.mean()"
+   ],
+   "metadata": {
+    "collapsed": false,
+    "ExecuteTime": {
+     "end_time": "2024-07-16T07:27:48.212395300Z",
+     "start_time": "2024-07-16T07:27:48.152812400Z"
+    }
+   },
+   "id": "5471af6a2d855520",
+   "execution_count": 152
+  },
+  {
+   "cell_type": "code",
+   "outputs": [
+    {
+     "data": {
+      "text/plain": "-0.008586278779275341"
+     },
+     "execution_count": 153,
+     "metadata": {},
+     "output_type": "execute_result"
+    }
+   ],
+   "source": [
+    "np.mean(x)"
+   ],
+   "metadata": {
+    "collapsed": false,
+    "ExecuteTime": {
+     "end_time": "2024-07-16T07:27:48.292605300Z",
+     "start_time": "2024-07-16T07:27:48.168813900Z"
+    }
+   },
+   "id": "b7c43443bdc3757a",
+   "execution_count": 153
+  },
+  {
+   "cell_type": "markdown",
+   "source": [
+    "* 方差"
+   ],
+   "metadata": {
+    "collapsed": false
+   },
+   "id": "a8181626e3e0fdbd"
+  },
+  {
+   "cell_type": "code",
+   "outputs": [
+    {
+     "data": {
+      "text/plain": "0.9908992474145937"
+     },
+     "execution_count": 154,
+     "metadata": {},
+     "output_type": "execute_result"
+    }
+   ],
+   "source": [
+    "x.var()"
+   ],
+   "metadata": {
+    "collapsed": false,
+    "ExecuteTime": {
+     "end_time": "2024-07-16T07:27:48.297121400Z",
+     "start_time": "2024-07-16T07:27:48.184820600Z"
+    }
+   },
+   "id": "9eae9df4c5f2bbd9",
+   "execution_count": 154
+  },
+  {
+   "cell_type": "code",
+   "outputs": [
+    {
+     "data": {
+      "text/plain": "0.9908992474145937"
+     },
+     "execution_count": 155,
+     "metadata": {},
+     "output_type": "execute_result"
+    }
+   ],
+   "source": [
+    "np.var(x)"
+   ],
+   "metadata": {
+    "collapsed": false,
+    "ExecuteTime": {
+     "end_time": "2024-07-16T07:27:48.336124100Z",
+     "start_time": "2024-07-16T07:27:48.199327200Z"
+    }
+   },
+   "id": "828e36156f26ed09",
+   "execution_count": 155
+  },
+  {
+   "cell_type": "markdown",
+   "source": [
+    "* 标准差"
+   ],
+   "metadata": {
+    "collapsed": false
+   },
+   "id": "200be12b98e84e78"
+  },
+  {
+   "cell_type": "code",
+   "outputs": [
+    {
+     "data": {
+      "text/plain": "0.9954392233655421"
+     },
+     "execution_count": 156,
+     "metadata": {},
+     "output_type": "execute_result"
+    }
+   ],
+   "source": [
+    "x.std()"
+   ],
+   "metadata": {
+    "collapsed": false,
+    "ExecuteTime": {
+     "end_time": "2024-07-16T07:27:48.351184700Z",
+     "start_time": "2024-07-16T07:27:48.219711400Z"
+    }
+   },
+   "id": "7bee76b1f51ad1fb",
+   "execution_count": 156
+  },
+  {
+   "cell_type": "code",
+   "outputs": [
+    {
+     "data": {
+      "text/plain": "0.9954392233655421"
+     },
+     "execution_count": 157,
+     "metadata": {},
+     "output_type": "execute_result"
+    }
+   ],
+   "source": [
+    "np.std(x)"
+   ],
+   "metadata": {
+    "collapsed": false,
+    "ExecuteTime": {
+     "end_time": "2024-07-16T07:27:48.359127300Z",
+     "start_time": "2024-07-16T07:27:48.231713700Z"
+    }
+   },
+   "id": "c4b9c73a08015f65",
+   "execution_count": 157
+  }
+ ],
+ "metadata": {
+  "kernelspec": {
+   "display_name": "Python 3 (ipykernel)",
+   "language": "python",
+   "name": "python3"
+  },
+  "language_info": {
+   "codemirror_mode": {
+    "name": "ipython",
+    "version": 3
+   },
+   "file_extension": ".py",
+   "mimetype": "text/x-python",
+   "name": "python",
+   "nbconvert_exporter": "python",
+   "pygments_lexer": "ipython3",
+   "version": "3.9.19"
+  }
+ },
+ "nbformat": 4,
+ "nbformat_minor": 5
+}
Index: .idea/vcs.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/vcs.xml b/.idea/vcs.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/vcs.xml	
@@ -0,0 +1,6 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="VcsDirectoryMappings">
+    <mapping directory="$PROJECT_DIR$" vcs="Git" />
+  </component>
+</project>
\ No newline at end of file
Index: 学生管理系统/Student.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/学生管理系统/Student.py b/学生管理系统/Student.py
new file mode 100644
--- /dev/null	
+++ b/学生管理系统/Student.py	
@@ -0,0 +1,15 @@
+class Student(object):
+    # 属性
+    def __init__(self, name, age):
+        self.name = name
+        self.age = age
+
+    # 方法
+    def __str__(self):
+        return (f""
+                f"name: {self.name}, age: {self.age}")
+
+
+if __name__ == '__main__':
+    s = Student('Alice', 20)
+    print(s)
Index: .ipynb_checkpoints/numpy-checkpoint.ipynb
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.ipynb_checkpoints/numpy-checkpoint.ipynb b/.ipynb_checkpoints/numpy-checkpoint.ipynb
new file mode 100644
--- /dev/null	
+++ b/.ipynb_checkpoints/numpy-checkpoint.ipynb	
@@ -0,0 +1,68 @@
+{
+ "cells": [
+  {
+   "cell_type": "markdown",
+   "id": "311d30c8f173df1d",
+   "metadata": {},
+   "source": [
+    "# 去"
+   ]
+  },
+  {
+   "cell_type": "code",
+   "execution_count": 2,
+   "id": "5ffc7a20c14bfde4",
+   "metadata": {
+    "ExecuteTime": {
+     "end_time": "2024-07-12T08:52:57.418010800Z",
+     "start_time": "2024-07-12T08:52:57.397678300Z"
+    }
+   },
+   "outputs": [],
+   "source": [
+    "import numpy as np\n"
+   ]
+  },
+  {
+   "cell_type": "code",
+   "execution_count": null,
+   "id": "70ec1f3595ca395b",
+   "metadata": {},
+   "outputs": [],
+   "source": []
+  },
+  {
+   "cell_type": "raw",
+   "id": "2bdaf9d8a4f9b15a",
+   "metadata": {},
+   "source": []
+  },
+  {
+   "cell_type": "markdown",
+   "id": "c9f17be0981d8e83",
+   "metadata": {},
+   "source": []
+  }
+ ],
+ "metadata": {
+  "kernelspec": {
+   "display_name": "Python 3 (ipykernel)",
+   "language": "python",
+   "name": "python3"
+  },
+  "language_info": {
+   "codemirror_mode": {
+    "name": "ipython",
+    "version": 3
+   },
+   "file_extension": ".py",
+   "mimetype": "text/x-python",
+   "name": "python",
+   "nbconvert_exporter": "python",
+   "pygments_lexer": "ipython3",
+   "version": "3.9.19"
+  }
+ },
+ "nbformat": 4,
+ "nbformat_minor": 5
+}
Index: 学生管理系统/v1.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/学生管理系统/v1.py b/学生管理系统/v1.py
new file mode 100644
--- /dev/null	
+++ b/学生管理系统/v1.py	
@@ -0,0 +1,100 @@
+student_list = []
+
+
+def menu():
+    print('-' * 40)
+    print('欢迎使用传智教育学生管理系统V1.0')
+    print('【1】添加学生信息')
+    print('【2】删除学生信息')
+    print('【3】修改学生信息')
+    print('【4】查询学生信息')
+    print('【5】遍历所有学生信息')
+    print('【6】保存信息')
+    print('【7】退出系统')
+    print('-' * 40)
+
+
+def add_student():
+    student = {}
+    student['name'] = input('请输入学生姓名：')
+    student['age'] = int(input('请输入学生年龄：'))
+    student_list.append(student)
+    print('添加学生信息成功！')
+
+
+def del_student():
+    name = input('请输入要删除的学生姓名：')
+    for student in student_list:
+        if student['name'] == name:
+            student_list.remove(student)
+            print('删除学生信息成功！')
+            break
+    else:
+        print('没有找到该学生信息！')
+
+
+def edit_student():
+    name = input('请输入要删除的学生姓名：')
+    for student in student_list:
+        if student['name'] == name:
+            student['name'] = input('请输入新的学生姓名：')
+            student['age'] = int(input('请输入新的学生年龄：'))
+            print('删除学生信息成功！')
+            break
+    else:
+        print('没有找到该学生信息！')
+
+
+def view_student():
+    name = input('请输入要查询的学生姓名：')
+    for student in student_list:
+        if student['name'] == name:
+            print(student)
+            break
+    else:
+        print('没有找到该学生信息！')
+
+
+def view_list():
+    for student in student_list:
+        print(student)
+
+
+def save_info():
+    f = open('students.txt', 'w', encoding='utf-8')
+    f.write(str(student_list))
+    f.close()
+
+
+def load_info():
+    f = open('students.txt', 'r', encoding='utf-8')
+    content = f.read()
+    if not content:
+        return
+    global student_list
+    student_list = eval(content)
+    f.close()
+
+
+load_info()
+while True:
+    menu()
+    # 提示用户输入操作编号
+    user_input = int(input('请输入操作编号：'))
+    if user_input == 1:
+        add_student()
+    elif user_input == 2:
+        del_student()
+    elif user_input == 3:
+        edit_student()
+    elif user_input == 4:
+        view_student()
+    elif user_input == 5:
+        view_list()
+    elif user_input == 6:
+        save_info()
+    elif user_input == 7:
+        print('推出系统成功，谢谢使用！')
+        break
+    else:
+        print('输入有误，请重新输入！')
Index: .idea/.gitignore
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/.gitignore b/.idea/.gitignore
new file mode 100644
--- /dev/null	
+++ b/.idea/.gitignore	
@@ -0,0 +1,8 @@
+# Default ignored files
+/shelf/
+/workspace.xml
+# Editor-based HTTP Client requests
+/httpRequests/
+# Datasource local storage ignored files
+/dataSources/
+/dataSources.local.xml
Index: 学生管理系统/main.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/学生管理系统/main.py b/学生管理系统/main.py
new file mode 100644
--- /dev/null	
+++ b/学生管理系统/main.py	
@@ -0,0 +1,5 @@
+from StudentManager import StudentManager
+
+if __name__ == '__main__':
+    sm = StudentManager()
+    sm.start()
Index: 学生管理系统/student.txt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/学生管理系统/student.txt b/学生管理系统/student.txt
new file mode 100644
--- /dev/null	
+++ b/学生管理系统/student.txt	
@@ -0,0 +1,1 @@
+[{'name': 'tom', 'age': 18}, {'name': 'jhon', 'age': 20}]
\ No newline at end of file
Index: Pandas库.ipynb
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Pandas库.ipynb b/Pandas库.ipynb
new file mode 100644
--- /dev/null	
+++ b/Pandas库.ipynb	
@@ -0,0 +1,6385 @@
+{
+ "cells": [
+  {
+   "cell_type": "markdown",
+   "source": [
+    "## 引子\n",
+    "Numpy在向量化的数值计算中表现优异\n",
+    "但是在处理更灵活、复杂的数据任务：\n",
+    "如为数据添加标签、处理缺失值、分组和透视表等方面\n",
+    "Numpy显得力不从心\n",
+    "**而基于Numpy构建的Pandas库，提供了使得数据分析变得更快更简单的高级数据结构和操作工具**"
+   ],
+   "metadata": {
+    "collapsed": false
+   },
+   "id": "f868f4b548060c2f"
+  },
+  {
+   "cell_type": "markdown",
+   "source": [
+    "## 1对象创建\n",
+    "### 1.1Pandas Series对象\n",
+    "Series是带标签数据的一维数组\n",
+    "**Series对象的创建**\n",
+    "通用结构：pd.Series(data,index=index,dtype=dtype)\n",
+    "data：数据，可以是列表，字典或Numpy数组\n",
+    "index：索引，为可选参数\n",
+    "dtype：数据类型，为可选参数\n",
+    "#### 1.1.1用列表创建\n",
+    "* index缺省，默认为整数序列"
+   ],
+   "metadata": {
+    "collapsed": false
+   },
+   "id": "79b243c3ed4a9241"
+  },
+  {
+   "cell_type": "code",
+   "outputs": [
+    {
+     "data": {
+      "text/plain": "0    1.5\n1    3.0\n2    4.5\n3    6.0\ndtype: float64"
+     },
+     "execution_count": 174,
+     "metadata": {},
+     "output_type": "execute_result"
+    }
+   ],
+   "source": [
+    "import pandas as pd\n",
+    "\n",
+    "data = pd.Series([1.5, 3, 4.5, 6])\n",
+    "data"
+   ],
+   "metadata": {
+    "collapsed": false,
+    "ExecuteTime": {
+     "end_time": "2024-07-14T11:32:25.333926100Z",
+     "start_time": "2024-07-14T11:32:22.767577Z"
+    }
+   },
+   "id": "b883135e136931ea",
+   "execution_count": 174
+  },
+  {
+   "cell_type": "markdown",
+   "source": [
+    "* 增加index"
+   ],
+   "metadata": {
+    "collapsed": false
+   },
+   "id": "caffac9cf80930c4"
+  },
+  {
+   "cell_type": "code",
+   "outputs": [
+    {
+     "data": {
+      "text/plain": "a    1.5\nb    3.0\nc    4.5\nd    6.0\ndtype: float64"
+     },
+     "execution_count": 175,
+     "metadata": {},
+     "output_type": "execute_result"
+    }
+   ],
+   "source": [
+    "data = pd.Series([1.5, 3, 4.5, 6], index=[\"a\", \"b\", \"c\", \"d\"])\n",
+    "data"
+   ],
+   "metadata": {
+    "collapsed": false,
+    "ExecuteTime": {
+     "end_time": "2024-07-14T11:32:25.451432600Z",
+     "start_time": "2024-07-14T11:32:25.309664100Z"
+    }
+   },
+   "id": "df833658952aa25b",
+   "execution_count": 175
+  },
+  {
+   "cell_type": "markdown",
+   "source": [
+    "* 增加数据类型\n",
+    ">缺省则从传入的数据自动判断"
+   ],
+   "metadata": {
+    "collapsed": false
+   },
+   "id": "193ea6458fed0e0d"
+  },
+  {
+   "cell_type": "code",
+   "outputs": [
+    {
+     "data": {
+      "text/plain": "a    1\nb    2\nc    3\nd    4\ndtype: int64"
+     },
+     "execution_count": 176,
+     "metadata": {},
+     "output_type": "execute_result"
+    }
+   ],
+   "source": [
+    "data = pd.Series([1, 2, 3, 4], index=[\"a\", \"b\", \"c\", \"d\"])\n",
+    "data"
+   ],
+   "metadata": {
+    "collapsed": false,
+    "ExecuteTime": {
+     "end_time": "2024-07-14T11:32:25.527939400Z",
+     "start_time": "2024-07-14T11:32:25.363926Z"
+    }
+   },
+   "id": "317a59169c3f96b4",
+   "execution_count": 176
+  },
+  {
+   "cell_type": "code",
+   "outputs": [
+    {
+     "data": {
+      "text/plain": "a    1.0\nb    2.0\nc    3.0\nd    4.0\ndtype: float64"
+     },
+     "execution_count": 177,
+     "metadata": {},
+     "output_type": "execute_result"
+    }
+   ],
+   "source": [
+    "data = pd.Series([1, 2, 3, 4], index=[\"a\", \"b\", \"c\", \"d\"], dtype=float)\n",
+    "data"
+   ],
+   "metadata": {
+    "collapsed": false,
+    "ExecuteTime": {
+     "end_time": "2024-07-14T11:32:25.641448Z",
+     "start_time": "2024-07-14T11:32:25.506432400Z"
+    }
+   },
+   "id": "ee23abee08455b9f",
+   "execution_count": 177
+  },
+  {
+   "cell_type": "markdown",
+   "source": [
+    "**注意：数据支持多种类型**"
+   ],
+   "metadata": {
+    "collapsed": false
+   },
+   "id": "a2cae0ecd2910788"
+  },
+  {
+   "cell_type": "code",
+   "outputs": [
+    {
+     "data": {
+      "text/plain": "a    1\nb    2\nc    3\nd    4\ndtype: object"
+     },
+     "execution_count": 178,
+     "metadata": {},
+     "output_type": "execute_result"
+    }
+   ],
+   "source": [
+    "data = pd.Series([1, 2, \"3\", 4], index=[\"a\", \"b\", \"c\", \"d\"])\n",
+    "data"
+   ],
+   "metadata": {
+    "collapsed": false,
+    "ExecuteTime": {
+     "end_time": "2024-07-14T11:32:25.718449100Z",
+     "start_time": "2024-07-14T11:32:25.626446400Z"
+    }
+   },
+   "id": "8c56ef3806c5ff72",
+   "execution_count": 178
+  },
+  {
+   "cell_type": "code",
+   "outputs": [
+    {
+     "data": {
+      "text/plain": "1"
+     },
+     "execution_count": 179,
+     "metadata": {},
+     "output_type": "execute_result"
+    }
+   ],
+   "source": [
+    "data[\"a\"]"
+   ],
+   "metadata": {
+    "collapsed": false,
+    "ExecuteTime": {
+     "end_time": "2024-07-14T11:32:25.827523100Z",
+     "start_time": "2024-07-14T11:32:25.683448100Z"
+    }
+   },
+   "id": "49aae81fe4c1832c",
+   "execution_count": 179
+  },
+  {
+   "cell_type": "code",
+   "outputs": [
+    {
+     "data": {
+      "text/plain": "'3'"
+     },
+     "execution_count": 180,
+     "metadata": {},
+     "output_type": "execute_result"
+    }
+   ],
+   "source": [
+    "data[\"c\"]"
+   ],
+   "metadata": {
+    "collapsed": false,
+    "ExecuteTime": {
+     "end_time": "2024-07-14T11:32:25.914524900Z",
+     "start_time": "2024-07-14T11:32:25.811015Z"
+    }
+   },
+   "id": "18dc56e44366018e",
+   "execution_count": 180
+  },
+  {
+   "cell_type": "markdown",
+   "source": [
+    "**数据类型可被强制改变**"
+   ],
+   "metadata": {
+    "collapsed": false
+   },
+   "id": "8cd051262c6d0e6e"
+  },
+  {
+   "cell_type": "code",
+   "outputs": [
+    {
+     "data": {
+      "text/plain": "a    1.0\nb    2.0\nc    3.0\nd    4.0\ndtype: float64"
+     },
+     "execution_count": 181,
+     "metadata": {},
+     "output_type": "execute_result"
+    }
+   ],
+   "source": [
+    "data = pd.Series([1, 2, \"3\", 4], index=[\"a\", \"b\", \"c\", \"d\"], dtype=float)\n",
+    "data"
+   ],
+   "metadata": {
+    "collapsed": false,
+    "ExecuteTime": {
+     "end_time": "2024-07-14T11:32:26.053552900Z",
+     "start_time": "2024-07-14T11:32:25.911524800Z"
+    }
+   },
+   "id": "d50cafb1610f85af",
+   "execution_count": 181
+  },
+  {
+   "cell_type": "code",
+   "outputs": [
+    {
+     "data": {
+      "text/plain": "3.0"
+     },
+     "execution_count": 182,
+     "metadata": {},
+     "output_type": "execute_result"
+    }
+   ],
+   "source": [
+    "data[\"c\"]"
+   ],
+   "metadata": {
+    "collapsed": false,
+    "ExecuteTime": {
+     "end_time": "2024-07-14T11:32:26.119555200Z",
+     "start_time": "2024-07-14T11:32:26.034553500Z"
+    }
+   },
+   "id": "2821d179c4309732",
+   "execution_count": 182
+  },
+  {
+   "cell_type": "code",
+   "outputs": [
+    {
+     "ename": "ValueError",
+     "evalue": "could not convert string to float: 'a'",
+     "output_type": "error",
+     "traceback": [
+      "\u001B[1;31m---------------------------------------------------------------------------\u001B[0m",
+      "\u001B[1;31mValueError\u001B[0m                                Traceback (most recent call last)",
+      "Cell \u001B[1;32mIn[183], line 1\u001B[0m\n\u001B[1;32m----> 1\u001B[0m data \u001B[38;5;241m=\u001B[39m \u001B[43mpd\u001B[49m\u001B[38;5;241;43m.\u001B[39;49m\u001B[43mSeries\u001B[49m\u001B[43m(\u001B[49m\u001B[43m[\u001B[49m\u001B[38;5;241;43m1\u001B[39;49m\u001B[43m,\u001B[49m\u001B[43m \u001B[49m\u001B[38;5;241;43m2\u001B[39;49m\u001B[43m,\u001B[49m\u001B[43m \u001B[49m\u001B[38;5;124;43m\"\u001B[39;49m\u001B[38;5;124;43ma\u001B[39;49m\u001B[38;5;124;43m\"\u001B[39;49m\u001B[43m,\u001B[49m\u001B[43m \u001B[49m\u001B[38;5;241;43m4\u001B[39;49m\u001B[43m]\u001B[49m\u001B[43m,\u001B[49m\u001B[43m \u001B[49m\u001B[43mindex\u001B[49m\u001B[38;5;241;43m=\u001B[39;49m\u001B[43m[\u001B[49m\u001B[38;5;124;43m\"\u001B[39;49m\u001B[38;5;124;43ma\u001B[39;49m\u001B[38;5;124;43m\"\u001B[39;49m\u001B[43m,\u001B[49m\u001B[43m \u001B[49m\u001B[38;5;124;43m\"\u001B[39;49m\u001B[38;5;124;43mb\u001B[39;49m\u001B[38;5;124;43m\"\u001B[39;49m\u001B[43m,\u001B[49m\u001B[43m \u001B[49m\u001B[38;5;124;43m\"\u001B[39;49m\u001B[38;5;124;43mc\u001B[39;49m\u001B[38;5;124;43m\"\u001B[39;49m\u001B[43m,\u001B[49m\u001B[43m \u001B[49m\u001B[38;5;124;43m\"\u001B[39;49m\u001B[38;5;124;43md\u001B[39;49m\u001B[38;5;124;43m\"\u001B[39;49m\u001B[43m]\u001B[49m\u001B[43m,\u001B[49m\u001B[43m \u001B[49m\u001B[43mdtype\u001B[49m\u001B[38;5;241;43m=\u001B[39;49m\u001B[38;5;28;43mfloat\u001B[39;49m\u001B[43m)\u001B[49m\n\u001B[0;32m      2\u001B[0m data\n",
+      "File \u001B[1;32mD:\\app\\anaconda3\\envs\\ai\\lib\\site-packages\\pandas\\core\\series.py:584\u001B[0m, in \u001B[0;36mSeries.__init__\u001B[1;34m(self, data, index, dtype, name, copy, fastpath)\u001B[0m\n\u001B[0;32m    582\u001B[0m         data \u001B[38;5;241m=\u001B[39m data\u001B[38;5;241m.\u001B[39mcopy()\n\u001B[0;32m    583\u001B[0m \u001B[38;5;28;01melse\u001B[39;00m:\n\u001B[1;32m--> 584\u001B[0m     data \u001B[38;5;241m=\u001B[39m \u001B[43msanitize_array\u001B[49m\u001B[43m(\u001B[49m\u001B[43mdata\u001B[49m\u001B[43m,\u001B[49m\u001B[43m \u001B[49m\u001B[43mindex\u001B[49m\u001B[43m,\u001B[49m\u001B[43m \u001B[49m\u001B[43mdtype\u001B[49m\u001B[43m,\u001B[49m\u001B[43m \u001B[49m\u001B[43mcopy\u001B[49m\u001B[43m)\u001B[49m\n\u001B[0;32m    586\u001B[0m     manager \u001B[38;5;241m=\u001B[39m _get_option(\u001B[38;5;124m\"\u001B[39m\u001B[38;5;124mmode.data_manager\u001B[39m\u001B[38;5;124m\"\u001B[39m, silent\u001B[38;5;241m=\u001B[39m\u001B[38;5;28;01mTrue\u001B[39;00m)\n\u001B[0;32m    587\u001B[0m     \u001B[38;5;28;01mif\u001B[39;00m manager \u001B[38;5;241m==\u001B[39m \u001B[38;5;124m\"\u001B[39m\u001B[38;5;124mblock\u001B[39m\u001B[38;5;124m\"\u001B[39m:\n",
+      "File \u001B[1;32mD:\\app\\anaconda3\\envs\\ai\\lib\\site-packages\\pandas\\core\\construction.py:651\u001B[0m, in \u001B[0;36msanitize_array\u001B[1;34m(data, index, dtype, copy, allow_2d)\u001B[0m\n\u001B[0;32m    648\u001B[0m     subarr \u001B[38;5;241m=\u001B[39m np\u001B[38;5;241m.\u001B[39marray([], dtype\u001B[38;5;241m=\u001B[39mnp\u001B[38;5;241m.\u001B[39mfloat64)\n\u001B[0;32m    650\u001B[0m \u001B[38;5;28;01melif\u001B[39;00m dtype \u001B[38;5;129;01mis\u001B[39;00m \u001B[38;5;129;01mnot\u001B[39;00m \u001B[38;5;28;01mNone\u001B[39;00m:\n\u001B[1;32m--> 651\u001B[0m     subarr \u001B[38;5;241m=\u001B[39m \u001B[43m_try_cast\u001B[49m\u001B[43m(\u001B[49m\u001B[43mdata\u001B[49m\u001B[43m,\u001B[49m\u001B[43m \u001B[49m\u001B[43mdtype\u001B[49m\u001B[43m,\u001B[49m\u001B[43m \u001B[49m\u001B[43mcopy\u001B[49m\u001B[43m)\u001B[49m\n\u001B[0;32m    653\u001B[0m \u001B[38;5;28;01melse\u001B[39;00m:\n\u001B[0;32m    654\u001B[0m     subarr \u001B[38;5;241m=\u001B[39m maybe_convert_platform(data)\n",
+      "File \u001B[1;32mD:\\app\\anaconda3\\envs\\ai\\lib\\site-packages\\pandas\\core\\construction.py:820\u001B[0m, in \u001B[0;36m_try_cast\u001B[1;34m(arr, dtype, copy)\u001B[0m\n\u001B[0;32m    818\u001B[0m     subarr \u001B[38;5;241m=\u001B[39m maybe_cast_to_integer_array(arr, dtype)\n\u001B[0;32m    819\u001B[0m \u001B[38;5;28;01melif\u001B[39;00m \u001B[38;5;129;01mnot\u001B[39;00m copy:\n\u001B[1;32m--> 820\u001B[0m     subarr \u001B[38;5;241m=\u001B[39m \u001B[43mnp\u001B[49m\u001B[38;5;241;43m.\u001B[39;49m\u001B[43masarray\u001B[49m\u001B[43m(\u001B[49m\u001B[43marr\u001B[49m\u001B[43m,\u001B[49m\u001B[43m \u001B[49m\u001B[43mdtype\u001B[49m\u001B[38;5;241;43m=\u001B[39;49m\u001B[43mdtype\u001B[49m\u001B[43m)\u001B[49m\n\u001B[0;32m    821\u001B[0m \u001B[38;5;28;01melse\u001B[39;00m:\n\u001B[0;32m    822\u001B[0m     subarr \u001B[38;5;241m=\u001B[39m np\u001B[38;5;241m.\u001B[39marray(arr, dtype\u001B[38;5;241m=\u001B[39mdtype, copy\u001B[38;5;241m=\u001B[39mcopy)\n",
+      "\u001B[1;31mValueError\u001B[0m: could not convert string to float: 'a'"
+     ]
+    }
+   ],
+   "source": [
+    "data = pd.Series([1, 2, \"a\", 4], index=[\"a\", \"b\", \"c\", \"d\"], dtype=float)\n",
+    "data"
+   ],
+   "metadata": {
+    "collapsed": false,
+    "ExecuteTime": {
+     "end_time": "2024-07-14T11:32:26.511606800Z",
+     "start_time": "2024-07-14T11:32:26.095553Z"
+    }
+   },
+   "id": "207a7244c4b3bbc0",
+   "execution_count": 183
+  },
+  {
+   "cell_type": "markdown",
+   "source": [
+    "#### 1.1.2用一维numpy数组创建"
+   ],
+   "metadata": {
+    "collapsed": false
+   },
+   "id": "e2d0e3f28ac6021a"
+  },
+  {
+   "cell_type": "code",
+   "outputs": [],
+   "source": [
+    "import numpy as np\n",
+    "\n",
+    "x = np.arange(5)\n",
+    "pd.Series(x)"
+   ],
+   "metadata": {
+    "collapsed": false,
+    "ExecuteTime": {
+     "start_time": "2024-07-14T11:32:26.499606600Z"
+    }
+   },
+   "id": "584a8fc89a7d05a0",
+   "execution_count": null
+  },
+  {
+   "cell_type": "markdown",
+   "source": [
+    "#### 1.1.3用字典创建"
+   ],
+   "metadata": {
+    "collapsed": false
+   },
+   "id": "1cb54ddaab388fba"
+  },
+  {
+   "cell_type": "markdown",
+   "source": [
+    "* 默认以键为index，值为data"
+   ],
+   "metadata": {
+    "collapsed": false
+   },
+   "id": "6c598b745d2a635b"
+  },
+  {
+   "cell_type": "code",
+   "outputs": [],
+   "source": [
+    "population_dict = {\"Beijing\": 2154,\n",
+    "                   \"ShangHai\": 2424,\n",
+    "                   \"ShenZheng\": 1303,\n",
+    "                   \"HangZhou\": 981}\n",
+    "population = pd.Series(population_dict)\n",
+    "population"
+   ],
+   "metadata": {
+    "collapsed": false,
+    "ExecuteTime": {
+     "start_time": "2024-07-14T11:32:26.501606800Z"
+    }
+   },
+   "id": "53d6f634d2836af8",
+   "execution_count": null
+  },
+  {
+   "cell_type": "markdown",
+   "source": [
+    "* 字典创建，如果指定index，则会到字典的键中筛选，找不到的，值设为NaN"
+   ],
+   "metadata": {
+    "collapsed": false
+   },
+   "id": "ff74b23b7270e12d"
+  },
+  {
+   "cell_type": "code",
+   "outputs": [
+    {
+     "data": {
+      "text/plain": "Beijing     2154.0\nHangZhou     981.0\nc              NaN\nd              NaN\ndtype: float64"
+     },
+     "execution_count": 362,
+     "metadata": {},
+     "output_type": "execute_result"
+    }
+   ],
+   "source": [
+    "population = pd.Series(population_dict, index=[\"Beijing\", \"HangZhou\", \"c\", \"d\"])\n",
+    "population"
+   ],
+   "metadata": {
+    "collapsed": false,
+    "ExecuteTime": {
+     "end_time": "2024-07-14T11:33:10.436666400Z",
+     "start_time": "2024-07-14T11:33:10.373942Z"
+    }
+   },
+   "id": "1e55c97a5ac8039d",
+   "execution_count": 362
+  },
+  {
+   "cell_type": "markdown",
+   "source": [
+    "#### 1.1.4data为标量的情况"
+   ],
+   "metadata": {
+    "collapsed": false
+   },
+   "id": "c11a16e10bd29eae"
+  },
+  {
+   "cell_type": "code",
+   "outputs": [],
+   "source": [
+    "pd.Series(5, index=[100, 200, 300])"
+   ],
+   "metadata": {
+    "collapsed": false,
+    "ExecuteTime": {
+     "start_time": "2024-07-14T11:32:26.503606600Z"
+    }
+   },
+   "id": "b8deb324755db4d6",
+   "execution_count": null
+  },
+  {
+   "cell_type": "markdown",
+   "source": [
+    "### 1.2Pandas DataFrame对象\n",
+    "DataFrame是带标签数据的多维数组\n",
+    "**DataFrame对象的创建**\n",
+    "通用结构：pd.DataFrame(data,index=index,columns=columns)\n",
+    "data：数据，可以是列表、字典或Numpy数组\n",
+    "index：索引，为可选参数\n",
+    "columns：列标签，为可选参数"
+   ],
+   "metadata": {
+    "collapsed": false
+   },
+   "id": "f6756b1a0354dd1e"
+  },
+  {
+   "cell_type": "markdown",
+   "source": [
+    "#### 1.2.1通过Series对象创建"
+   ],
+   "metadata": {
+    "collapsed": false
+   },
+   "id": "134c8846b37de39f"
+  },
+  {
+   "cell_type": "code",
+   "outputs": [],
+   "source": [
+    "population_dict = {\"Beijing\": 2154,\n",
+    "                   \"ShangHai\": 2424,\n",
+    "                   \"ShenZheng\": 1303,\n",
+    "                   \"HangZhou\": 981}\n",
+    "population = pd.Series(population_dict)\n",
+    "pd.DataFrame(population)"
+   ],
+   "metadata": {
+    "collapsed": false,
+    "ExecuteTime": {
+     "start_time": "2024-07-14T11:32:26.504606700Z"
+    }
+   },
+   "id": "722fa73d992276b8",
+   "execution_count": null
+  },
+  {
+   "cell_type": "code",
+   "outputs": [],
+   "source": [
+    "pd.DataFrame(population, columns=[\"population\"])"
+   ],
+   "metadata": {
+    "collapsed": false,
+    "ExecuteTime": {
+     "start_time": "2024-07-14T11:32:26.505607800Z"
+    }
+   },
+   "id": "49737e386f66dc2f",
+   "execution_count": null
+  },
+  {
+   "cell_type": "markdown",
+   "source": [
+    "#### 1.2.2通过Series对象字典创建"
+   ],
+   "metadata": {
+    "collapsed": false
+   },
+   "id": "20ddf7c109cfb80b"
+  },
+  {
+   "cell_type": "code",
+   "outputs": [],
+   "source": [
+    "GDP_dict = {\"Beijing\": 30320,\n",
+    "            \"ShangHai\": 32680,\n",
+    "            \"ShenZheng\": 24222,\n",
+    "            \"HangZhou\": 13468}\n",
+    "GDP = pd.Series(GDP_dict)\n",
+    "GDP"
+   ],
+   "metadata": {
+    "collapsed": false,
+    "ExecuteTime": {
+     "start_time": "2024-07-14T11:32:26.505607800Z"
+    }
+   },
+   "id": "bef89b4a3fa6fa65",
+   "execution_count": null
+  },
+  {
+   "cell_type": "code",
+   "outputs": [
+    {
+     "data": {
+      "text/plain": "           population      GDP\nBeijing        2154.0  30320.0\nHangZhou        981.0  13468.0\nShangHai          NaN  32680.0\nShenZheng         NaN  24222.0\nc                 NaN      NaN\nd                 NaN      NaN",
+      "text/html": "<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>population</th>\n      <th>GDP</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>Beijing</th>\n      <td>2154.0</td>\n      <td>30320.0</td>\n    </tr>\n    <tr>\n      <th>HangZhou</th>\n      <td>981.0</td>\n      <td>13468.0</td>\n    </tr>\n    <tr>\n      <th>ShangHai</th>\n      <td>NaN</td>\n      <td>32680.0</td>\n    </tr>\n    <tr>\n      <th>ShenZheng</th>\n      <td>NaN</td>\n      <td>24222.0</td>\n    </tr>\n    <tr>\n      <th>c</th>\n      <td>NaN</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>d</th>\n      <td>NaN</td>\n      <td>NaN</td>\n    </tr>\n  </tbody>\n</table>\n</div>"
+     },
+     "execution_count": 363,
+     "metadata": {},
+     "output_type": "execute_result"
+    }
+   ],
+   "source": [
+    "pd.DataFrame({\"population\": population, \"GDP\": GDP})"
+   ],
+   "metadata": {
+    "collapsed": false,
+    "ExecuteTime": {
+     "end_time": "2024-07-14T11:33:15.430928500Z",
+     "start_time": "2024-07-14T11:33:15.360580500Z"
+    }
+   },
+   "id": "1f3a5e39c52b2fe5",
+   "execution_count": 363
+  },
+  {
+   "cell_type": "markdown",
+   "source": [
+    "**注意：数量不够的会自动补齐**"
+   ],
+   "metadata": {
+    "collapsed": false
+   },
+   "id": "fa7bf7902577f205"
+  },
+  {
+   "cell_type": "code",
+   "outputs": [
+    {
+     "ename": "NameError",
+     "evalue": "name 'population' is not defined",
+     "output_type": "error",
+     "traceback": [
+      "\u001B[1;31m---------------------------------------------------------------------------\u001B[0m",
+      "\u001B[1;31mNameError\u001B[0m                                 Traceback (most recent call last)",
+      "Cell \u001B[1;32mIn[185], line 1\u001B[0m\n\u001B[1;32m----> 1\u001B[0m pd\u001B[38;5;241m.\u001B[39mDataFrame({\u001B[38;5;124m\"\u001B[39m\u001B[38;5;124mpopulation\u001B[39m\u001B[38;5;124m\"\u001B[39m: \u001B[43mpopulation\u001B[49m, \u001B[38;5;124m\"\u001B[39m\u001B[38;5;124mGDP\u001B[39m\u001B[38;5;124m\"\u001B[39m: GDP, \u001B[38;5;124m\"\u001B[39m\u001B[38;5;124mcountry\u001B[39m\u001B[38;5;124m\"\u001B[39m: \u001B[38;5;124m\"\u001B[39m\u001B[38;5;124mChina\u001B[39m\u001B[38;5;124m\"\u001B[39m})\n",
+      "\u001B[1;31mNameError\u001B[0m: name 'population' is not defined"
+     ]
+    }
+   ],
+   "source": [
+    "pd.DataFrame({\"population\": population, \"GDP\": GDP, \"country\": \"China\"})"
+   ],
+   "metadata": {
+    "collapsed": false,
+    "ExecuteTime": {
+     "end_time": "2024-07-14T11:32:29.290090400Z",
+     "start_time": "2024-07-14T11:32:26.603128500Z"
+    }
+   },
+   "id": "246da9e8dc883c89",
+   "execution_count": 185
+  },
+  {
+   "cell_type": "markdown",
+   "source": [
+    "#### 1.2.3通过字典列表对象创建\n",
+    "* 字典索引作为index，字典键作为columns"
+   ],
+   "metadata": {
+    "collapsed": false
+   },
+   "id": "3af79f5bcc307ba6"
+  },
+  {
+   "cell_type": "code",
+   "outputs": [
+    {
+     "data": {
+      "text/plain": "[{'a': 0, 'b': 0}, {'a': 1, 'b': 2}, {'a': 2, 'b': 4}]"
+     },
+     "execution_count": 186,
+     "metadata": {},
+     "output_type": "execute_result"
+    }
+   ],
+   "source": [
+    "data = [{\"a\": i, \"b\": 2 * i} for i in range(3)]\n",
+    "data"
+   ],
+   "metadata": {
+    "collapsed": false,
+    "ExecuteTime": {
+     "end_time": "2024-07-14T11:32:29.450386300Z",
+     "start_time": "2024-07-14T11:32:29.287402700Z"
+    }
+   },
+   "id": "89997adb7ad13c7e",
+   "execution_count": 186
+  },
+  {
+   "cell_type": "code",
+   "outputs": [
+    {
+     "data": {
+      "text/plain": "   a  b\n0  0  0\n1  1  2\n2  2  4",
+      "text/html": "<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>a</th>\n      <th>b</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>0</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>1</td>\n      <td>2</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>2</td>\n      <td>4</td>\n    </tr>\n  </tbody>\n</table>\n</div>"
+     },
+     "execution_count": 187,
+     "metadata": {},
+     "output_type": "execute_result"
+    }
+   ],
+   "source": [
+    "pd.DataFrame(data)"
+   ],
+   "metadata": {
+    "collapsed": false,
+    "ExecuteTime": {
+     "end_time": "2024-07-14T11:32:29.497879500Z",
+     "start_time": "2024-07-14T11:32:29.425700200Z"
+    }
+   },
+   "id": "f69e306297574a22",
+   "execution_count": 187
+  },
+  {
+   "cell_type": "markdown",
+   "source": [
+    "* 不存在的键，会默认值为NaN"
+   ],
+   "metadata": {
+    "collapsed": false
+   },
+   "id": "9477823db9f1dbb1"
+  },
+  {
+   "cell_type": "code",
+   "outputs": [
+    {
+     "data": {
+      "text/plain": "[{'a': 1, 'b': 1}, {'b': 3, 'c': 4}]"
+     },
+     "execution_count": 188,
+     "metadata": {},
+     "output_type": "execute_result"
+    }
+   ],
+   "source": [
+    "data = [{\"a\": 1, \"b\": 1}, {\"b\": 3, \"c\": 4}]\n",
+    "data"
+   ],
+   "metadata": {
+    "collapsed": false,
+    "ExecuteTime": {
+     "end_time": "2024-07-14T11:32:29.607386Z",
+     "start_time": "2024-07-14T11:32:29.490879600Z"
+    }
+   },
+   "id": "53493b5ad2404815",
+   "execution_count": 188
+  },
+  {
+   "cell_type": "code",
+   "outputs": [
+    {
+     "data": {
+      "text/plain": "     a  b    c\n0  1.0  1  NaN\n1  NaN  3  4.0",
+      "text/html": "<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>a</th>\n      <th>b</th>\n      <th>c</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>1.0</td>\n      <td>1</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>NaN</td>\n      <td>3</td>\n      <td>4.0</td>\n    </tr>\n  </tbody>\n</table>\n</div>"
+     },
+     "execution_count": 189,
+     "metadata": {},
+     "output_type": "execute_result"
+    }
+   ],
+   "source": [
+    "pd.DataFrame(data)"
+   ],
+   "metadata": {
+    "collapsed": false,
+    "ExecuteTime": {
+     "end_time": "2024-07-14T11:32:29.693031600Z",
+     "start_time": "2024-07-14T11:32:29.591386300Z"
+    }
+   },
+   "id": "54440d8e8a315e6a",
+   "execution_count": 189
+  },
+  {
+   "cell_type": "markdown",
+   "source": [
+    "#### 1.2.4通过Numpy二维数组创建"
+   ],
+   "metadata": {
+    "collapsed": false
+   },
+   "id": "d5694ff005794ab5"
+  },
+  {
+   "cell_type": "code",
+   "outputs": [
+    {
+     "ename": "NameError",
+     "evalue": "name 'np' is not defined",
+     "output_type": "error",
+     "traceback": [
+      "\u001B[1;31m---------------------------------------------------------------------------\u001B[0m",
+      "\u001B[1;31mNameError\u001B[0m                                 Traceback (most recent call last)",
+      "Cell \u001B[1;32mIn[190], line 1\u001B[0m\n\u001B[1;32m----> 1\u001B[0m pd\u001B[38;5;241m.\u001B[39mDataFrame(\u001B[43mnp\u001B[49m\u001B[38;5;241m.\u001B[39mrandom\u001B[38;5;241m.\u001B[39mrandint(\u001B[38;5;241m10\u001B[39m, size\u001B[38;5;241m=\u001B[39m(\u001B[38;5;241m3\u001B[39m, \u001B[38;5;241m2\u001B[39m)), columns\u001B[38;5;241m=\u001B[39m[\u001B[38;5;124m\"\u001B[39m\u001B[38;5;124mfoo\u001B[39m\u001B[38;5;124m\"\u001B[39m, \u001B[38;5;124m\"\u001B[39m\u001B[38;5;124mbar\u001B[39m\u001B[38;5;124m\"\u001B[39m], index\u001B[38;5;241m=\u001B[39m[\u001B[38;5;124m\"\u001B[39m\u001B[38;5;124ma\u001B[39m\u001B[38;5;124m\"\u001B[39m, \u001B[38;5;124m\"\u001B[39m\u001B[38;5;124mb\u001B[39m\u001B[38;5;124m\"\u001B[39m, \u001B[38;5;124m\"\u001B[39m\u001B[38;5;124mc\u001B[39m\u001B[38;5;124m\"\u001B[39m])\n",
+      "\u001B[1;31mNameError\u001B[0m: name 'np' is not defined"
+     ]
+    }
+   ],
+   "source": [
+    "pd.DataFrame(np.random.randint(10, size=(3, 2)), columns=[\"foo\", \"bar\"], index=[\"a\", \"b\", \"c\"])"
+   ],
+   "metadata": {
+    "collapsed": false,
+    "ExecuteTime": {
+     "end_time": "2024-07-14T11:32:29.854804500Z",
+     "start_time": "2024-07-14T11:32:29.645893500Z"
+    }
+   },
+   "id": "e537b1d36c6cb6f0",
+   "execution_count": 190
+  },
+  {
+   "cell_type": "markdown",
+   "source": [
+    "## 2DataFrame性质"
+   ],
+   "metadata": {
+    "collapsed": false
+   },
+   "id": "e230d19134a58f60"
+  },
+  {
+   "cell_type": "markdown",
+   "source": [
+    "### 2.1属性"
+   ],
+   "metadata": {
+    "collapsed": false
+   },
+   "id": "555ebb690afc592e"
+  },
+  {
+   "cell_type": "code",
+   "outputs": [
+    {
+     "data": {
+      "text/plain": "              pop      GDP\nBeijing    2154.0  30320.0\nHangZhou    981.0  13468.0\nShangHai      NaN  32680.0\nShenZheng     NaN  24222.0\nc             NaN      NaN\nd             NaN      NaN",
+      "text/html": "<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>pop</th>\n      <th>GDP</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>Beijing</th>\n      <td>2154.0</td>\n      <td>30320.0</td>\n    </tr>\n    <tr>\n      <th>HangZhou</th>\n      <td>981.0</td>\n      <td>13468.0</td>\n    </tr>\n    <tr>\n      <th>ShangHai</th>\n      <td>NaN</td>\n      <td>32680.0</td>\n    </tr>\n    <tr>\n      <th>ShenZheng</th>\n      <td>NaN</td>\n      <td>24222.0</td>\n    </tr>\n    <tr>\n      <th>c</th>\n      <td>NaN</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>d</th>\n      <td>NaN</td>\n      <td>NaN</td>\n    </tr>\n  </tbody>\n</table>\n</div>"
+     },
+     "execution_count": 364,
+     "metadata": {},
+     "output_type": "execute_result"
+    }
+   ],
+   "source": [
+    "data = pd.DataFrame({\"pop\": population, \"GDP\": GDP})\n",
+    "data"
+   ],
+   "metadata": {
+    "collapsed": false,
+    "ExecuteTime": {
+     "end_time": "2024-07-14T11:33:25.175960800Z",
+     "start_time": "2024-07-14T11:33:25.119882900Z"
+    }
+   },
+   "id": "e5e7a768084fdf52",
+   "execution_count": 364
+  },
+  {
+   "cell_type": "markdown",
+   "source": [
+    "#### 2.1.1df.values返回numpy数组表示的数据"
+   ],
+   "metadata": {
+    "collapsed": false
+   },
+   "id": "23744f882c8cd5c8"
+  },
+  {
+   "cell_type": "code",
+   "outputs": [
+    {
+     "ename": "AttributeError",
+     "evalue": "'list' object has no attribute 'values'",
+     "output_type": "error",
+     "traceback": [
+      "\u001B[1;31m---------------------------------------------------------------------------\u001B[0m",
+      "\u001B[1;31mAttributeError\u001B[0m                            Traceback (most recent call last)",
+      "Cell \u001B[1;32mIn[192], line 1\u001B[0m\n\u001B[1;32m----> 1\u001B[0m \u001B[43mdata\u001B[49m\u001B[38;5;241;43m.\u001B[39;49m\u001B[43mvalues\u001B[49m\n",
+      "\u001B[1;31mAttributeError\u001B[0m: 'list' object has no attribute 'values'"
+     ]
+    }
+   ],
+   "source": [
+    "data.values"
+   ],
+   "metadata": {
+    "collapsed": false,
+    "ExecuteTime": {
+     "end_time": "2024-07-14T11:32:30.188415600Z",
+     "start_time": "2024-07-14T11:32:30.020306Z"
+    }
+   },
+   "id": "849a40e17a2d3378",
+   "execution_count": 192
+  },
+  {
+   "cell_type": "markdown",
+   "source": [
+    "#### 2.1.2df.index返回行索引"
+   ],
+   "metadata": {
+    "collapsed": false
+   },
+   "id": "c7ce4b81d09e70a0"
+  },
+  {
+   "cell_type": "code",
+   "outputs": [
+    {
+     "data": {
+      "text/plain": "<function list.index(value, start=0, stop=9223372036854775807, /)>"
+     },
+     "execution_count": 193,
+     "metadata": {},
+     "output_type": "execute_result"
+    }
+   ],
+   "source": [
+    "data.index"
+   ],
+   "metadata": {
+    "collapsed": false,
+    "ExecuteTime": {
+     "end_time": "2024-07-14T11:32:30.218417400Z",
+     "start_time": "2024-07-14T11:32:30.163416Z"
+    }
+   },
+   "id": "c9598f068bd9ede2",
+   "execution_count": 193
+  },
+  {
+   "cell_type": "markdown",
+   "source": [
+    "#### 2.1.3df.columns返回列索引"
+   ],
+   "metadata": {
+    "collapsed": false
+   },
+   "id": "b1e4de52fbc030e7"
+  },
+  {
+   "cell_type": "code",
+   "outputs": [
+    {
+     "ename": "AttributeError",
+     "evalue": "'list' object has no attribute 'columns'",
+     "output_type": "error",
+     "traceback": [
+      "\u001B[1;31m---------------------------------------------------------------------------\u001B[0m",
+      "\u001B[1;31mAttributeError\u001B[0m                            Traceback (most recent call last)",
+      "Cell \u001B[1;32mIn[194], line 1\u001B[0m\n\u001B[1;32m----> 1\u001B[0m \u001B[43mdata\u001B[49m\u001B[38;5;241;43m.\u001B[39;49m\u001B[43mcolumns\u001B[49m\n",
+      "\u001B[1;31mAttributeError\u001B[0m: 'list' object has no attribute 'columns'"
+     ]
+    }
+   ],
+   "source": [
+    "data.columns"
+   ],
+   "metadata": {
+    "collapsed": false,
+    "ExecuteTime": {
+     "end_time": "2024-07-14T11:32:30.389433700Z",
+     "start_time": "2024-07-14T11:32:30.218417400Z"
+    }
+   },
+   "id": "6903b1e1e95a2b2c",
+   "execution_count": 194
+  },
+  {
+   "cell_type": "markdown",
+   "source": [
+    "#### 2.1.4df.shape形状"
+   ],
+   "metadata": {
+    "collapsed": false
+   },
+   "id": "4039d9e0f8f5fa8c"
+  },
+  {
+   "cell_type": "code",
+   "outputs": [
+    {
+     "ename": "AttributeError",
+     "evalue": "'list' object has no attribute 'shape'",
+     "output_type": "error",
+     "traceback": [
+      "\u001B[1;31m---------------------------------------------------------------------------\u001B[0m",
+      "\u001B[1;31mAttributeError\u001B[0m                            Traceback (most recent call last)",
+      "Cell \u001B[1;32mIn[195], line 1\u001B[0m\n\u001B[1;32m----> 1\u001B[0m \u001B[43mdata\u001B[49m\u001B[38;5;241;43m.\u001B[39;49m\u001B[43mshape\u001B[49m\n",
+      "\u001B[1;31mAttributeError\u001B[0m: 'list' object has no attribute 'shape'"
+     ]
+    }
+   ],
+   "source": [
+    "data.shape"
+   ],
+   "metadata": {
+    "collapsed": false,
+    "ExecuteTime": {
+     "start_time": "2024-07-14T11:32:30.365431Z"
+    }
+   },
+   "id": "245c95923fd2f371",
+   "execution_count": 195
+  },
+  {
+   "cell_type": "markdown",
+   "source": [
+    "#### 2.1.5pd.size大小"
+   ],
+   "metadata": {
+    "collapsed": false
+   },
+   "id": "daacc7fc231095c1"
+  },
+  {
+   "cell_type": "code",
+   "outputs": [
+    {
+     "ename": "AttributeError",
+     "evalue": "'list' object has no attribute 'size'",
+     "output_type": "error",
+     "traceback": [
+      "\u001B[1;31m---------------------------------------------------------------------------\u001B[0m",
+      "\u001B[1;31mAttributeError\u001B[0m                            Traceback (most recent call last)",
+      "Cell \u001B[1;32mIn[196], line 1\u001B[0m\n\u001B[1;32m----> 1\u001B[0m \u001B[43mdata\u001B[49m\u001B[38;5;241;43m.\u001B[39;49m\u001B[43msize\u001B[49m\n",
+      "\u001B[1;31mAttributeError\u001B[0m: 'list' object has no attribute 'size'"
+     ]
+    }
+   ],
+   "source": [
+    "data.size"
+   ],
+   "metadata": {
+    "collapsed": false,
+    "ExecuteTime": {
+     "end_time": "2024-07-14T11:32:30.568451100Z",
+     "start_time": "2024-07-14T11:32:30.493944400Z"
+    }
+   },
+   "id": "d861f7b54efb0798",
+   "execution_count": 196
+  },
+  {
+   "cell_type": "markdown",
+   "source": [
+    "#### 2.1.6pd.dtypes返回每列数据类型"
+   ],
+   "metadata": {
+    "collapsed": false
+   },
+   "id": "d4acd8cdbc795459"
+  },
+  {
+   "cell_type": "code",
+   "outputs": [
+    {
+     "ename": "AttributeError",
+     "evalue": "'list' object has no attribute 'dtypes'",
+     "output_type": "error",
+     "traceback": [
+      "\u001B[1;31m---------------------------------------------------------------------------\u001B[0m",
+      "\u001B[1;31mAttributeError\u001B[0m                            Traceback (most recent call last)",
+      "Cell \u001B[1;32mIn[197], line 1\u001B[0m\n\u001B[1;32m----> 1\u001B[0m \u001B[43mdata\u001B[49m\u001B[38;5;241;43m.\u001B[39;49m\u001B[43mdtypes\u001B[49m\n",
+      "\u001B[1;31mAttributeError\u001B[0m: 'list' object has no attribute 'dtypes'"
+     ]
+    }
+   ],
+   "source": [
+    "data.dtypes"
+   ],
+   "metadata": {
+    "collapsed": false,
+    "ExecuteTime": {
+     "start_time": "2024-07-14T11:32:30.554450700Z"
+    }
+   },
+   "id": "df510a7afd148fcd",
+   "execution_count": 197
+  },
+  {
+   "cell_type": "markdown",
+   "source": [
+    "### 2.2索引"
+   ],
+   "metadata": {
+    "collapsed": false
+   },
+   "id": "4aecea9a585e7251"
+  },
+  {
+   "cell_type": "markdown",
+   "source": [
+    "#### 2.2.1获取列\n",
+    "* 字典式"
+   ],
+   "metadata": {
+    "collapsed": false
+   },
+   "id": "679494a214e8b1db"
+  },
+  {
+   "cell_type": "code",
+   "outputs": [
+    {
+     "ename": "TypeError",
+     "evalue": "list indices must be integers or slices, not str",
+     "output_type": "error",
+     "traceback": [
+      "\u001B[1;31m---------------------------------------------------------------------------\u001B[0m",
+      "\u001B[1;31mTypeError\u001B[0m                                 Traceback (most recent call last)",
+      "Cell \u001B[1;32mIn[198], line 1\u001B[0m\n\u001B[1;32m----> 1\u001B[0m \u001B[43mdata\u001B[49m\u001B[43m[\u001B[49m\u001B[38;5;124;43m\"\u001B[39;49m\u001B[38;5;124;43mpop\u001B[39;49m\u001B[38;5;124;43m\"\u001B[39;49m\u001B[43m]\u001B[49m\n",
+      "\u001B[1;31mTypeError\u001B[0m: list indices must be integers or slices, not str"
+     ]
+    }
+   ],
+   "source": [
+    "data[\"pop\"]"
+   ],
+   "metadata": {
+    "collapsed": false,
+    "ExecuteTime": {
+     "end_time": "2024-07-14T11:32:30.776018300Z",
+     "start_time": "2024-07-14T11:32:30.663314200Z"
+    }
+   },
+   "id": "57196a83510bfffd",
+   "execution_count": 198
+  },
+  {
+   "cell_type": "code",
+   "outputs": [
+    {
+     "ename": "TypeError",
+     "evalue": "list indices must be integers or slices, not list",
+     "output_type": "error",
+     "traceback": [
+      "\u001B[1;31m---------------------------------------------------------------------------\u001B[0m",
+      "\u001B[1;31mTypeError\u001B[0m                                 Traceback (most recent call last)",
+      "Cell \u001B[1;32mIn[199], line 1\u001B[0m\n\u001B[1;32m----> 1\u001B[0m \u001B[43mdata\u001B[49m\u001B[43m[\u001B[49m\u001B[43m[\u001B[49m\u001B[38;5;124;43m\"\u001B[39;49m\u001B[38;5;124;43mGDP\u001B[39;49m\u001B[38;5;124;43m\"\u001B[39;49m\u001B[43m,\u001B[49m\u001B[43m \u001B[49m\u001B[38;5;124;43m\"\u001B[39;49m\u001B[38;5;124;43mpop\u001B[39;49m\u001B[38;5;124;43m\"\u001B[39;49m\u001B[43m]\u001B[49m\u001B[43m]\u001B[49m\n",
+      "\u001B[1;31mTypeError\u001B[0m: list indices must be integers or slices, not list"
+     ]
+    }
+   ],
+   "source": [
+    "data[[\"GDP\", \"pop\"]]"
+   ],
+   "metadata": {
+    "collapsed": false,
+    "ExecuteTime": {
+     "start_time": "2024-07-14T11:32:30.716315500Z"
+    }
+   },
+   "id": "37dbb81b192fd6aa",
+   "execution_count": 199
+  },
+  {
+   "cell_type": "markdown",
+   "source": [
+    "* 对象属性式"
+   ],
+   "metadata": {
+    "collapsed": false
+   },
+   "id": "4e7bb163cb927322"
+  },
+  {
+   "cell_type": "code",
+   "outputs": [
+    {
+     "ename": "AttributeError",
+     "evalue": "'list' object has no attribute 'GDP'",
+     "output_type": "error",
+     "traceback": [
+      "\u001B[1;31m---------------------------------------------------------------------------\u001B[0m",
+      "\u001B[1;31mAttributeError\u001B[0m                            Traceback (most recent call last)",
+      "Cell \u001B[1;32mIn[200], line 1\u001B[0m\n\u001B[1;32m----> 1\u001B[0m \u001B[43mdata\u001B[49m\u001B[38;5;241;43m.\u001B[39;49m\u001B[43mGDP\u001B[49m\n",
+      "\u001B[1;31mAttributeError\u001B[0m: 'list' object has no attribute 'GDP'"
+     ]
+    }
+   ],
+   "source": [
+    "data.GDP"
+   ],
+   "metadata": {
+    "collapsed": false,
+    "ExecuteTime": {
+     "end_time": "2024-07-14T11:32:30.971198Z",
+     "start_time": "2024-07-14T11:32:30.821024800Z"
+    }
+   },
+   "id": "cc0d4a609ccce972",
+   "execution_count": 200
+  },
+  {
+   "cell_type": "markdown",
+   "source": [
+    "#### 2.2.2获取行\n",
+    "* 绝对索引df.loc"
+   ],
+   "metadata": {
+    "collapsed": false
+   },
+   "id": "e21dfe2f58aea2ce"
+  },
+  {
+   "cell_type": "code",
+   "outputs": [
+    {
+     "ename": "AttributeError",
+     "evalue": "'list' object has no attribute 'loc'",
+     "output_type": "error",
+     "traceback": [
+      "\u001B[1;31m---------------------------------------------------------------------------\u001B[0m",
+      "\u001B[1;31mAttributeError\u001B[0m                            Traceback (most recent call last)",
+      "Cell \u001B[1;32mIn[201], line 1\u001B[0m\n\u001B[1;32m----> 1\u001B[0m \u001B[43mdata\u001B[49m\u001B[38;5;241;43m.\u001B[39;49m\u001B[43mloc\u001B[49m[\u001B[38;5;124m\"\u001B[39m\u001B[38;5;124mBeijing\u001B[39m\u001B[38;5;124m\"\u001B[39m]\n",
+      "\u001B[1;31mAttributeError\u001B[0m: 'list' object has no attribute 'loc'"
+     ]
+    }
+   ],
+   "source": [
+    "data.loc[\"Beijing\"]"
+   ],
+   "metadata": {
+    "collapsed": false,
+    "ExecuteTime": {
+     "start_time": "2024-07-14T11:32:30.934083200Z"
+    }
+   },
+   "id": "6c8b987c87aa2028",
+   "execution_count": 201
+  },
+  {
+   "cell_type": "code",
+   "outputs": [
+    {
+     "ename": "AttributeError",
+     "evalue": "'list' object has no attribute 'loc'",
+     "output_type": "error",
+     "traceback": [
+      "\u001B[1;31m---------------------------------------------------------------------------\u001B[0m",
+      "\u001B[1;31mAttributeError\u001B[0m                            Traceback (most recent call last)",
+      "Cell \u001B[1;32mIn[202], line 1\u001B[0m\n\u001B[1;32m----> 1\u001B[0m \u001B[43mdata\u001B[49m\u001B[38;5;241;43m.\u001B[39;49m\u001B[43mloc\u001B[49m[[\u001B[38;5;124m\"\u001B[39m\u001B[38;5;124mBeijing\u001B[39m\u001B[38;5;124m\"\u001B[39m, \u001B[38;5;124m\"\u001B[39m\u001B[38;5;124mHangZhou\u001B[39m\u001B[38;5;124m\"\u001B[39m]]\n",
+      "\u001B[1;31mAttributeError\u001B[0m: 'list' object has no attribute 'loc'"
+     ]
+    }
+   ],
+   "source": [
+    "data.loc[[\"Beijing\", \"HangZhou\"]]"
+   ],
+   "metadata": {
+    "collapsed": false,
+    "ExecuteTime": {
+     "end_time": "2024-07-14T11:32:31.151576900Z",
+     "start_time": "2024-07-14T11:32:31.010290600Z"
+    }
+   },
+   "id": "b331fcca53bab4f5",
+   "execution_count": 202
+  },
+  {
+   "cell_type": "markdown",
+   "source": [
+    "* 相对索引df.iloc"
+   ],
+   "metadata": {
+    "collapsed": false
+   },
+   "id": "609eec695355c9d2"
+  },
+  {
+   "cell_type": "code",
+   "outputs": [
+    {
+     "ename": "AttributeError",
+     "evalue": "'list' object has no attribute 'iloc'",
+     "output_type": "error",
+     "traceback": [
+      "\u001B[1;31m---------------------------------------------------------------------------\u001B[0m",
+      "\u001B[1;31mAttributeError\u001B[0m                            Traceback (most recent call last)",
+      "Cell \u001B[1;32mIn[203], line 1\u001B[0m\n\u001B[1;32m----> 1\u001B[0m \u001B[43mdata\u001B[49m\u001B[38;5;241;43m.\u001B[39;49m\u001B[43miloc\u001B[49m[\u001B[38;5;241m0\u001B[39m]\n",
+      "\u001B[1;31mAttributeError\u001B[0m: 'list' object has no attribute 'iloc'"
+     ]
+    }
+   ],
+   "source": [
+    "data.iloc[0]"
+   ],
+   "metadata": {
+    "collapsed": false,
+    "ExecuteTime": {
+     "start_time": "2024-07-14T11:32:31.124566200Z"
+    }
+   },
+   "id": "a68876a07f53da13",
+   "execution_count": 203
+  },
+  {
+   "cell_type": "code",
+   "outputs": [
+    {
+     "ename": "AttributeError",
+     "evalue": "'list' object has no attribute 'iloc'",
+     "output_type": "error",
+     "traceback": [
+      "\u001B[1;31m---------------------------------------------------------------------------\u001B[0m",
+      "\u001B[1;31mAttributeError\u001B[0m                            Traceback (most recent call last)",
+      "Cell \u001B[1;32mIn[204], line 1\u001B[0m\n\u001B[1;32m----> 1\u001B[0m \u001B[43mdata\u001B[49m\u001B[38;5;241;43m.\u001B[39;49m\u001B[43miloc\u001B[49m[[\u001B[38;5;241m1\u001B[39m, \u001B[38;5;241m3\u001B[39m]]\n",
+      "\u001B[1;31mAttributeError\u001B[0m: 'list' object has no attribute 'iloc'"
+     ]
+    }
+   ],
+   "source": [
+    "data.iloc[[1, 3]]"
+   ],
+   "metadata": {
+    "collapsed": false,
+    "ExecuteTime": {
+     "end_time": "2024-07-14T11:32:31.296084100Z",
+     "start_time": "2024-07-14T11:32:31.167577100Z"
+    }
+   },
+   "id": "93f4781ad0679d6b",
+   "execution_count": 204
+  },
+  {
+   "cell_type": "markdown",
+   "source": [
+    "#### 2.2.3获取标量"
+   ],
+   "metadata": {
+    "collapsed": false
+   },
+   "id": "96668345619dd1c0"
+  },
+  {
+   "cell_type": "code",
+   "outputs": [
+    {
+     "ename": "AttributeError",
+     "evalue": "'list' object has no attribute 'loc'",
+     "output_type": "error",
+     "traceback": [
+      "\u001B[1;31m---------------------------------------------------------------------------\u001B[0m",
+      "\u001B[1;31mAttributeError\u001B[0m                            Traceback (most recent call last)",
+      "Cell \u001B[1;32mIn[205], line 1\u001B[0m\n\u001B[1;32m----> 1\u001B[0m \u001B[43mdata\u001B[49m\u001B[38;5;241;43m.\u001B[39;49m\u001B[43mloc\u001B[49m[\u001B[38;5;124m\"\u001B[39m\u001B[38;5;124mBeijing\u001B[39m\u001B[38;5;124m\"\u001B[39m, \u001B[38;5;124m\"\u001B[39m\u001B[38;5;124mGDP\u001B[39m\u001B[38;5;124m\"\u001B[39m]\n",
+      "\u001B[1;31mAttributeError\u001B[0m: 'list' object has no attribute 'loc'"
+     ]
+    }
+   ],
+   "source": [
+    "data.loc[\"Beijing\", \"GDP\"]"
+   ],
+   "metadata": {
+    "collapsed": false,
+    "ExecuteTime": {
+     "start_time": "2024-07-14T11:32:31.281085700Z"
+    }
+   },
+   "id": "438d966983193a63",
+   "execution_count": 205
+  },
+  {
+   "cell_type": "code",
+   "outputs": [
+    {
+     "ename": "AttributeError",
+     "evalue": "'list' object has no attribute 'iloc'",
+     "output_type": "error",
+     "traceback": [
+      "\u001B[1;31m---------------------------------------------------------------------------\u001B[0m",
+      "\u001B[1;31mAttributeError\u001B[0m                            Traceback (most recent call last)",
+      "Cell \u001B[1;32mIn[206], line 1\u001B[0m\n\u001B[1;32m----> 1\u001B[0m \u001B[43mdata\u001B[49m\u001B[38;5;241;43m.\u001B[39;49m\u001B[43miloc\u001B[49m[\u001B[38;5;241m0\u001B[39m, \u001B[38;5;241m1\u001B[39m]\n",
+      "\u001B[1;31mAttributeError\u001B[0m: 'list' object has no attribute 'iloc'"
+     ]
+    }
+   ],
+   "source": [
+    "data.iloc[0, 1]"
+   ],
+   "metadata": {
+    "collapsed": false,
+    "ExecuteTime": {
+     "end_time": "2024-07-14T11:32:31.460662300Z",
+     "start_time": "2024-07-14T11:32:31.318605300Z"
+    }
+   },
+   "id": "2e26939a0e0b468d",
+   "execution_count": 206
+  },
+  {
+   "cell_type": "code",
+   "outputs": [
+    {
+     "ename": "AttributeError",
+     "evalue": "'list' object has no attribute 'values'",
+     "output_type": "error",
+     "traceback": [
+      "\u001B[1;31m---------------------------------------------------------------------------\u001B[0m",
+      "\u001B[1;31mAttributeError\u001B[0m                            Traceback (most recent call last)",
+      "Cell \u001B[1;32mIn[207], line 1\u001B[0m\n\u001B[1;32m----> 1\u001B[0m \u001B[43mdata\u001B[49m\u001B[38;5;241;43m.\u001B[39;49m\u001B[43mvalues\u001B[49m[\u001B[38;5;241m0\u001B[39m][\u001B[38;5;241m1\u001B[39m]\n",
+      "\u001B[1;31mAttributeError\u001B[0m: 'list' object has no attribute 'values'"
+     ]
+    }
+   ],
+   "source": [
+    "data.values[0][1]"
+   ],
+   "metadata": {
+    "collapsed": false,
+    "ExecuteTime": {
+     "start_time": "2024-07-14T11:32:31.441662200Z"
+    }
+   },
+   "id": "b46932dd60278561",
+   "execution_count": 207
+  },
+  {
+   "cell_type": "markdown",
+   "source": [
+    "#### 2.2.4Series对象的索引"
+   ],
+   "metadata": {
+    "collapsed": false
+   },
+   "id": "7ea14379372fcba1"
+  },
+  {
+   "cell_type": "code",
+   "outputs": [
+    {
+     "ename": "AttributeError",
+     "evalue": "'list' object has no attribute 'GDP'",
+     "output_type": "error",
+     "traceback": [
+      "\u001B[1;31m---------------------------------------------------------------------------\u001B[0m",
+      "\u001B[1;31mAttributeError\u001B[0m                            Traceback (most recent call last)",
+      "Cell \u001B[1;32mIn[208], line 1\u001B[0m\n\u001B[1;32m----> 1\u001B[0m \u001B[38;5;28mtype\u001B[39m(\u001B[43mdata\u001B[49m\u001B[38;5;241;43m.\u001B[39;49m\u001B[43mGDP\u001B[49m)\n",
+      "\u001B[1;31mAttributeError\u001B[0m: 'list' object has no attribute 'GDP'"
+     ]
+    }
+   ],
+   "source": [
+    "type(data.GDP)"
+   ],
+   "metadata": {
+    "collapsed": false,
+    "ExecuteTime": {
+     "end_time": "2024-07-14T11:32:31.624868400Z",
+     "start_time": "2024-07-14T11:32:31.503759300Z"
+    }
+   },
+   "id": "6fb1f13b181b1346",
+   "execution_count": 208
+  },
+  {
+   "cell_type": "code",
+   "outputs": [
+    {
+     "ename": "NameError",
+     "evalue": "name 'GDP' is not defined",
+     "output_type": "error",
+     "traceback": [
+      "\u001B[1;31m---------------------------------------------------------------------------\u001B[0m",
+      "\u001B[1;31mNameError\u001B[0m                                 Traceback (most recent call last)",
+      "Cell \u001B[1;32mIn[209], line 1\u001B[0m\n\u001B[1;32m----> 1\u001B[0m \u001B[43mGDP\u001B[49m\n",
+      "\u001B[1;31mNameError\u001B[0m: name 'GDP' is not defined"
+     ]
+    }
+   ],
+   "source": [
+    "GDP"
+   ],
+   "metadata": {
+    "collapsed": false,
+    "ExecuteTime": {
+     "start_time": "2024-07-14T11:32:31.601866800Z"
+    }
+   },
+   "id": "b5d11288d3c0511a",
+   "execution_count": 209
+  },
+  {
+   "cell_type": "code",
+   "outputs": [
+    {
+     "ename": "NameError",
+     "evalue": "name 'GDP' is not defined",
+     "output_type": "error",
+     "traceback": [
+      "\u001B[1;31m---------------------------------------------------------------------------\u001B[0m",
+      "\u001B[1;31mNameError\u001B[0m                                 Traceback (most recent call last)",
+      "Cell \u001B[1;32mIn[210], line 1\u001B[0m\n\u001B[1;32m----> 1\u001B[0m \u001B[43mGDP\u001B[49m[\u001B[38;5;124m\"\u001B[39m\u001B[38;5;124mBeijing\u001B[39m\u001B[38;5;124m\"\u001B[39m]\n",
+      "\u001B[1;31mNameError\u001B[0m: name 'GDP' is not defined"
+     ]
+    }
+   ],
+   "source": [
+    "GDP[\"Beijing\"]"
+   ],
+   "metadata": {
+    "collapsed": false,
+    "ExecuteTime": {
+     "end_time": "2024-07-14T11:32:31.777343600Z",
+     "start_time": "2024-07-14T11:32:31.658374Z"
+    }
+   },
+   "id": "55851fa0709c3011",
+   "execution_count": 210
+  },
+  {
+   "cell_type": "markdown",
+   "source": [
+    "### 2.3切片"
+   ],
+   "metadata": {
+    "collapsed": false
+   },
+   "id": "df1585d99b83a72e"
+  },
+  {
+   "cell_type": "code",
+   "outputs": [
+    {
+     "data": {
+      "text/plain": "DatetimeIndex(['2019-01-01', '2019-01-02', '2019-01-03', '2019-01-04',\n               '2019-01-05', '2019-01-06'],\n              dtype='datetime64[ns]', freq='D')"
+     },
+     "execution_count": 211,
+     "metadata": {},
+     "output_type": "execute_result"
+    }
+   ],
+   "source": [
+    "datas = pd.date_range(start=\"2019-01-01\", periods=6)\n",
+    "datas"
+   ],
+   "metadata": {
+    "collapsed": false,
+    "ExecuteTime": {
+     "end_time": "2024-07-14T11:32:31.853899900Z",
+     "start_time": "2024-07-14T11:32:31.764342800Z"
+    }
+   },
+   "id": "a31f17c223a3a02d",
+   "execution_count": 211
+  },
+  {
+   "cell_type": "code",
+   "outputs": [
+    {
+     "ename": "NameError",
+     "evalue": "name 'np' is not defined",
+     "output_type": "error",
+     "traceback": [
+      "\u001B[1;31m---------------------------------------------------------------------------\u001B[0m",
+      "\u001B[1;31mNameError\u001B[0m                                 Traceback (most recent call last)",
+      "Cell \u001B[1;32mIn[212], line 1\u001B[0m\n\u001B[1;32m----> 1\u001B[0m df \u001B[38;5;241m=\u001B[39m pd\u001B[38;5;241m.\u001B[39mDataFrame(\u001B[43mnp\u001B[49m\u001B[38;5;241m.\u001B[39mrandom\u001B[38;5;241m.\u001B[39mrandn(\u001B[38;5;241m6\u001B[39m, \u001B[38;5;241m4\u001B[39m), index\u001B[38;5;241m=\u001B[39mdatas, columns\u001B[38;5;241m=\u001B[39m[\u001B[38;5;124m\"\u001B[39m\u001B[38;5;124mA\u001B[39m\u001B[38;5;124m\"\u001B[39m, \u001B[38;5;124m\"\u001B[39m\u001B[38;5;124mB\u001B[39m\u001B[38;5;124m\"\u001B[39m, \u001B[38;5;124m\"\u001B[39m\u001B[38;5;124mC\u001B[39m\u001B[38;5;124m\"\u001B[39m, \u001B[38;5;124m\"\u001B[39m\u001B[38;5;124mD\u001B[39m\u001B[38;5;124m\"\u001B[39m])\n\u001B[0;32m      2\u001B[0m df\n",
+      "\u001B[1;31mNameError\u001B[0m: name 'np' is not defined"
+     ]
+    }
+   ],
+   "source": [
+    "df = pd.DataFrame(np.random.randn(6, 4), index=datas, columns=[\"A\", \"B\", \"C\", \"D\"])\n",
+    "df\n"
+   ],
+   "metadata": {
+    "collapsed": false,
+    "ExecuteTime": {
+     "end_time": "2024-07-14T11:32:31.953411500Z",
+     "start_time": "2024-07-14T11:32:31.835899500Z"
+    }
+   },
+   "id": "a80b5be1411583b5",
+   "execution_count": 212
+  },
+  {
+   "cell_type": "markdown",
+   "source": [
+    "#### 2.3.1行切片"
+   ],
+   "metadata": {
+    "collapsed": false
+   },
+   "id": "4d519f33266d7c94"
+  },
+  {
+   "cell_type": "code",
+   "outputs": [
+    {
+     "ename": "NameError",
+     "evalue": "name 'df' is not defined",
+     "output_type": "error",
+     "traceback": [
+      "\u001B[1;31m---------------------------------------------------------------------------\u001B[0m",
+      "\u001B[1;31mNameError\u001B[0m                                 Traceback (most recent call last)",
+      "Cell \u001B[1;32mIn[213], line 1\u001B[0m\n\u001B[1;32m----> 1\u001B[0m \u001B[43mdf\u001B[49m[\u001B[38;5;124m\"\u001B[39m\u001B[38;5;124m2019-01-01\u001B[39m\u001B[38;5;124m\"\u001B[39m:\u001B[38;5;124m\"\u001B[39m\u001B[38;5;124m2019-01-03\u001B[39m\u001B[38;5;124m\"\u001B[39m]\n",
+      "\u001B[1;31mNameError\u001B[0m: name 'df' is not defined"
+     ]
+    }
+   ],
+   "source": [
+    "df[\"2019-01-01\":\"2019-01-03\"]"
+   ],
+   "metadata": {
+    "collapsed": false,
+    "ExecuteTime": {
+     "start_time": "2024-07-14T11:32:31.904899900Z"
+    }
+   },
+   "id": "2128c9b3506d44ee",
+   "execution_count": 213
+  },
+  {
+   "cell_type": "code",
+   "outputs": [
+    {
+     "ename": "NameError",
+     "evalue": "name 'df' is not defined",
+     "output_type": "error",
+     "traceback": [
+      "\u001B[1;31m---------------------------------------------------------------------------\u001B[0m",
+      "\u001B[1;31mNameError\u001B[0m                                 Traceback (most recent call last)",
+      "Cell \u001B[1;32mIn[214], line 1\u001B[0m\n\u001B[1;32m----> 1\u001B[0m \u001B[43mdf\u001B[49m\u001B[38;5;241m.\u001B[39mloc[\u001B[38;5;124m\"\u001B[39m\u001B[38;5;124m2019-01-01\u001B[39m\u001B[38;5;124m\"\u001B[39m:\u001B[38;5;124m\"\u001B[39m\u001B[38;5;124m2019-01-03\u001B[39m\u001B[38;5;124m\"\u001B[39m]\n",
+      "\u001B[1;31mNameError\u001B[0m: name 'df' is not defined"
+     ]
+    }
+   ],
+   "source": [
+    "df.loc[\"2019-01-01\":\"2019-01-03\"]"
+   ],
+   "metadata": {
+    "collapsed": false,
+    "ExecuteTime": {
+     "end_time": "2024-07-14T11:32:32.179944100Z",
+     "start_time": "2024-07-14T11:32:32.015410500Z"
+    }
+   },
+   "id": "acae2b97553beceb",
+   "execution_count": 214
+  },
+  {
+   "cell_type": "code",
+   "outputs": [
+    {
+     "ename": "NameError",
+     "evalue": "name 'df' is not defined",
+     "output_type": "error",
+     "traceback": [
+      "\u001B[1;31m---------------------------------------------------------------------------\u001B[0m",
+      "\u001B[1;31mNameError\u001B[0m                                 Traceback (most recent call last)",
+      "Cell \u001B[1;32mIn[215], line 1\u001B[0m\n\u001B[1;32m----> 1\u001B[0m \u001B[43mdf\u001B[49m\u001B[38;5;241m.\u001B[39miloc[\u001B[38;5;241m0\u001B[39m:\u001B[38;5;241m3\u001B[39m]\n",
+      "\u001B[1;31mNameError\u001B[0m: name 'df' is not defined"
+     ]
+    }
+   ],
+   "source": [
+    "df.iloc[0:3]"
+   ],
+   "metadata": {
+    "collapsed": false,
+    "ExecuteTime": {
+     "start_time": "2024-07-14T11:32:32.155944100Z"
+    }
+   },
+   "id": "b8f62629d85b6737",
+   "execution_count": 215
+  },
+  {
+   "cell_type": "markdown",
+   "source": [
+    "#### 2.3.2列切片"
+   ],
+   "metadata": {
+    "collapsed": false
+   },
+   "id": "8e8ac43bece0a513"
+  },
+  {
+   "cell_type": "code",
+   "outputs": [
+    {
+     "ename": "NameError",
+     "evalue": "name 'df' is not defined",
+     "output_type": "error",
+     "traceback": [
+      "\u001B[1;31m---------------------------------------------------------------------------\u001B[0m",
+      "\u001B[1;31mNameError\u001B[0m                                 Traceback (most recent call last)",
+      "Cell \u001B[1;32mIn[216], line 1\u001B[0m\n\u001B[1;32m----> 1\u001B[0m \u001B[43mdf\u001B[49m\u001B[38;5;241m.\u001B[39mloc[:, \u001B[38;5;124m\"\u001B[39m\u001B[38;5;124mA\u001B[39m\u001B[38;5;124m\"\u001B[39m:\u001B[38;5;124m\"\u001B[39m\u001B[38;5;124mC\u001B[39m\u001B[38;5;124m\"\u001B[39m]\n",
+      "\u001B[1;31mNameError\u001B[0m: name 'df' is not defined"
+     ]
+    }
+   ],
+   "source": [
+    "df.loc[:, \"A\":\"C\"]"
+   ],
+   "metadata": {
+    "collapsed": false,
+    "ExecuteTime": {
+     "end_time": "2024-07-14T11:32:32.344147600Z",
+     "start_time": "2024-07-14T11:32:32.210944Z"
+    }
+   },
+   "id": "45032a9fdd1944af",
+   "execution_count": 216
+  },
+  {
+   "cell_type": "code",
+   "outputs": [
+    {
+     "ename": "NameError",
+     "evalue": "name 'df' is not defined",
+     "output_type": "error",
+     "traceback": [
+      "\u001B[1;31m---------------------------------------------------------------------------\u001B[0m",
+      "\u001B[1;31mNameError\u001B[0m                                 Traceback (most recent call last)",
+      "Cell \u001B[1;32mIn[217], line 1\u001B[0m\n\u001B[1;32m----> 1\u001B[0m \u001B[43mdf\u001B[49m\u001B[38;5;241m.\u001B[39miloc[:, \u001B[38;5;241m0\u001B[39m:\u001B[38;5;241m3\u001B[39m]\n",
+      "\u001B[1;31mNameError\u001B[0m: name 'df' is not defined"
+     ]
+    }
+   ],
+   "source": [
+    "df.iloc[:, 0:3]"
+   ],
+   "metadata": {
+    "collapsed": false,
+    "ExecuteTime": {
+     "start_time": "2024-07-14T11:32:32.336147600Z"
+    }
+   },
+   "id": "23975372d5313ef2",
+   "execution_count": 217
+  },
+  {
+   "cell_type": "markdown",
+   "source": [
+    "#### 2.3.3多种多样的切片\n",
+    "* 行、列同时切片"
+   ],
+   "metadata": {
+    "collapsed": false
+   },
+   "id": "54d3028b9583818f"
+  },
+  {
+   "cell_type": "code",
+   "outputs": [
+    {
+     "ename": "NameError",
+     "evalue": "name 'df' is not defined",
+     "output_type": "error",
+     "traceback": [
+      "\u001B[1;31m---------------------------------------------------------------------------\u001B[0m",
+      "\u001B[1;31mNameError\u001B[0m                                 Traceback (most recent call last)",
+      "Cell \u001B[1;32mIn[218], line 1\u001B[0m\n\u001B[1;32m----> 1\u001B[0m \u001B[43mdf\u001B[49m\n",
+      "\u001B[1;31mNameError\u001B[0m: name 'df' is not defined"
+     ]
+    }
+   ],
+   "source": [
+    "df"
+   ],
+   "metadata": {
+    "collapsed": false,
+    "ExecuteTime": {
+     "end_time": "2024-07-14T11:32:32.486371100Z",
+     "start_time": "2024-07-14T11:32:32.371410500Z"
+    }
+   },
+   "id": "add3d111165fa833",
+   "execution_count": 218
+  },
+  {
+   "cell_type": "code",
+   "outputs": [
+    {
+     "ename": "NameError",
+     "evalue": "name 'df' is not defined",
+     "output_type": "error",
+     "traceback": [
+      "\u001B[1;31m---------------------------------------------------------------------------\u001B[0m",
+      "\u001B[1;31mNameError\u001B[0m                                 Traceback (most recent call last)",
+      "Cell \u001B[1;32mIn[219], line 1\u001B[0m\n\u001B[1;32m----> 1\u001B[0m \u001B[43mdf\u001B[49m\u001B[38;5;241m.\u001B[39mloc[\u001B[38;5;124m\"\u001B[39m\u001B[38;5;124m2019-01-02\u001B[39m\u001B[38;5;124m\"\u001B[39m:\u001B[38;5;124m\"\u001B[39m\u001B[38;5;124m2019-01-03\u001B[39m\u001B[38;5;124m\"\u001B[39m, \u001B[38;5;124m\"\u001B[39m\u001B[38;5;124mC\u001B[39m\u001B[38;5;124m\"\u001B[39m:\u001B[38;5;124m\"\u001B[39m\u001B[38;5;124mD\u001B[39m\u001B[38;5;124m\"\u001B[39m]\n",
+      "\u001B[1;31mNameError\u001B[0m: name 'df' is not defined"
+     ]
+    }
+   ],
+   "source": [
+    "df.loc[\"2019-01-02\":\"2019-01-03\", \"C\":\"D\"]\n"
+   ],
+   "metadata": {
+    "collapsed": false,
+    "ExecuteTime": {
+     "start_time": "2024-07-14T11:32:32.469942900Z"
+    }
+   },
+   "id": "39251a9064c9f16b",
+   "execution_count": 219
+  },
+  {
+   "cell_type": "code",
+   "outputs": [
+    {
+     "ename": "NameError",
+     "evalue": "name 'df' is not defined",
+     "output_type": "error",
+     "traceback": [
+      "\u001B[1;31m---------------------------------------------------------------------------\u001B[0m",
+      "\u001B[1;31mNameError\u001B[0m                                 Traceback (most recent call last)",
+      "Cell \u001B[1;32mIn[220], line 1\u001B[0m\n\u001B[1;32m----> 1\u001B[0m \u001B[43mdf\u001B[49m\u001B[38;5;241m.\u001B[39miloc[\u001B[38;5;241m1\u001B[39m:\u001B[38;5;241m3\u001B[39m, \u001B[38;5;241m2\u001B[39m:]\n",
+      "\u001B[1;31mNameError\u001B[0m: name 'df' is not defined"
+     ]
+    }
+   ],
+   "source": [
+    "df.iloc[1:3, 2:]"
+   ],
+   "metadata": {
+    "collapsed": false,
+    "ExecuteTime": {
+     "end_time": "2024-07-14T11:32:32.661159900Z",
+     "start_time": "2024-07-14T11:32:32.527107400Z"
+    }
+   },
+   "id": "7609f12f49c8df65",
+   "execution_count": 220
+  },
+  {
+   "cell_type": "markdown",
+   "source": [
+    "* 行切片，列分散取值"
+   ],
+   "metadata": {
+    "collapsed": false
+   },
+   "id": "40789063edb27fac"
+  },
+  {
+   "cell_type": "code",
+   "outputs": [
+    {
+     "ename": "NameError",
+     "evalue": "name 'df' is not defined",
+     "output_type": "error",
+     "traceback": [
+      "\u001B[1;31m---------------------------------------------------------------------------\u001B[0m",
+      "\u001B[1;31mNameError\u001B[0m                                 Traceback (most recent call last)",
+      "Cell \u001B[1;32mIn[221], line 1\u001B[0m\n\u001B[1;32m----> 1\u001B[0m \u001B[43mdf\u001B[49m\u001B[38;5;241m.\u001B[39mloc[\u001B[38;5;124m\"\u001B[39m\u001B[38;5;124m2019-01-04\u001B[39m\u001B[38;5;124m\"\u001B[39m:\u001B[38;5;124m\"\u001B[39m\u001B[38;5;124m2019-01-06\u001B[39m\u001B[38;5;124m\"\u001B[39m, [\u001B[38;5;124m\"\u001B[39m\u001B[38;5;124mA\u001B[39m\u001B[38;5;124m\"\u001B[39m, \u001B[38;5;124m\"\u001B[39m\u001B[38;5;124mC\u001B[39m\u001B[38;5;124m\"\u001B[39m]]\n",
+      "\u001B[1;31mNameError\u001B[0m: name 'df' is not defined"
+     ]
+    }
+   ],
+   "source": [
+    "df.loc[\"2019-01-04\":\"2019-01-06\", [\"A\", \"C\"]]"
+   ],
+   "metadata": {
+    "collapsed": false,
+    "ExecuteTime": {
+     "start_time": "2024-07-14T11:32:32.652160Z"
+    }
+   },
+   "id": "d61415ad8b5e86e7",
+   "execution_count": 221
+  },
+  {
+   "cell_type": "code",
+   "outputs": [
+    {
+     "ename": "NameError",
+     "evalue": "name 'df' is not defined",
+     "output_type": "error",
+     "traceback": [
+      "\u001B[1;31m---------------------------------------------------------------------------\u001B[0m",
+      "\u001B[1;31mNameError\u001B[0m                                 Traceback (most recent call last)",
+      "Cell \u001B[1;32mIn[222], line 1\u001B[0m\n\u001B[1;32m----> 1\u001B[0m \u001B[43mdf\u001B[49m\u001B[38;5;241m.\u001B[39miloc[\u001B[38;5;241m3\u001B[39m:, [\u001B[38;5;241m0\u001B[39m, \u001B[38;5;241m2\u001B[39m]]\n",
+      "\u001B[1;31mNameError\u001B[0m: name 'df' is not defined"
+     ]
+    }
+   ],
+   "source": [
+    " df.iloc[3:, [0, 2]]"
+   ],
+   "metadata": {
+    "collapsed": false,
+    "ExecuteTime": {
+     "end_time": "2024-07-14T11:32:32.834175300Z",
+     "start_time": "2024-07-14T11:32:32.708159800Z"
+    }
+   },
+   "id": "adb5cfdc75ef5577",
+   "execution_count": 222
+  },
+  {
+   "cell_type": "markdown",
+   "source": [
+    "* 行分散取值，列切片"
+   ],
+   "metadata": {
+    "collapsed": false
+   },
+   "id": "5fe1d74294867639"
+  },
+  {
+   "cell_type": "code",
+   "outputs": [
+    {
+     "ename": "NameError",
+     "evalue": "name 'df' is not defined",
+     "output_type": "error",
+     "traceback": [
+      "\u001B[1;31m---------------------------------------------------------------------------\u001B[0m",
+      "\u001B[1;31mNameError\u001B[0m                                 Traceback (most recent call last)",
+      "Cell \u001B[1;32mIn[223], line 1\u001B[0m\n\u001B[1;32m----> 1\u001B[0m \u001B[43mdf\u001B[49m\u001B[38;5;241m.\u001B[39mloc[[\u001B[38;5;124m\"\u001B[39m\u001B[38;5;124m2019-01-04\u001B[39m\u001B[38;5;124m\"\u001B[39m, \u001B[38;5;124m\"\u001B[39m\u001B[38;5;124m2019-01-06\u001B[39m\u001B[38;5;124m\"\u001B[39m], \u001B[38;5;124m\"\u001B[39m\u001B[38;5;124mC\u001B[39m\u001B[38;5;124m\"\u001B[39m:\u001B[38;5;124m\"\u001B[39m\u001B[38;5;124mD\u001B[39m\u001B[38;5;124m\"\u001B[39m]\n",
+      "\u001B[1;31mNameError\u001B[0m: name 'df' is not defined"
+     ]
+    }
+   ],
+   "source": [
+    "df.loc[[\"2019-01-04\", \"2019-01-06\"], \"C\":\"D\"]"
+   ],
+   "metadata": {
+    "collapsed": false,
+    "ExecuteTime": {
+     "start_time": "2024-07-14T11:32:32.798666700Z"
+    }
+   },
+   "id": "4f1666cdab81db51",
+   "execution_count": 223
+  },
+  {
+   "cell_type": "code",
+   "outputs": [
+    {
+     "ename": "NameError",
+     "evalue": "name 'df' is not defined",
+     "output_type": "error",
+     "traceback": [
+      "\u001B[1;31m---------------------------------------------------------------------------\u001B[0m",
+      "\u001B[1;31mNameError\u001B[0m                                 Traceback (most recent call last)",
+      "Cell \u001B[1;32mIn[224], line 1\u001B[0m\n\u001B[1;32m----> 1\u001B[0m \u001B[43mdf\u001B[49m\u001B[38;5;241m.\u001B[39miloc[[\u001B[38;5;241m1\u001B[39m, \u001B[38;5;241m5\u001B[39m], \u001B[38;5;241m0\u001B[39m:\u001B[38;5;241m3\u001B[39m]\n",
+      "\u001B[1;31mNameError\u001B[0m: name 'df' is not defined"
+     ]
+    }
+   ],
+   "source": [
+    "df.iloc[[1, 5], 0:3]"
+   ],
+   "metadata": {
+    "collapsed": false,
+    "ExecuteTime": {
+     "end_time": "2024-07-14T11:32:32.986300300Z",
+     "start_time": "2024-07-14T11:32:32.861175200Z"
+    }
+   },
+   "id": "f88f7605f01a2887",
+   "execution_count": 224
+  },
+  {
+   "cell_type": "markdown",
+   "source": [
+    "* 行、列均分散取值"
+   ],
+   "metadata": {
+    "collapsed": false
+   },
+   "id": "906468d2b3b6cf65"
+  },
+  {
+   "cell_type": "code",
+   "outputs": [
+    {
+     "ename": "NameError",
+     "evalue": "name 'df' is not defined",
+     "output_type": "error",
+     "traceback": [
+      "\u001B[1;31m---------------------------------------------------------------------------\u001B[0m",
+      "\u001B[1;31mNameError\u001B[0m                                 Traceback (most recent call last)",
+      "Cell \u001B[1;32mIn[225], line 1\u001B[0m\n\u001B[1;32m----> 1\u001B[0m \u001B[43mdf\u001B[49m\u001B[38;5;241m.\u001B[39mloc[[\u001B[38;5;124m\"\u001B[39m\u001B[38;5;124m2019-01-04\u001B[39m\u001B[38;5;124m\"\u001B[39m, \u001B[38;5;124m\"\u001B[39m\u001B[38;5;124m2019-01-06\u001B[39m\u001B[38;5;124m\"\u001B[39m], [\u001B[38;5;124m\"\u001B[39m\u001B[38;5;124mA\u001B[39m\u001B[38;5;124m\"\u001B[39m, \u001B[38;5;124m\"\u001B[39m\u001B[38;5;124mD\u001B[39m\u001B[38;5;124m\"\u001B[39m]]\n",
+      "\u001B[1;31mNameError\u001B[0m: name 'df' is not defined"
+     ]
+    }
+   ],
+   "source": [
+    "df.loc[[\"2019-01-04\", \"2019-01-06\"], [\"A\", \"D\"]]"
+   ],
+   "metadata": {
+    "collapsed": false,
+    "ExecuteTime": {
+     "start_time": "2024-07-14T11:32:32.971300600Z"
+    }
+   },
+   "id": "4758e387db69a1f1",
+   "execution_count": 225
+  },
+  {
+   "cell_type": "code",
+   "outputs": [
+    {
+     "ename": "NameError",
+     "evalue": "name 'df' is not defined",
+     "output_type": "error",
+     "traceback": [
+      "\u001B[1;31m---------------------------------------------------------------------------\u001B[0m",
+      "\u001B[1;31mNameError\u001B[0m                                 Traceback (most recent call last)",
+      "Cell \u001B[1;32mIn[226], line 1\u001B[0m\n\u001B[1;32m----> 1\u001B[0m \u001B[43mdf\u001B[49m\u001B[38;5;241m.\u001B[39miloc[[\u001B[38;5;241m3\u001B[39m, \u001B[38;5;241m5\u001B[39m], [\u001B[38;5;241m0\u001B[39m, \u001B[38;5;241m3\u001B[39m]]\n",
+      "\u001B[1;31mNameError\u001B[0m: name 'df' is not defined"
+     ]
+    }
+   ],
+   "source": [
+    "df.iloc[[3, 5], [0, 3]]"
+   ],
+   "metadata": {
+    "collapsed": false,
+    "ExecuteTime": {
+     "end_time": "2024-07-14T11:32:33.135659900Z",
+     "start_time": "2024-07-14T11:32:33.047334900Z"
+    }
+   },
+   "id": "eed7fca1f3777a59",
+   "execution_count": 226
+  },
+  {
+   "cell_type": "markdown",
+   "source": [
+    "### 2.4布尔索引"
+   ],
+   "metadata": {
+    "collapsed": false
+   },
+   "id": "d847a51f974aa6f"
+  },
+  {
+   "cell_type": "code",
+   "outputs": [
+    {
+     "ename": "NameError",
+     "evalue": "name 'df' is not defined",
+     "output_type": "error",
+     "traceback": [
+      "\u001B[1;31m---------------------------------------------------------------------------\u001B[0m",
+      "\u001B[1;31mNameError\u001B[0m                                 Traceback (most recent call last)",
+      "Cell \u001B[1;32mIn[227], line 1\u001B[0m\n\u001B[1;32m----> 1\u001B[0m \u001B[43mdf\u001B[49m\n",
+      "\u001B[1;31mNameError\u001B[0m: name 'df' is not defined"
+     ]
+    }
+   ],
+   "source": [
+    "df"
+   ],
+   "metadata": {
+    "collapsed": false,
+    "ExecuteTime": {
+     "start_time": "2024-07-14T11:32:33.133660200Z"
+    }
+   },
+   "id": "ee6cb05813c32b13",
+   "execution_count": 227
+  },
+  {
+   "cell_type": "code",
+   "outputs": [
+    {
+     "ename": "NameError",
+     "evalue": "name 'df' is not defined",
+     "output_type": "error",
+     "traceback": [
+      "\u001B[1;31m---------------------------------------------------------------------------\u001B[0m",
+      "\u001B[1;31mNameError\u001B[0m                                 Traceback (most recent call last)",
+      "Cell \u001B[1;32mIn[228], line 1\u001B[0m\n\u001B[1;32m----> 1\u001B[0m \u001B[43mdf\u001B[49m \u001B[38;5;241m>\u001B[39m \u001B[38;5;241m0\u001B[39m\n",
+      "\u001B[1;31mNameError\u001B[0m: name 'df' is not defined"
+     ]
+    }
+   ],
+   "source": [
+    "df > 0"
+   ],
+   "metadata": {
+    "collapsed": false,
+    "ExecuteTime": {
+     "end_time": "2024-07-14T11:32:33.298457100Z",
+     "start_time": "2024-07-14T11:32:33.236652700Z"
+    }
+   },
+   "id": "13e53a4f8e47aba8",
+   "execution_count": 228
+  },
+  {
+   "cell_type": "code",
+   "outputs": [
+    {
+     "ename": "NameError",
+     "evalue": "name 'df' is not defined",
+     "output_type": "error",
+     "traceback": [
+      "\u001B[1;31m---------------------------------------------------------------------------\u001B[0m",
+      "\u001B[1;31mNameError\u001B[0m                                 Traceback (most recent call last)",
+      "Cell \u001B[1;32mIn[229], line 1\u001B[0m\n\u001B[1;32m----> 1\u001B[0m \u001B[43mdf\u001B[49m[df \u001B[38;5;241m>\u001B[39m \u001B[38;5;241m0\u001B[39m]\n",
+      "\u001B[1;31mNameError\u001B[0m: name 'df' is not defined"
+     ]
+    }
+   ],
+   "source": [
+    "df[df > 0]"
+   ],
+   "metadata": {
+    "collapsed": false,
+    "ExecuteTime": {
+     "start_time": "2024-07-14T11:32:33.287450900Z"
+    }
+   },
+   "id": "507e74d787738fc9",
+   "execution_count": 229
+  },
+  {
+   "cell_type": "code",
+   "outputs": [
+    {
+     "ename": "NameError",
+     "evalue": "name 'df' is not defined",
+     "output_type": "error",
+     "traceback": [
+      "\u001B[1;31m---------------------------------------------------------------------------\u001B[0m",
+      "\u001B[1;31mNameError\u001B[0m                                 Traceback (most recent call last)",
+      "Cell \u001B[1;32mIn[230], line 1\u001B[0m\n\u001B[1;32m----> 1\u001B[0m \u001B[43mdf\u001B[49m\u001B[38;5;241m.\u001B[39mA \u001B[38;5;241m>\u001B[39m \u001B[38;5;241m0\u001B[39m\n",
+      "\u001B[1;31mNameError\u001B[0m: name 'df' is not defined"
+     ]
+    }
+   ],
+   "source": [
+    "df.A > 0"
+   ],
+   "metadata": {
+    "collapsed": false,
+    "ExecuteTime": {
+     "end_time": "2024-07-14T11:32:33.458225400Z",
+     "start_time": "2024-07-14T11:32:33.366121100Z"
+    }
+   },
+   "id": "8c55fe90649434fb",
+   "execution_count": 230
+  },
+  {
+   "cell_type": "code",
+   "outputs": [
+    {
+     "ename": "NameError",
+     "evalue": "name 'df' is not defined",
+     "output_type": "error",
+     "traceback": [
+      "\u001B[1;31m---------------------------------------------------------------------------\u001B[0m",
+      "\u001B[1;31mNameError\u001B[0m                                 Traceback (most recent call last)",
+      "Cell \u001B[1;32mIn[231], line 1\u001B[0m\n\u001B[1;32m----> 1\u001B[0m \u001B[43mdf\u001B[49m[df\u001B[38;5;241m.\u001B[39mA \u001B[38;5;241m>\u001B[39m \u001B[38;5;241m0\u001B[39m]\n",
+      "\u001B[1;31mNameError\u001B[0m: name 'df' is not defined"
+     ]
+    }
+   ],
+   "source": [
+    "df[df.A > 0]"
+   ],
+   "metadata": {
+    "collapsed": false,
+    "ExecuteTime": {
+     "start_time": "2024-07-14T11:32:33.425128300Z"
+    }
+   },
+   "id": "eeea71ed3e46f3bc",
+   "execution_count": 231
+  },
+  {
+   "cell_type": "markdown",
+   "source": [
+    "* isin()方法"
+   ],
+   "metadata": {
+    "collapsed": false
+   },
+   "id": "16e18d53a8e6f6b7"
+  },
+  {
+   "cell_type": "code",
+   "outputs": [
+    {
+     "ename": "NameError",
+     "evalue": "name 'df' is not defined",
+     "output_type": "error",
+     "traceback": [
+      "\u001B[1;31m---------------------------------------------------------------------------\u001B[0m",
+      "\u001B[1;31mNameError\u001B[0m                                 Traceback (most recent call last)",
+      "Cell \u001B[1;32mIn[232], line 1\u001B[0m\n\u001B[1;32m----> 1\u001B[0m df2 \u001B[38;5;241m=\u001B[39m \u001B[43mdf\u001B[49m\u001B[38;5;241m.\u001B[39mcopy()\n\u001B[0;32m      2\u001B[0m df2[\u001B[38;5;124m\"\u001B[39m\u001B[38;5;124mE\u001B[39m\u001B[38;5;124m\"\u001B[39m] \u001B[38;5;241m=\u001B[39m [\u001B[38;5;124m\"\u001B[39m\u001B[38;5;124mone\u001B[39m\u001B[38;5;124m\"\u001B[39m, \u001B[38;5;124m\"\u001B[39m\u001B[38;5;124mone\u001B[39m\u001B[38;5;124m\"\u001B[39m, \u001B[38;5;124m\"\u001B[39m\u001B[38;5;124mtwo\u001B[39m\u001B[38;5;124m\"\u001B[39m, \u001B[38;5;124m\"\u001B[39m\u001B[38;5;124mthree\u001B[39m\u001B[38;5;124m\"\u001B[39m, \u001B[38;5;124m\"\u001B[39m\u001B[38;5;124mfour\u001B[39m\u001B[38;5;124m\"\u001B[39m, \u001B[38;5;124m\"\u001B[39m\u001B[38;5;124mthree\u001B[39m\u001B[38;5;124m\"\u001B[39m]\n\u001B[0;32m      3\u001B[0m df2\n",
+      "\u001B[1;31mNameError\u001B[0m: name 'df' is not defined"
+     ]
+    }
+   ],
+   "source": [
+    "df2 = df.copy()\n",
+    "df2[\"E\"] = [\"one\", \"one\", \"two\", \"three\", \"four\", \"three\"]\n",
+    "df2"
+   ],
+   "metadata": {
+    "collapsed": false,
+    "ExecuteTime": {
+     "end_time": "2024-07-14T11:32:33.627710100Z",
+     "start_time": "2024-07-14T11:32:33.485816300Z"
+    }
+   },
+   "id": "dd3c3eb70b15bf1a",
+   "execution_count": 232
+  },
+  {
+   "cell_type": "code",
+   "outputs": [
+    {
+     "ename": "NameError",
+     "evalue": "name 'df2' is not defined",
+     "output_type": "error",
+     "traceback": [
+      "\u001B[1;31m---------------------------------------------------------------------------\u001B[0m",
+      "\u001B[1;31mNameError\u001B[0m                                 Traceback (most recent call last)",
+      "Cell \u001B[1;32mIn[233], line 1\u001B[0m\n\u001B[1;32m----> 1\u001B[0m ind \u001B[38;5;241m=\u001B[39m \u001B[43mdf2\u001B[49m[\u001B[38;5;124m\"\u001B[39m\u001B[38;5;124mE\u001B[39m\u001B[38;5;124m\"\u001B[39m]\u001B[38;5;241m.\u001B[39misin([\u001B[38;5;124m\"\u001B[39m\u001B[38;5;124mtwo\u001B[39m\u001B[38;5;124m\"\u001B[39m, \u001B[38;5;124m\"\u001B[39m\u001B[38;5;124mfour\u001B[39m\u001B[38;5;124m\"\u001B[39m])\n\u001B[0;32m      2\u001B[0m ind\n",
+      "\u001B[1;31mNameError\u001B[0m: name 'df2' is not defined"
+     ]
+    }
+   ],
+   "source": [
+    "ind = df2[\"E\"].isin([\"two\", \"four\"])\n",
+    "ind"
+   ],
+   "metadata": {
+    "collapsed": false,
+    "ExecuteTime": {
+     "start_time": "2024-07-14T11:32:33.611706700Z"
+    }
+   },
+   "id": "55f3ea2b4e1cc17c",
+   "execution_count": 233
+  },
+  {
+   "cell_type": "code",
+   "outputs": [
+    {
+     "ename": "NameError",
+     "evalue": "name 'df2' is not defined",
+     "output_type": "error",
+     "traceback": [
+      "\u001B[1;31m---------------------------------------------------------------------------\u001B[0m",
+      "\u001B[1;31mNameError\u001B[0m                                 Traceback (most recent call last)",
+      "Cell \u001B[1;32mIn[234], line 1\u001B[0m\n\u001B[1;32m----> 1\u001B[0m \u001B[43mdf2\u001B[49m[ind]\n",
+      "\u001B[1;31mNameError\u001B[0m: name 'df2' is not defined"
+     ]
+    }
+   ],
+   "source": [
+    "df2[ind]"
+   ],
+   "metadata": {
+    "collapsed": false,
+    "ExecuteTime": {
+     "end_time": "2024-07-14T11:32:33.795427300Z",
+     "start_time": "2024-07-14T11:32:33.669741Z"
+    }
+   },
+   "id": "87cbdc25dafac753",
+   "execution_count": 234
+  },
+  {
+   "cell_type": "markdown",
+   "source": [
+    "### 2.5赋值"
+   ],
+   "metadata": {
+    "collapsed": false
+   },
+   "id": "2bfe594c144d59c6"
+  },
+  {
+   "cell_type": "code",
+   "outputs": [
+    {
+     "ename": "NameError",
+     "evalue": "name 'df' is not defined",
+     "output_type": "error",
+     "traceback": [
+      "\u001B[1;31m---------------------------------------------------------------------------\u001B[0m",
+      "\u001B[1;31mNameError\u001B[0m                                 Traceback (most recent call last)",
+      "Cell \u001B[1;32mIn[235], line 1\u001B[0m\n\u001B[1;32m----> 1\u001B[0m \u001B[43mdf\u001B[49m\n",
+      "\u001B[1;31mNameError\u001B[0m: name 'df' is not defined"
+     ]
+    }
+   ],
+   "source": [
+    "df"
+   ],
+   "metadata": {
+    "collapsed": false,
+    "ExecuteTime": {
+     "start_time": "2024-07-14T11:32:33.787427Z"
+    }
+   },
+   "id": "456e2cc8728878c4",
+   "execution_count": 235
+  },
+  {
+   "cell_type": "markdown",
+   "source": [
+    "* DataFrame增加新列"
+   ],
+   "metadata": {
+    "collapsed": false
+   },
+   "id": "2271e859db8f247"
+  },
+  {
+   "cell_type": "code",
+   "outputs": [
+    {
+     "data": {
+      "text/plain": "2019-01-01    1\n2019-01-02    2\n2019-01-03    3\n2019-01-04    4\n2019-01-05    5\n2019-01-06    6\nFreq: D, dtype: int64"
+     },
+     "execution_count": 236,
+     "metadata": {},
+     "output_type": "execute_result"
+    }
+   ],
+   "source": [
+    "s1 = pd.Series([1, 2, 3, 4, 5, 6], index=pd.date_range(\"20190101\", periods=6))\n",
+    "s1"
+   ],
+   "metadata": {
+    "collapsed": false,
+    "ExecuteTime": {
+     "end_time": "2024-07-14T11:32:33.943871900Z",
+     "start_time": "2024-07-14T11:32:33.827429200Z"
+    }
+   },
+   "id": "208d08f25237d247",
+   "execution_count": 236
+  },
+  {
+   "cell_type": "code",
+   "outputs": [
+    {
+     "ename": "NameError",
+     "evalue": "name 'df' is not defined",
+     "output_type": "error",
+     "traceback": [
+      "\u001B[1;31m---------------------------------------------------------------------------\u001B[0m",
+      "\u001B[1;31mNameError\u001B[0m                                 Traceback (most recent call last)",
+      "Cell \u001B[1;32mIn[237], line 1\u001B[0m\n\u001B[1;32m----> 1\u001B[0m \u001B[43mdf\u001B[49m[\u001B[38;5;124m\"\u001B[39m\u001B[38;5;124mE\u001B[39m\u001B[38;5;124m\"\u001B[39m] \u001B[38;5;241m=\u001B[39m s1\n\u001B[0;32m      2\u001B[0m df\n",
+      "\u001B[1;31mNameError\u001B[0m: name 'df' is not defined"
+     ]
+    }
+   ],
+   "source": [
+    "df[\"E\"] = s1\n",
+    "df"
+   ],
+   "metadata": {
+    "collapsed": false,
+    "ExecuteTime": {
+     "end_time": "2024-07-14T11:32:34.035428300Z",
+     "start_time": "2024-07-14T11:32:33.925366100Z"
+    }
+   },
+   "id": "15f9966994876a7b",
+   "execution_count": 237
+  },
+  {
+   "cell_type": "markdown",
+   "source": [
+    "* 修改赋值"
+   ],
+   "metadata": {
+    "collapsed": false
+   },
+   "id": "7fe64f5a9f44ba20"
+  },
+  {
+   "cell_type": "code",
+   "outputs": [
+    {
+     "ename": "NameError",
+     "evalue": "name 'df' is not defined",
+     "output_type": "error",
+     "traceback": [
+      "\u001B[1;31m---------------------------------------------------------------------------\u001B[0m",
+      "\u001B[1;31mNameError\u001B[0m                                 Traceback (most recent call last)",
+      "Cell \u001B[1;32mIn[238], line 1\u001B[0m\n\u001B[1;32m----> 1\u001B[0m \u001B[43mdf\u001B[49m\u001B[38;5;241m.\u001B[39mloc[\u001B[38;5;124m\"\u001B[39m\u001B[38;5;124m2019-01-01\u001B[39m\u001B[38;5;124m\"\u001B[39m, \u001B[38;5;124m\"\u001B[39m\u001B[38;5;124mA\u001B[39m\u001B[38;5;124m\"\u001B[39m] \u001B[38;5;241m=\u001B[39m \u001B[38;5;241m0\u001B[39m\n\u001B[0;32m      2\u001B[0m df\n",
+      "\u001B[1;31mNameError\u001B[0m: name 'df' is not defined"
+     ]
+    }
+   ],
+   "source": [
+    "df.loc[\"2019-01-01\", \"A\"] = 0\n",
+    "df"
+   ],
+   "metadata": {
+    "collapsed": false,
+    "ExecuteTime": {
+     "start_time": "2024-07-14T11:32:33.986922200Z"
+    }
+   },
+   "id": "ecc9ad46e38b3fa2",
+   "execution_count": 238
+  },
+  {
+   "cell_type": "code",
+   "outputs": [
+    {
+     "ename": "NameError",
+     "evalue": "name 'df' is not defined",
+     "output_type": "error",
+     "traceback": [
+      "\u001B[1;31m---------------------------------------------------------------------------\u001B[0m",
+      "\u001B[1;31mNameError\u001B[0m                                 Traceback (most recent call last)",
+      "Cell \u001B[1;32mIn[239], line 1\u001B[0m\n\u001B[1;32m----> 1\u001B[0m \u001B[43mdf\u001B[49m\u001B[38;5;241m.\u001B[39miloc[\u001B[38;5;241m0\u001B[39m, \u001B[38;5;241m1\u001B[39m] \u001B[38;5;241m=\u001B[39m \u001B[38;5;241m0\u001B[39m\n\u001B[0;32m      2\u001B[0m df\n",
+      "\u001B[1;31mNameError\u001B[0m: name 'df' is not defined"
+     ]
+    }
+   ],
+   "source": [
+    "df.iloc[0, 1] = 0\n",
+    "df"
+   ],
+   "metadata": {
+    "collapsed": false,
+    "ExecuteTime": {
+     "end_time": "2024-07-14T11:32:34.164952200Z",
+     "start_time": "2024-07-14T11:32:34.060428800Z"
+    }
+   },
+   "id": "b4c069e48c036654",
+   "execution_count": 239
+  },
+  {
+   "cell_type": "code",
+   "outputs": [
+    {
+     "ename": "NameError",
+     "evalue": "name 'np' is not defined",
+     "output_type": "error",
+     "traceback": [
+      "\u001B[1;31m---------------------------------------------------------------------------\u001B[0m",
+      "\u001B[1;31mNameError\u001B[0m                                 Traceback (most recent call last)",
+      "Cell \u001B[1;32mIn[240], line 1\u001B[0m\n\u001B[1;32m----> 1\u001B[0m df[\u001B[38;5;124m\"\u001B[39m\u001B[38;5;124mD\u001B[39m\u001B[38;5;124m\"\u001B[39m] \u001B[38;5;241m=\u001B[39m \u001B[43mnp\u001B[49m\u001B[38;5;241m.\u001B[39marray([\u001B[38;5;241m5\u001B[39m] \u001B[38;5;241m*\u001B[39m \u001B[38;5;28mlen\u001B[39m(df))  \u001B[38;5;66;03m# 可简化成df[\"D\"]=5\u001B[39;00m\n\u001B[0;32m      2\u001B[0m df\n",
+      "\u001B[1;31mNameError\u001B[0m: name 'np' is not defined"
+     ]
+    }
+   ],
+   "source": [
+    "df[\"D\"] = np.array([5] * len(df))  # 可简化成df[\"D\"]=5\n",
+    "df"
+   ],
+   "metadata": {
+    "collapsed": false,
+    "ExecuteTime": {
+     "start_time": "2024-07-14T11:32:34.135937300Z"
+    }
+   },
+   "id": "bf020a6ed4b5ab28",
+   "execution_count": 240
+  },
+  {
+   "cell_type": "markdown",
+   "source": [
+    "* 修改index和columns"
+   ],
+   "metadata": {
+    "collapsed": false
+   },
+   "id": "39b12c0967703021"
+  },
+  {
+   "cell_type": "code",
+   "outputs": [
+    {
+     "ename": "NameError",
+     "evalue": "name 'df' is not defined",
+     "output_type": "error",
+     "traceback": [
+      "\u001B[1;31m---------------------------------------------------------------------------\u001B[0m",
+      "\u001B[1;31mNameError\u001B[0m                                 Traceback (most recent call last)",
+      "Cell \u001B[1;32mIn[241], line 1\u001B[0m\n\u001B[1;32m----> 1\u001B[0m df\u001B[38;5;241m.\u001B[39mindex \u001B[38;5;241m=\u001B[39m [i \u001B[38;5;28;01mfor\u001B[39;00m i \u001B[38;5;129;01min\u001B[39;00m \u001B[38;5;28mrange\u001B[39m(\u001B[38;5;28mlen\u001B[39m(\u001B[43mdf\u001B[49m))]\n\u001B[0;32m      2\u001B[0m df\n",
+      "\u001B[1;31mNameError\u001B[0m: name 'df' is not defined"
+     ]
+    }
+   ],
+   "source": [
+    "df.index = [i for i in range(len(df))]\n",
+    "df"
+   ],
+   "metadata": {
+    "collapsed": false,
+    "ExecuteTime": {
+     "end_time": "2024-07-14T11:32:34.386161500Z",
+     "start_time": "2024-07-14T11:32:34.229953600Z"
+    }
+   },
+   "id": "d7850f3feca0ae73",
+   "execution_count": 241
+  },
+  {
+   "cell_type": "code",
+   "outputs": [
+    {
+     "ename": "NameError",
+     "evalue": "name 'df' is not defined",
+     "output_type": "error",
+     "traceback": [
+      "\u001B[1;31m---------------------------------------------------------------------------\u001B[0m",
+      "\u001B[1;31mNameError\u001B[0m                                 Traceback (most recent call last)",
+      "Cell \u001B[1;32mIn[242], line 1\u001B[0m\n\u001B[1;32m----> 1\u001B[0m df\u001B[38;5;241m.\u001B[39mcolumns \u001B[38;5;241m=\u001B[39m [i \u001B[38;5;28;01mfor\u001B[39;00m i \u001B[38;5;129;01min\u001B[39;00m \u001B[38;5;28mrange\u001B[39m(\u001B[43mdf\u001B[49m\u001B[38;5;241m.\u001B[39mshape[\u001B[38;5;241m1\u001B[39m])]\n\u001B[0;32m      2\u001B[0m df\n",
+      "\u001B[1;31mNameError\u001B[0m: name 'df' is not defined"
+     ]
+    }
+   ],
+   "source": [
+    "df.columns = [i for i in range(df.shape[1])]\n",
+    "df"
+   ],
+   "metadata": {
+    "collapsed": false,
+    "ExecuteTime": {
+     "start_time": "2024-07-14T11:32:34.364161400Z"
+    }
+   },
+   "id": "130bdd93362a8525",
+   "execution_count": 242
+  },
+  {
+   "cell_type": "markdown",
+   "source": [
+    "## 3.数值运算及统计分析\n",
+    "### 3.1数据的查看"
+   ],
+   "metadata": {
+    "collapsed": false
+   },
+   "id": "2e7c26a5b911be60"
+  },
+  {
+   "cell_type": "code",
+   "outputs": [
+    {
+     "data": {
+      "text/plain": "                   A         B         C         D\n2019-01-01  2.027285  0.072918  0.755930  0.049795\n2019-01-02 -0.090192 -0.350560 -0.184774 -0.261903\n2019-01-03  0.600553 -0.482822  0.310565  0.965479\n2019-01-04  0.647075 -1.118212 -0.404091 -3.120594\n2019-01-05 -0.803213  1.460468 -0.191165 -0.852326\n2019-01-06  0.311508 -0.229625  0.141935 -1.024751",
+      "text/html": "<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>A</th>\n      <th>B</th>\n      <th>C</th>\n      <th>D</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>2019-01-01</th>\n      <td>2.027285</td>\n      <td>0.072918</td>\n      <td>0.755930</td>\n      <td>0.049795</td>\n    </tr>\n    <tr>\n      <th>2019-01-02</th>\n      <td>-0.090192</td>\n      <td>-0.350560</td>\n      <td>-0.184774</td>\n      <td>-0.261903</td>\n    </tr>\n    <tr>\n      <th>2019-01-03</th>\n      <td>0.600553</td>\n      <td>-0.482822</td>\n      <td>0.310565</td>\n      <td>0.965479</td>\n    </tr>\n    <tr>\n      <th>2019-01-04</th>\n      <td>0.647075</td>\n      <td>-1.118212</td>\n      <td>-0.404091</td>\n      <td>-3.120594</td>\n    </tr>\n    <tr>\n      <th>2019-01-05</th>\n      <td>-0.803213</td>\n      <td>1.460468</td>\n      <td>-0.191165</td>\n      <td>-0.852326</td>\n    </tr>\n    <tr>\n      <th>2019-01-06</th>\n      <td>0.311508</td>\n      <td>-0.229625</td>\n      <td>0.141935</td>\n      <td>-1.024751</td>\n    </tr>\n  </tbody>\n</table>\n</div>"
+     },
+     "execution_count": 243,
+     "metadata": {},
+     "output_type": "execute_result"
+    }
+   ],
+   "source": [
+    "import pandas as pd\n",
+    "import numpy as np\n",
+    "\n",
+    "datas = pd.date_range(start=\"2019-01-01\", periods=6)\n",
+    "df = pd.DataFrame(np.random.randn(6, 4), index=datas, columns=[\"A\", \"B\", \"C\", \"D\"])\n",
+    "df"
+   ],
+   "metadata": {
+    "collapsed": false,
+    "ExecuteTime": {
+     "end_time": "2024-07-14T11:32:34.534055500Z",
+     "start_time": "2024-07-14T11:32:34.405161500Z"
+    }
+   },
+   "id": "ea2ffa05229254c",
+   "execution_count": 243
+  },
+  {
+   "cell_type": "markdown",
+   "source": [
+    "#### 3.1.1查看前几行"
+   ],
+   "metadata": {
+    "collapsed": false
+   },
+   "id": "52490f87bc06a67c"
+  },
+  {
+   "cell_type": "code",
+   "outputs": [
+    {
+     "data": {
+      "text/plain": "                   A         B         C         D\n2019-01-01  2.027285  0.072918  0.755930  0.049795\n2019-01-02 -0.090192 -0.350560 -0.184774 -0.261903\n2019-01-03  0.600553 -0.482822  0.310565  0.965479\n2019-01-04  0.647075 -1.118212 -0.404091 -3.120594\n2019-01-05 -0.803213  1.460468 -0.191165 -0.852326",
+      "text/html": "<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>A</th>\n      <th>B</th>\n      <th>C</th>\n      <th>D</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>2019-01-01</th>\n      <td>2.027285</td>\n      <td>0.072918</td>\n      <td>0.755930</td>\n      <td>0.049795</td>\n    </tr>\n    <tr>\n      <th>2019-01-02</th>\n      <td>-0.090192</td>\n      <td>-0.350560</td>\n      <td>-0.184774</td>\n      <td>-0.261903</td>\n    </tr>\n    <tr>\n      <th>2019-01-03</th>\n      <td>0.600553</td>\n      <td>-0.482822</td>\n      <td>0.310565</td>\n      <td>0.965479</td>\n    </tr>\n    <tr>\n      <th>2019-01-04</th>\n      <td>0.647075</td>\n      <td>-1.118212</td>\n      <td>-0.404091</td>\n      <td>-3.120594</td>\n    </tr>\n    <tr>\n      <th>2019-01-05</th>\n      <td>-0.803213</td>\n      <td>1.460468</td>\n      <td>-0.191165</td>\n      <td>-0.852326</td>\n    </tr>\n  </tbody>\n</table>\n</div>"
+     },
+     "execution_count": 244,
+     "metadata": {},
+     "output_type": "execute_result"
+    }
+   ],
+   "source": [
+    "df.head()  # 默认5行"
+   ],
+   "metadata": {
+    "collapsed": false,
+    "ExecuteTime": {
+     "end_time": "2024-07-14T11:32:34.626056500Z",
+     "start_time": "2024-07-14T11:32:34.524463500Z"
+    }
+   },
+   "id": "ae8814ca581b886e",
+   "execution_count": 244
+  },
+  {
+   "cell_type": "code",
+   "outputs": [
+    {
+     "data": {
+      "text/plain": "                   A         B         C         D\n2019-01-01  2.027285  0.072918  0.755930  0.049795\n2019-01-02 -0.090192 -0.350560 -0.184774 -0.261903",
+      "text/html": "<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>A</th>\n      <th>B</th>\n      <th>C</th>\n      <th>D</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>2019-01-01</th>\n      <td>2.027285</td>\n      <td>0.072918</td>\n      <td>0.755930</td>\n      <td>0.049795</td>\n    </tr>\n    <tr>\n      <th>2019-01-02</th>\n      <td>-0.090192</td>\n      <td>-0.350560</td>\n      <td>-0.184774</td>\n      <td>-0.261903</td>\n    </tr>\n  </tbody>\n</table>\n</div>"
+     },
+     "execution_count": 245,
+     "metadata": {},
+     "output_type": "execute_result"
+    }
+   ],
+   "source": [
+    "df.head(2)"
+   ],
+   "metadata": {
+    "collapsed": false,
+    "ExecuteTime": {
+     "end_time": "2024-07-14T11:32:34.696562800Z",
+     "start_time": "2024-07-14T11:32:34.577055300Z"
+    }
+   },
+   "id": "8768c5ed0bf0f38",
+   "execution_count": 245
+  },
+  {
+   "cell_type": "markdown",
+   "source": [
+    "#### 3.1.2查看后面的行"
+   ],
+   "metadata": {
+    "collapsed": false
+   },
+   "id": "11167c448f8360f4"
+  },
+  {
+   "cell_type": "code",
+   "outputs": [
+    {
+     "data": {
+      "text/plain": "                   A         B         C         D\n2019-01-02 -0.090192 -0.350560 -0.184774 -0.261903\n2019-01-03  0.600553 -0.482822  0.310565  0.965479\n2019-01-04  0.647075 -1.118212 -0.404091 -3.120594\n2019-01-05 -0.803213  1.460468 -0.191165 -0.852326\n2019-01-06  0.311508 -0.229625  0.141935 -1.024751",
+      "text/html": "<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>A</th>\n      <th>B</th>\n      <th>C</th>\n      <th>D</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>2019-01-02</th>\n      <td>-0.090192</td>\n      <td>-0.350560</td>\n      <td>-0.184774</td>\n      <td>-0.261903</td>\n    </tr>\n    <tr>\n      <th>2019-01-03</th>\n      <td>0.600553</td>\n      <td>-0.482822</td>\n      <td>0.310565</td>\n      <td>0.965479</td>\n    </tr>\n    <tr>\n      <th>2019-01-04</th>\n      <td>0.647075</td>\n      <td>-1.118212</td>\n      <td>-0.404091</td>\n      <td>-3.120594</td>\n    </tr>\n    <tr>\n      <th>2019-01-05</th>\n      <td>-0.803213</td>\n      <td>1.460468</td>\n      <td>-0.191165</td>\n      <td>-0.852326</td>\n    </tr>\n    <tr>\n      <th>2019-01-06</th>\n      <td>0.311508</td>\n      <td>-0.229625</td>\n      <td>0.141935</td>\n      <td>-1.024751</td>\n    </tr>\n  </tbody>\n</table>\n</div>"
+     },
+     "execution_count": 246,
+     "metadata": {},
+     "output_type": "execute_result"
+    }
+   ],
+   "source": [
+    "df.tail()  # 默认5行"
+   ],
+   "metadata": {
+    "collapsed": false,
+    "ExecuteTime": {
+     "end_time": "2024-07-14T11:32:34.846320Z",
+     "start_time": "2024-07-14T11:32:34.667563Z"
+    }
+   },
+   "id": "b8242f350c2fa1ba",
+   "execution_count": 246
+  },
+  {
+   "cell_type": "code",
+   "outputs": [
+    {
+     "data": {
+      "text/plain": "                   A         B         C         D\n2019-01-04  0.647075 -1.118212 -0.404091 -3.120594\n2019-01-05 -0.803213  1.460468 -0.191165 -0.852326\n2019-01-06  0.311508 -0.229625  0.141935 -1.024751",
+      "text/html": "<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>A</th>\n      <th>B</th>\n      <th>C</th>\n      <th>D</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>2019-01-04</th>\n      <td>0.647075</td>\n      <td>-1.118212</td>\n      <td>-0.404091</td>\n      <td>-3.120594</td>\n    </tr>\n    <tr>\n      <th>2019-01-05</th>\n      <td>-0.803213</td>\n      <td>1.460468</td>\n      <td>-0.191165</td>\n      <td>-0.852326</td>\n    </tr>\n    <tr>\n      <th>2019-01-06</th>\n      <td>0.311508</td>\n      <td>-0.229625</td>\n      <td>0.141935</td>\n      <td>-1.024751</td>\n    </tr>\n  </tbody>\n</table>\n</div>"
+     },
+     "execution_count": 247,
+     "metadata": {},
+     "output_type": "execute_result"
+    }
+   ],
+   "source": [
+    "df.tail(3)"
+   ],
+   "metadata": {
+    "collapsed": false,
+    "ExecuteTime": {
+     "end_time": "2024-07-14T11:32:34.991179600Z",
+     "start_time": "2024-07-14T11:32:34.830077600Z"
+    }
+   },
+   "id": "3845bc60256ef002",
+   "execution_count": 247
+  },
+  {
+   "cell_type": "markdown",
+   "source": [
+    "#### 3.1.3查看总体信息"
+   ],
+   "metadata": {
+    "collapsed": false
+   },
+   "id": "a69e832ca39178b1"
+  },
+  {
+   "cell_type": "code",
+   "outputs": [
+    {
+     "data": {
+      "text/plain": "                   A         B         C         D\n2019-01-01  2.027285  0.072918  0.755930       NaN\n2019-01-02 -0.090192 -0.350560 -0.184774 -0.261903\n2019-01-03  0.600553 -0.482822  0.310565  0.965479\n2019-01-04  0.647075 -1.118212 -0.404091 -3.120594\n2019-01-05 -0.803213  1.460468 -0.191165 -0.852326\n2019-01-06  0.311508 -0.229625  0.141935 -1.024751",
+      "text/html": "<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>A</th>\n      <th>B</th>\n      <th>C</th>\n      <th>D</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>2019-01-01</th>\n      <td>2.027285</td>\n      <td>0.072918</td>\n      <td>0.755930</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>2019-01-02</th>\n      <td>-0.090192</td>\n      <td>-0.350560</td>\n      <td>-0.184774</td>\n      <td>-0.261903</td>\n    </tr>\n    <tr>\n      <th>2019-01-03</th>\n      <td>0.600553</td>\n      <td>-0.482822</td>\n      <td>0.310565</td>\n      <td>0.965479</td>\n    </tr>\n    <tr>\n      <th>2019-01-04</th>\n      <td>0.647075</td>\n      <td>-1.118212</td>\n      <td>-0.404091</td>\n      <td>-3.120594</td>\n    </tr>\n    <tr>\n      <th>2019-01-05</th>\n      <td>-0.803213</td>\n      <td>1.460468</td>\n      <td>-0.191165</td>\n      <td>-0.852326</td>\n    </tr>\n    <tr>\n      <th>2019-01-06</th>\n      <td>0.311508</td>\n      <td>-0.229625</td>\n      <td>0.141935</td>\n      <td>-1.024751</td>\n    </tr>\n  </tbody>\n</table>\n</div>"
+     },
+     "execution_count": 248,
+     "metadata": {},
+     "output_type": "execute_result"
+    }
+   ],
+   "source": [
+    "df.iloc[0, 3] = np.nan\n",
+    "df"
+   ],
+   "metadata": {
+    "collapsed": false,
+    "ExecuteTime": {
+     "end_time": "2024-07-14T11:32:35.171728400Z",
+     "start_time": "2024-07-14T11:32:34.970215Z"
+    }
+   },
+   "id": "ccfbab2e3b7e9f92",
+   "execution_count": 248
+  },
+  {
+   "cell_type": "code",
+   "outputs": [
+    {
+     "name": "stdout",
+     "output_type": "stream",
+     "text": [
+      "<class 'pandas.core.frame.DataFrame'>\n",
+      "DatetimeIndex: 6 entries, 2019-01-01 to 2019-01-06\n",
+      "Freq: D\n",
+      "Data columns (total 4 columns):\n",
+      " #   Column  Non-Null Count  Dtype  \n",
+      "---  ------  --------------  -----  \n",
+      " 0   A       6 non-null      float64\n",
+      " 1   B       6 non-null      float64\n",
+      " 2   C       6 non-null      float64\n",
+      " 3   D       5 non-null      float64\n",
+      "dtypes: float64(4)\n",
+      "memory usage: 240.0 bytes\n"
+     ]
+    }
+   ],
+   "source": [
+    "df.info()"
+   ],
+   "metadata": {
+    "collapsed": false,
+    "ExecuteTime": {
+     "end_time": "2024-07-14T11:32:35.308508500Z",
+     "start_time": "2024-07-14T11:32:35.160353300Z"
+    }
+   },
+   "id": "353fc0fe01a44384",
+   "execution_count": 249
+  },
+  {
+   "cell_type": "markdown",
+   "source": [
+    "### 3.2Numpy通用函数同样适用于Pandas\n",
+    "#### 3.2.1向量化运算"
+   ],
+   "metadata": {
+    "collapsed": false
+   },
+   "id": "d757b8a65106a84b"
+  },
+  {
+   "cell_type": "code",
+   "outputs": [
+    {
+     "data": {
+      "text/plain": "   0  1  2  3\n0  0  1  2  3",
+      "text/html": "<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>0</th>\n      <th>1</th>\n      <th>2</th>\n      <th>3</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>0</td>\n      <td>1</td>\n      <td>2</td>\n      <td>3</td>\n    </tr>\n  </tbody>\n</table>\n</div>"
+     },
+     "execution_count": 250,
+     "metadata": {},
+     "output_type": "execute_result"
+    }
+   ],
+   "source": [
+    "x = pd.DataFrame(np.arange(4).reshape(1, 4))\n",
+    "x"
+   ],
+   "metadata": {
+    "collapsed": false,
+    "ExecuteTime": {
+     "end_time": "2024-07-14T11:32:35.478000900Z",
+     "start_time": "2024-07-14T11:32:35.287490800Z"
+    }
+   },
+   "id": "b4f3a5e7b7d4240",
+   "execution_count": 250
+  },
+  {
+   "cell_type": "code",
+   "outputs": [
+    {
+     "data": {
+      "text/plain": "   0  1  2  3\n0  5  6  7  8",
+      "text/html": "<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>0</th>\n      <th>1</th>\n      <th>2</th>\n      <th>3</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>5</td>\n      <td>6</td>\n      <td>7</td>\n      <td>8</td>\n    </tr>\n  </tbody>\n</table>\n</div>"
+     },
+     "execution_count": 251,
+     "metadata": {},
+     "output_type": "execute_result"
+    }
+   ],
+   "source": [
+    "x + 5"
+   ],
+   "metadata": {
+    "collapsed": false,
+    "ExecuteTime": {
+     "end_time": "2024-07-14T11:32:35.596687300Z",
+     "start_time": "2024-07-14T11:32:35.450968Z"
+    }
+   },
+   "id": "32b33d8e3ca2f93b",
+   "execution_count": 251
+  },
+  {
+   "cell_type": "code",
+   "outputs": [
+    {
+     "data": {
+      "text/plain": "     0         1         2          3\n0  1.0  2.718282  7.389056  20.085537",
+      "text/html": "<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>0</th>\n      <th>1</th>\n      <th>2</th>\n      <th>3</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>1.0</td>\n      <td>2.718282</td>\n      <td>7.389056</td>\n      <td>20.085537</td>\n    </tr>\n  </tbody>\n</table>\n</div>"
+     },
+     "execution_count": 252,
+     "metadata": {},
+     "output_type": "execute_result"
+    }
+   ],
+   "source": [
+    "np.exp(x)"
+   ],
+   "metadata": {
+    "collapsed": false,
+    "ExecuteTime": {
+     "end_time": "2024-07-14T11:32:35.696433200Z",
+     "start_time": "2024-07-14T11:32:35.544674200Z"
+    }
+   },
+   "id": "d9579b347a11fb47",
+   "execution_count": 252
+  },
+  {
+   "cell_type": "code",
+   "outputs": [
+    {
+     "data": {
+      "text/plain": "   0  1  2  3\n0  4  5  6  7",
+      "text/html": "<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>0</th>\n      <th>1</th>\n      <th>2</th>\n      <th>3</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>4</td>\n      <td>5</td>\n      <td>6</td>\n      <td>7</td>\n    </tr>\n  </tbody>\n</table>\n</div>"
+     },
+     "execution_count": 253,
+     "metadata": {},
+     "output_type": "execute_result"
+    }
+   ],
+   "source": [
+    "y = pd.DataFrame(np.arange(4, 8).reshape(1, 4))\n",
+    "y"
+   ],
+   "metadata": {
+    "collapsed": false,
+    "ExecuteTime": {
+     "end_time": "2024-07-14T11:32:35.864011Z",
+     "start_time": "2024-07-14T11:32:35.676433400Z"
+    }
+   },
+   "id": "49e35407d190f6be",
+   "execution_count": 253
+  },
+  {
+   "cell_type": "code",
+   "outputs": [
+    {
+     "data": {
+      "text/plain": "   0  1   2   3\n0  0  5  12  21",
+      "text/html": "<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>0</th>\n      <th>1</th>\n      <th>2</th>\n      <th>3</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>0</td>\n      <td>5</td>\n      <td>12</td>\n      <td>21</td>\n    </tr>\n  </tbody>\n</table>\n</div>"
+     },
+     "execution_count": 254,
+     "metadata": {},
+     "output_type": "execute_result"
+    }
+   ],
+   "source": [
+    "x * y"
+   ],
+   "metadata": {
+    "collapsed": false,
+    "ExecuteTime": {
+     "end_time": "2024-07-14T11:32:35.970465900Z",
+     "start_time": "2024-07-14T11:32:35.851009400Z"
+    }
+   },
+   "id": "4d0c97759202b278",
+   "execution_count": 254
+  },
+  {
+   "cell_type": "markdown",
+   "source": [
+    "#### 3.2.2矩阵化运算"
+   ],
+   "metadata": {
+    "collapsed": false
+   },
+   "id": "a6d2d0ee4c5b7b4b"
+  },
+  {
+   "cell_type": "code",
+   "outputs": [
+    {
+     "data": {
+      "text/plain": "    0   1   2   3   4   5   6   7   8   9   ...  20  21  22  23  24  25  26  \\\n0    6   3   7   4   6   9   2   6   7   4  ...   4   0   9   5   8   0   9   \n1    8   2   4   2   6   4   8   6   1   3  ...   2   0   3   1   7   3   1   \n2    3   5   1   9   1   9   3   7   6   8  ...   6   8   7   0   7   7   2   \n3    2   0   4   9   6   9   8   6   8   7  ...   0   2   4   2   0   4   9   \n4    9   9   2   6   0   3   3   4   6   6  ...   9   6   8   6   0   0   8   \n5    2   6   5   7   8   4   0   2   9   7  ...   2   0   4   0   7   0   0   \n6    6   4   0   0   2   1   4   9   5   6  ...   5   0   8   5   2   3   3   \n7    2   3   6   3   8   0   7   6   1   7  ...   3   0   1   0   4   4   6   \n8    2   2   3   7   5   7   0   7   3   0  ...   1   1   5   2   8   3   0   \n9    3   7   7   6   2   0   0   2   5   6  ...   4   2   3   2   0   0   4   \n10   4   7   0   4   2   0   3   4   6   0  ...   5   6   1   9   1   9   0   \n11   5   6   9   6   9   2   1   8   7   9  ...   6   5   2   8   9   5   9   \n12   3   9   5   5   4   0   7   4   4   6  ...   0   7   2   9   6   9   4   \n13   8   4   0   9   9   0   1   5   8   7  ...   5   8   4   0   3   4   9   \n14   3   0   4   6   9   9   5   4   3   1  ...   6   1   0   3   7   1   2   \n15   4   2   0   0   7   9   1   2   1   2  ...   6   3   9   4   1   7   3   \n16   3   9   4   8   7   2   0   2   3   1  ...   8   0   0   3   8   5   2   \n17   2   8   6   3   2   9   4   4   2   8  ...   6   9   4   2   6   1   8   \n18   5   6   7   9   8   1   9   1   4   4  ...   3   5   2   5   6   9   9   \n19   1   9   3   7   8   6   0   2   8   0  ...   4   3   2   2   3   8   1   \n20   4   5   5   2   6   8   9   7   5   7  ...   3   5   0   8   0   4   3   \n21   2   4   8   1   9   7   1   4   6   7  ...   0   1   8   2   0   4   6   \n22   4   5   2   4   6   4   4   4   9   9  ...   1   7   6   9   9   1   5   \n23   0   5   4   8   0   6   4   4   1   2  ...   8   5   0   7   6   9   2   \n24   9   7   0   9   0   3   7   4   1   5  ...   3   7   8   2   2   1   9   \n25   4   1   9   5   4   5   0   4   8   9  ...   9   3   0   7   0   2   3   \n26   6   7   1   9   7   2   6   2   6   1  ...   0   6   5   9   8   0   3   \n27   2   8   1   3   5   1   7   7   0   2  ...   8   0   4   5   4   5   5   \n28   6   8   6   2   2   7   4   3   7   5  ...   1   7   9   2   4   5   9   \n29   3   0   3   0   0   9   5   4   3   2  ...   1   3   0   4   8   0   8   \n\n    27  28  29  \n0    2   6   3  \n1    5   5   9  \n2    0   7   2  \n3    6   6   8  \n4    8   3   8  \n5    1   1   5  \n6    2   9   2  \n7    8   8   2  \n8    3   0   4  \n9    5   2   8  \n10   7   0   8  \n11   9   5   0  \n12   9   4   6  \n13   9   4   6  \n14   0   0   2  \n15   8   4   8  \n16   0   3   8  \n17   9   9   0  \n18   2   6   2  \n19   8   0   0  \n20   2   5   1  \n21   5   0   4  \n22   5   2   1  \n23   0   4   3  \n24   2   2   4  \n25   7   5   9  \n26   8   3   9  \n27   6   3   7  \n28   5   3   2  \n29   7   5   6  \n\n[30 rows x 30 columns]",
+      "text/html": "<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>0</th>\n      <th>1</th>\n      <th>2</th>\n      <th>3</th>\n      <th>4</th>\n      <th>5</th>\n      <th>6</th>\n      <th>7</th>\n      <th>8</th>\n      <th>9</th>\n      <th>...</th>\n      <th>20</th>\n      <th>21</th>\n      <th>22</th>\n      <th>23</th>\n      <th>24</th>\n      <th>25</th>\n      <th>26</th>\n      <th>27</th>\n      <th>28</th>\n      <th>29</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>6</td>\n      <td>3</td>\n      <td>7</td>\n      <td>4</td>\n      <td>6</td>\n      <td>9</td>\n      <td>2</td>\n      <td>6</td>\n      <td>7</td>\n      <td>4</td>\n      <td>...</td>\n      <td>4</td>\n      <td>0</td>\n      <td>9</td>\n      <td>5</td>\n      <td>8</td>\n      <td>0</td>\n      <td>9</td>\n      <td>2</td>\n      <td>6</td>\n      <td>3</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>8</td>\n      <td>2</td>\n      <td>4</td>\n      <td>2</td>\n      <td>6</td>\n      <td>4</td>\n      <td>8</td>\n      <td>6</td>\n      <td>1</td>\n      <td>3</td>\n      <td>...</td>\n      <td>2</td>\n      <td>0</td>\n      <td>3</td>\n      <td>1</td>\n      <td>7</td>\n      <td>3</td>\n      <td>1</td>\n      <td>5</td>\n      <td>5</td>\n      <td>9</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>3</td>\n      <td>5</td>\n      <td>1</td>\n      <td>9</td>\n      <td>1</td>\n      <td>9</td>\n      <td>3</td>\n      <td>7</td>\n      <td>6</td>\n      <td>8</td>\n      <td>...</td>\n      <td>6</td>\n      <td>8</td>\n      <td>7</td>\n      <td>0</td>\n      <td>7</td>\n      <td>7</td>\n      <td>2</td>\n      <td>0</td>\n      <td>7</td>\n      <td>2</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>2</td>\n      <td>0</td>\n      <td>4</td>\n      <td>9</td>\n      <td>6</td>\n      <td>9</td>\n      <td>8</td>\n      <td>6</td>\n      <td>8</td>\n      <td>7</td>\n      <td>...</td>\n      <td>0</td>\n      <td>2</td>\n      <td>4</td>\n      <td>2</td>\n      <td>0</td>\n      <td>4</td>\n      <td>9</td>\n      <td>6</td>\n      <td>6</td>\n      <td>8</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>9</td>\n      <td>9</td>\n      <td>2</td>\n      <td>6</td>\n      <td>0</td>\n      <td>3</td>\n      <td>3</td>\n      <td>4</td>\n      <td>6</td>\n      <td>6</td>\n      <td>...</td>\n      <td>9</td>\n      <td>6</td>\n      <td>8</td>\n      <td>6</td>\n      <td>0</td>\n      <td>0</td>\n      <td>8</td>\n      <td>8</td>\n      <td>3</td>\n      <td>8</td>\n    </tr>\n    <tr>\n      <th>5</th>\n      <td>2</td>\n      <td>6</td>\n      <td>5</td>\n      <td>7</td>\n      <td>8</td>\n      <td>4</td>\n      <td>0</td>\n      <td>2</td>\n      <td>9</td>\n      <td>7</td>\n      <td>...</td>\n      <td>2</td>\n      <td>0</td>\n      <td>4</td>\n      <td>0</td>\n      <td>7</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n      <td>1</td>\n      <td>5</td>\n    </tr>\n    <tr>\n      <th>6</th>\n      <td>6</td>\n      <td>4</td>\n      <td>0</td>\n      <td>0</td>\n      <td>2</td>\n      <td>1</td>\n      <td>4</td>\n      <td>9</td>\n      <td>5</td>\n      <td>6</td>\n      <td>...</td>\n      <td>5</td>\n      <td>0</td>\n      <td>8</td>\n      <td>5</td>\n      <td>2</td>\n      <td>3</td>\n      <td>3</td>\n      <td>2</td>\n      <td>9</td>\n      <td>2</td>\n    </tr>\n    <tr>\n      <th>7</th>\n      <td>2</td>\n      <td>3</td>\n      <td>6</td>\n      <td>3</td>\n      <td>8</td>\n      <td>0</td>\n      <td>7</td>\n      <td>6</td>\n      <td>1</td>\n      <td>7</td>\n      <td>...</td>\n      <td>3</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>4</td>\n      <td>4</td>\n      <td>6</td>\n      <td>8</td>\n      <td>8</td>\n      <td>2</td>\n    </tr>\n    <tr>\n      <th>8</th>\n      <td>2</td>\n      <td>2</td>\n      <td>3</td>\n      <td>7</td>\n      <td>5</td>\n      <td>7</td>\n      <td>0</td>\n      <td>7</td>\n      <td>3</td>\n      <td>0</td>\n      <td>...</td>\n      <td>1</td>\n      <td>1</td>\n      <td>5</td>\n      <td>2</td>\n      <td>8</td>\n      <td>3</td>\n      <td>0</td>\n      <td>3</td>\n      <td>0</td>\n      <td>4</td>\n    </tr>\n    <tr>\n      <th>9</th>\n      <td>3</td>\n      <td>7</td>\n      <td>7</td>\n      <td>6</td>\n      <td>2</td>\n      <td>0</td>\n      <td>0</td>\n      <td>2</td>\n      <td>5</td>\n      <td>6</td>\n      <td>...</td>\n      <td>4</td>\n      <td>2</td>\n      <td>3</td>\n      <td>2</td>\n      <td>0</td>\n      <td>0</td>\n      <td>4</td>\n      <td>5</td>\n      <td>2</td>\n      <td>8</td>\n    </tr>\n    <tr>\n      <th>10</th>\n      <td>4</td>\n      <td>7</td>\n      <td>0</td>\n      <td>4</td>\n      <td>2</td>\n      <td>0</td>\n      <td>3</td>\n      <td>4</td>\n      <td>6</td>\n      <td>0</td>\n      <td>...</td>\n      <td>5</td>\n      <td>6</td>\n      <td>1</td>\n      <td>9</td>\n      <td>1</td>\n      <td>9</td>\n      <td>0</td>\n      <td>7</td>\n      <td>0</td>\n      <td>8</td>\n    </tr>\n    <tr>\n      <th>11</th>\n      <td>5</td>\n      <td>6</td>\n      <td>9</td>\n      <td>6</td>\n      <td>9</td>\n      <td>2</td>\n      <td>1</td>\n      <td>8</td>\n      <td>7</td>\n      <td>9</td>\n      <td>...</td>\n      <td>6</td>\n      <td>5</td>\n      <td>2</td>\n      <td>8</td>\n      <td>9</td>\n      <td>5</td>\n      <td>9</td>\n      <td>9</td>\n      <td>5</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>12</th>\n      <td>3</td>\n      <td>9</td>\n      <td>5</td>\n      <td>5</td>\n      <td>4</td>\n      <td>0</td>\n      <td>7</td>\n      <td>4</td>\n      <td>4</td>\n      <td>6</td>\n      <td>...</td>\n      <td>0</td>\n      <td>7</td>\n      <td>2</td>\n      <td>9</td>\n      <td>6</td>\n      <td>9</td>\n      <td>4</td>\n      <td>9</td>\n      <td>4</td>\n      <td>6</td>\n    </tr>\n    <tr>\n      <th>13</th>\n      <td>8</td>\n      <td>4</td>\n      <td>0</td>\n      <td>9</td>\n      <td>9</td>\n      <td>0</td>\n      <td>1</td>\n      <td>5</td>\n      <td>8</td>\n      <td>7</td>\n      <td>...</td>\n      <td>5</td>\n      <td>8</td>\n      <td>4</td>\n      <td>0</td>\n      <td>3</td>\n      <td>4</td>\n      <td>9</td>\n      <td>9</td>\n      <td>4</td>\n      <td>6</td>\n    </tr>\n    <tr>\n      <th>14</th>\n      <td>3</td>\n      <td>0</td>\n      <td>4</td>\n      <td>6</td>\n      <td>9</td>\n      <td>9</td>\n      <td>5</td>\n      <td>4</td>\n      <td>3</td>\n      <td>1</td>\n      <td>...</td>\n      <td>6</td>\n      <td>1</td>\n      <td>0</td>\n      <td>3</td>\n      <td>7</td>\n      <td>1</td>\n      <td>2</td>\n      <td>0</td>\n      <td>0</td>\n      <td>2</td>\n    </tr>\n    <tr>\n      <th>15</th>\n      <td>4</td>\n      <td>2</td>\n      <td>0</td>\n      <td>0</td>\n      <td>7</td>\n      <td>9</td>\n      <td>1</td>\n      <td>2</td>\n      <td>1</td>\n      <td>2</td>\n      <td>...</td>\n      <td>6</td>\n      <td>3</td>\n      <td>9</td>\n      <td>4</td>\n      <td>1</td>\n      <td>7</td>\n      <td>3</td>\n      <td>8</td>\n      <td>4</td>\n      <td>8</td>\n    </tr>\n    <tr>\n      <th>16</th>\n      <td>3</td>\n      <td>9</td>\n      <td>4</td>\n      <td>8</td>\n      <td>7</td>\n      <td>2</td>\n      <td>0</td>\n      <td>2</td>\n      <td>3</td>\n      <td>1</td>\n      <td>...</td>\n      <td>8</td>\n      <td>0</td>\n      <td>0</td>\n      <td>3</td>\n      <td>8</td>\n      <td>5</td>\n      <td>2</td>\n      <td>0</td>\n      <td>3</td>\n      <td>8</td>\n    </tr>\n    <tr>\n      <th>17</th>\n      <td>2</td>\n      <td>8</td>\n      <td>6</td>\n      <td>3</td>\n      <td>2</td>\n      <td>9</td>\n      <td>4</td>\n      <td>4</td>\n      <td>2</td>\n      <td>8</td>\n      <td>...</td>\n      <td>6</td>\n      <td>9</td>\n      <td>4</td>\n      <td>2</td>\n      <td>6</td>\n      <td>1</td>\n      <td>8</td>\n      <td>9</td>\n      <td>9</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>18</th>\n      <td>5</td>\n      <td>6</td>\n      <td>7</td>\n      <td>9</td>\n      <td>8</td>\n      <td>1</td>\n      <td>9</td>\n      <td>1</td>\n      <td>4</td>\n      <td>4</td>\n      <td>...</td>\n      <td>3</td>\n      <td>5</td>\n      <td>2</td>\n      <td>5</td>\n      <td>6</td>\n      <td>9</td>\n      <td>9</td>\n      <td>2</td>\n      <td>6</td>\n      <td>2</td>\n    </tr>\n    <tr>\n      <th>19</th>\n      <td>1</td>\n      <td>9</td>\n      <td>3</td>\n      <td>7</td>\n      <td>8</td>\n      <td>6</td>\n      <td>0</td>\n      <td>2</td>\n      <td>8</td>\n      <td>0</td>\n      <td>...</td>\n      <td>4</td>\n      <td>3</td>\n      <td>2</td>\n      <td>2</td>\n      <td>3</td>\n      <td>8</td>\n      <td>1</td>\n      <td>8</td>\n      <td>0</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>20</th>\n      <td>4</td>\n      <td>5</td>\n      <td>5</td>\n      <td>2</td>\n      <td>6</td>\n      <td>8</td>\n      <td>9</td>\n      <td>7</td>\n      <td>5</td>\n      <td>7</td>\n      <td>...</td>\n      <td>3</td>\n      <td>5</td>\n      <td>0</td>\n      <td>8</td>\n      <td>0</td>\n      <td>4</td>\n      <td>3</td>\n      <td>2</td>\n      <td>5</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>21</th>\n      <td>2</td>\n      <td>4</td>\n      <td>8</td>\n      <td>1</td>\n      <td>9</td>\n      <td>7</td>\n      <td>1</td>\n      <td>4</td>\n      <td>6</td>\n      <td>7</td>\n      <td>...</td>\n      <td>0</td>\n      <td>1</td>\n      <td>8</td>\n      <td>2</td>\n      <td>0</td>\n      <td>4</td>\n      <td>6</td>\n      <td>5</td>\n      <td>0</td>\n      <td>4</td>\n    </tr>\n    <tr>\n      <th>22</th>\n      <td>4</td>\n      <td>5</td>\n      <td>2</td>\n      <td>4</td>\n      <td>6</td>\n      <td>4</td>\n      <td>4</td>\n      <td>4</td>\n      <td>9</td>\n      <td>9</td>\n      <td>...</td>\n      <td>1</td>\n      <td>7</td>\n      <td>6</td>\n      <td>9</td>\n      <td>9</td>\n      <td>1</td>\n      <td>5</td>\n      <td>5</td>\n      <td>2</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>23</th>\n      <td>0</td>\n      <td>5</td>\n      <td>4</td>\n      <td>8</td>\n      <td>0</td>\n      <td>6</td>\n      <td>4</td>\n      <td>4</td>\n      <td>1</td>\n      <td>2</td>\n      <td>...</td>\n      <td>8</td>\n      <td>5</td>\n      <td>0</td>\n      <td>7</td>\n      <td>6</td>\n      <td>9</td>\n      <td>2</td>\n      <td>0</td>\n      <td>4</td>\n      <td>3</td>\n    </tr>\n    <tr>\n      <th>24</th>\n      <td>9</td>\n      <td>7</td>\n      <td>0</td>\n      <td>9</td>\n      <td>0</td>\n      <td>3</td>\n      <td>7</td>\n      <td>4</td>\n      <td>1</td>\n      <td>5</td>\n      <td>...</td>\n      <td>3</td>\n      <td>7</td>\n      <td>8</td>\n      <td>2</td>\n      <td>2</td>\n      <td>1</td>\n      <td>9</td>\n      <td>2</td>\n      <td>2</td>\n      <td>4</td>\n    </tr>\n    <tr>\n      <th>25</th>\n      <td>4</td>\n      <td>1</td>\n      <td>9</td>\n      <td>5</td>\n      <td>4</td>\n      <td>5</td>\n      <td>0</td>\n      <td>4</td>\n      <td>8</td>\n      <td>9</td>\n      <td>...</td>\n      <td>9</td>\n      <td>3</td>\n      <td>0</td>\n      <td>7</td>\n      <td>0</td>\n      <td>2</td>\n      <td>3</td>\n      <td>7</td>\n      <td>5</td>\n      <td>9</td>\n    </tr>\n    <tr>\n      <th>26</th>\n      <td>6</td>\n      <td>7</td>\n      <td>1</td>\n      <td>9</td>\n      <td>7</td>\n      <td>2</td>\n      <td>6</td>\n      <td>2</td>\n      <td>6</td>\n      <td>1</td>\n      <td>...</td>\n      <td>0</td>\n      <td>6</td>\n      <td>5</td>\n      <td>9</td>\n      <td>8</td>\n      <td>0</td>\n      <td>3</td>\n      <td>8</td>\n      <td>3</td>\n      <td>9</td>\n    </tr>\n    <tr>\n      <th>27</th>\n      <td>2</td>\n      <td>8</td>\n      <td>1</td>\n      <td>3</td>\n      <td>5</td>\n      <td>1</td>\n      <td>7</td>\n      <td>7</td>\n      <td>0</td>\n      <td>2</td>\n      <td>...</td>\n      <td>8</td>\n      <td>0</td>\n      <td>4</td>\n      <td>5</td>\n      <td>4</td>\n      <td>5</td>\n      <td>5</td>\n      <td>6</td>\n      <td>3</td>\n      <td>7</td>\n    </tr>\n    <tr>\n      <th>28</th>\n      <td>6</td>\n      <td>8</td>\n      <td>6</td>\n      <td>2</td>\n      <td>2</td>\n      <td>7</td>\n      <td>4</td>\n      <td>3</td>\n      <td>7</td>\n      <td>5</td>\n      <td>...</td>\n      <td>1</td>\n      <td>7</td>\n      <td>9</td>\n      <td>2</td>\n      <td>4</td>\n      <td>5</td>\n      <td>9</td>\n      <td>5</td>\n      <td>3</td>\n      <td>2</td>\n    </tr>\n    <tr>\n      <th>29</th>\n      <td>3</td>\n      <td>0</td>\n      <td>3</td>\n      <td>0</td>\n      <td>0</td>\n      <td>9</td>\n      <td>5</td>\n      <td>4</td>\n      <td>3</td>\n      <td>2</td>\n      <td>...</td>\n      <td>1</td>\n      <td>3</td>\n      <td>0</td>\n      <td>4</td>\n      <td>8</td>\n      <td>0</td>\n      <td>8</td>\n      <td>7</td>\n      <td>5</td>\n      <td>6</td>\n    </tr>\n  </tbody>\n</table>\n<p>30 rows × 30 columns</p>\n</div>"
+     },
+     "execution_count": 255,
+     "metadata": {},
+     "output_type": "execute_result"
+    }
+   ],
+   "source": [
+    "np.random.seed(42)\n",
+    "x = pd.DataFrame(np.random.randint(10, size=(30, 30)))\n",
+    "x"
+   ],
+   "metadata": {
+    "collapsed": false,
+    "ExecuteTime": {
+     "end_time": "2024-07-14T11:32:36.128518100Z",
+     "start_time": "2024-07-14T11:32:35.951462600Z"
+    }
+   },
+   "id": "3e3b264bde20973a",
+   "execution_count": 255
+  },
+  {
+   "cell_type": "code",
+   "outputs": [
+    {
+     "data": {
+      "text/plain": "    0   1   2   3   4   5   6   7   8   9   ...  20  21  22  23  24  25  26  \\\n0    6   8   3   2   9   2   6   2   2   3  ...   4   2   4   0   9   4   6   \n1    3   2   5   0   9   6   4   3   2   7  ...   5   4   5   5   7   1   7   \n2    7   4   1   4   2   5   0   6   3   7  ...   5   8   2   4   0   9   1   \n3    4   2   9   9   6   7   0   3   7   6  ...   2   1   4   8   9   5   9   \n4    6   6   1   6   0   8   2   8   5   2  ...   6   9   6   0   0   4   7   \n5    9   4   9   9   3   4   1   0   7   0  ...   8   7   4   6   3   5   2   \n6    2   8   3   8   3   0   4   7   0   0  ...   9   1   4   4   7   0   6   \n7    6   6   7   6   4   2   9   6   7   2  ...   7   4   4   4   4   4   2   \n8    7   1   6   8   6   9   5   1   3   5  ...   5   6   9   1   1   8   6   \n9    4   3   8   7   6   7   6   7   0   6  ...   7   7   9   2   5   9   1   \n10   3   8   7   1   3   5   3   0   7   5  ...   4   0   2   6   4   1   9   \n11   7   1   4   0   6   7   6   8   3   5  ...   7   5   0   5   1   0   5   \n12   7   9   1   6   2   8   7   8   5   5  ...   9   0   4   1   2   9   2   \n13   2   8   4   6   5   3   0   1   7   2  ...   3   1   8   5   8   8   2   \n14   5   9   7   7   1   0   5   6   3   5  ...   9   0   0   1   6   9   8   \n15   4   4   9   4   9   0   7   9   2   7  ...   7   4   2   1   6   8   6   \n16   1   1   8   2   8   9   4   2   8   1  ...   9   9   3   1   5   8   4   \n17   7   3   8   7   4   3   3   6   2   4  ...   1   8   0   2   7   5   9   \n18   5   6   0   5   5   6   1   9   8   0  ...   4   5   0   1   3   7   6   \n19   1   7   8   2   3   1   5   8   1   0  ...   8   0   7   3   7   0   8   \n20   4   2   6   0   9   2   5   3   1   4  ...   3   0   1   8   3   9   0   \n21   0   0   8   2   6   0   0   0   1   2  ...   5   1   7   5   7   3   6   \n22   9   3   7   4   8   4   8   1   5   3  ...   0   8   6   0   8   0   5   \n23   5   1   0   2   6   0   5   0   2   2  ...   8   2   9   7   2   7   9   \n24   8   7   7   0   0   7   2   4   8   0  ...   0   0   9   6   2   0   8   \n25   0   3   7   4   0   0   3   4   3   0  ...   4   4   1   9   1   2   0   \n26   9   1   2   9   8   0   3   6   0   4  ...   3   6   5   2   9   3   3   \n27   2   5   0   6   8   1   2   8   3   5  ...   2   5   5   0   2   7   8   \n28   6   5   7   6   3   1   9   8   0   2  ...   5   0   2   4   2   5   3   \n29   3   9   2   8   8   5   2   2   4   8  ...   1   4   1   3   4   9   9   \n\n    27  28  29  \n0    2   6   3  \n1    8   8   0  \n2    1   6   3  \n3    3   2   0  \n4    5   2   0  \n5    1   7   9  \n6    7   4   5  \n7    7   3   4  \n8    0   7   3  \n9    2   5   2  \n10   9   1   0  \n11   8   3   5  \n12   4   3   1  \n13   5   5   7  \n14   3   5   9  \n15   9   0   4  \n16   1   7   6  \n17   7   5   9  \n18   5   2   1  \n19   4   8   7  \n20   8   1   1  \n21   0   7   3  \n22   4   9   0  \n23   5   2   4  \n24   4   4   8  \n25   5   5   0  \n26   5   9   8  \n27   6   5   7  \n28   3   3   5  \n29   7   2   6  \n\n[30 rows x 30 columns]",
+      "text/html": "<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>0</th>\n      <th>1</th>\n      <th>2</th>\n      <th>3</th>\n      <th>4</th>\n      <th>5</th>\n      <th>6</th>\n      <th>7</th>\n      <th>8</th>\n      <th>9</th>\n      <th>...</th>\n      <th>20</th>\n      <th>21</th>\n      <th>22</th>\n      <th>23</th>\n      <th>24</th>\n      <th>25</th>\n      <th>26</th>\n      <th>27</th>\n      <th>28</th>\n      <th>29</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>6</td>\n      <td>8</td>\n      <td>3</td>\n      <td>2</td>\n      <td>9</td>\n      <td>2</td>\n      <td>6</td>\n      <td>2</td>\n      <td>2</td>\n      <td>3</td>\n      <td>...</td>\n      <td>4</td>\n      <td>2</td>\n      <td>4</td>\n      <td>0</td>\n      <td>9</td>\n      <td>4</td>\n      <td>6</td>\n      <td>2</td>\n      <td>6</td>\n      <td>3</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>3</td>\n      <td>2</td>\n      <td>5</td>\n      <td>0</td>\n      <td>9</td>\n      <td>6</td>\n      <td>4</td>\n      <td>3</td>\n      <td>2</td>\n      <td>7</td>\n      <td>...</td>\n      <td>5</td>\n      <td>4</td>\n      <td>5</td>\n      <td>5</td>\n      <td>7</td>\n      <td>1</td>\n      <td>7</td>\n      <td>8</td>\n      <td>8</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>7</td>\n      <td>4</td>\n      <td>1</td>\n      <td>4</td>\n      <td>2</td>\n      <td>5</td>\n      <td>0</td>\n      <td>6</td>\n      <td>3</td>\n      <td>7</td>\n      <td>...</td>\n      <td>5</td>\n      <td>8</td>\n      <td>2</td>\n      <td>4</td>\n      <td>0</td>\n      <td>9</td>\n      <td>1</td>\n      <td>1</td>\n      <td>6</td>\n      <td>3</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>4</td>\n      <td>2</td>\n      <td>9</td>\n      <td>9</td>\n      <td>6</td>\n      <td>7</td>\n      <td>0</td>\n      <td>3</td>\n      <td>7</td>\n      <td>6</td>\n      <td>...</td>\n      <td>2</td>\n      <td>1</td>\n      <td>4</td>\n      <td>8</td>\n      <td>9</td>\n      <td>5</td>\n      <td>9</td>\n      <td>3</td>\n      <td>2</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>6</td>\n      <td>6</td>\n      <td>1</td>\n      <td>6</td>\n      <td>0</td>\n      <td>8</td>\n      <td>2</td>\n      <td>8</td>\n      <td>5</td>\n      <td>2</td>\n      <td>...</td>\n      <td>6</td>\n      <td>9</td>\n      <td>6</td>\n      <td>0</td>\n      <td>0</td>\n      <td>4</td>\n      <td>7</td>\n      <td>5</td>\n      <td>2</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>5</th>\n      <td>9</td>\n      <td>4</td>\n      <td>9</td>\n      <td>9</td>\n      <td>3</td>\n      <td>4</td>\n      <td>1</td>\n      <td>0</td>\n      <td>7</td>\n      <td>0</td>\n      <td>...</td>\n      <td>8</td>\n      <td>7</td>\n      <td>4</td>\n      <td>6</td>\n      <td>3</td>\n      <td>5</td>\n      <td>2</td>\n      <td>1</td>\n      <td>7</td>\n      <td>9</td>\n    </tr>\n    <tr>\n      <th>6</th>\n      <td>2</td>\n      <td>8</td>\n      <td>3</td>\n      <td>8</td>\n      <td>3</td>\n      <td>0</td>\n      <td>4</td>\n      <td>7</td>\n      <td>0</td>\n      <td>0</td>\n      <td>...</td>\n      <td>9</td>\n      <td>1</td>\n      <td>4</td>\n      <td>4</td>\n      <td>7</td>\n      <td>0</td>\n      <td>6</td>\n      <td>7</td>\n      <td>4</td>\n      <td>5</td>\n    </tr>\n    <tr>\n      <th>7</th>\n      <td>6</td>\n      <td>6</td>\n      <td>7</td>\n      <td>6</td>\n      <td>4</td>\n      <td>2</td>\n      <td>9</td>\n      <td>6</td>\n      <td>7</td>\n      <td>2</td>\n      <td>...</td>\n      <td>7</td>\n      <td>4</td>\n      <td>4</td>\n      <td>4</td>\n      <td>4</td>\n      <td>4</td>\n      <td>2</td>\n      <td>7</td>\n      <td>3</td>\n      <td>4</td>\n    </tr>\n    <tr>\n      <th>8</th>\n      <td>7</td>\n      <td>1</td>\n      <td>6</td>\n      <td>8</td>\n      <td>6</td>\n      <td>9</td>\n      <td>5</td>\n      <td>1</td>\n      <td>3</td>\n      <td>5</td>\n      <td>...</td>\n      <td>5</td>\n      <td>6</td>\n      <td>9</td>\n      <td>1</td>\n      <td>1</td>\n      <td>8</td>\n      <td>6</td>\n      <td>0</td>\n      <td>7</td>\n      <td>3</td>\n    </tr>\n    <tr>\n      <th>9</th>\n      <td>4</td>\n      <td>3</td>\n      <td>8</td>\n      <td>7</td>\n      <td>6</td>\n      <td>7</td>\n      <td>6</td>\n      <td>7</td>\n      <td>0</td>\n      <td>6</td>\n      <td>...</td>\n      <td>7</td>\n      <td>7</td>\n      <td>9</td>\n      <td>2</td>\n      <td>5</td>\n      <td>9</td>\n      <td>1</td>\n      <td>2</td>\n      <td>5</td>\n      <td>2</td>\n    </tr>\n    <tr>\n      <th>10</th>\n      <td>3</td>\n      <td>8</td>\n      <td>7</td>\n      <td>1</td>\n      <td>3</td>\n      <td>5</td>\n      <td>3</td>\n      <td>0</td>\n      <td>7</td>\n      <td>5</td>\n      <td>...</td>\n      <td>4</td>\n      <td>0</td>\n      <td>2</td>\n      <td>6</td>\n      <td>4</td>\n      <td>1</td>\n      <td>9</td>\n      <td>9</td>\n      <td>1</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>11</th>\n      <td>7</td>\n      <td>1</td>\n      <td>4</td>\n      <td>0</td>\n      <td>6</td>\n      <td>7</td>\n      <td>6</td>\n      <td>8</td>\n      <td>3</td>\n      <td>5</td>\n      <td>...</td>\n      <td>7</td>\n      <td>5</td>\n      <td>0</td>\n      <td>5</td>\n      <td>1</td>\n      <td>0</td>\n      <td>5</td>\n      <td>8</td>\n      <td>3</td>\n      <td>5</td>\n    </tr>\n    <tr>\n      <th>12</th>\n      <td>7</td>\n      <td>9</td>\n      <td>1</td>\n      <td>6</td>\n      <td>2</td>\n      <td>8</td>\n      <td>7</td>\n      <td>8</td>\n      <td>5</td>\n      <td>5</td>\n      <td>...</td>\n      <td>9</td>\n      <td>0</td>\n      <td>4</td>\n      <td>1</td>\n      <td>2</td>\n      <td>9</td>\n      <td>2</td>\n      <td>4</td>\n      <td>3</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>13</th>\n      <td>2</td>\n      <td>8</td>\n      <td>4</td>\n      <td>6</td>\n      <td>5</td>\n      <td>3</td>\n      <td>0</td>\n      <td>1</td>\n      <td>7</td>\n      <td>2</td>\n      <td>...</td>\n      <td>3</td>\n      <td>1</td>\n      <td>8</td>\n      <td>5</td>\n      <td>8</td>\n      <td>8</td>\n      <td>2</td>\n      <td>5</td>\n      <td>5</td>\n      <td>7</td>\n    </tr>\n    <tr>\n      <th>14</th>\n      <td>5</td>\n      <td>9</td>\n      <td>7</td>\n      <td>7</td>\n      <td>1</td>\n      <td>0</td>\n      <td>5</td>\n      <td>6</td>\n      <td>3</td>\n      <td>5</td>\n      <td>...</td>\n      <td>9</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n      <td>6</td>\n      <td>9</td>\n      <td>8</td>\n      <td>3</td>\n      <td>5</td>\n      <td>9</td>\n    </tr>\n    <tr>\n      <th>15</th>\n      <td>4</td>\n      <td>4</td>\n      <td>9</td>\n      <td>4</td>\n      <td>9</td>\n      <td>0</td>\n      <td>7</td>\n      <td>9</td>\n      <td>2</td>\n      <td>7</td>\n      <td>...</td>\n      <td>7</td>\n      <td>4</td>\n      <td>2</td>\n      <td>1</td>\n      <td>6</td>\n      <td>8</td>\n      <td>6</td>\n      <td>9</td>\n      <td>0</td>\n      <td>4</td>\n    </tr>\n    <tr>\n      <th>16</th>\n      <td>1</td>\n      <td>1</td>\n      <td>8</td>\n      <td>2</td>\n      <td>8</td>\n      <td>9</td>\n      <td>4</td>\n      <td>2</td>\n      <td>8</td>\n      <td>1</td>\n      <td>...</td>\n      <td>9</td>\n      <td>9</td>\n      <td>3</td>\n      <td>1</td>\n      <td>5</td>\n      <td>8</td>\n      <td>4</td>\n      <td>1</td>\n      <td>7</td>\n      <td>6</td>\n    </tr>\n    <tr>\n      <th>17</th>\n      <td>7</td>\n      <td>3</td>\n      <td>8</td>\n      <td>7</td>\n      <td>4</td>\n      <td>3</td>\n      <td>3</td>\n      <td>6</td>\n      <td>2</td>\n      <td>4</td>\n      <td>...</td>\n      <td>1</td>\n      <td>8</td>\n      <td>0</td>\n      <td>2</td>\n      <td>7</td>\n      <td>5</td>\n      <td>9</td>\n      <td>7</td>\n      <td>5</td>\n      <td>9</td>\n    </tr>\n    <tr>\n      <th>18</th>\n      <td>5</td>\n      <td>6</td>\n      <td>0</td>\n      <td>5</td>\n      <td>5</td>\n      <td>6</td>\n      <td>1</td>\n      <td>9</td>\n      <td>8</td>\n      <td>0</td>\n      <td>...</td>\n      <td>4</td>\n      <td>5</td>\n      <td>0</td>\n      <td>1</td>\n      <td>3</td>\n      <td>7</td>\n      <td>6</td>\n      <td>5</td>\n      <td>2</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>19</th>\n      <td>1</td>\n      <td>7</td>\n      <td>8</td>\n      <td>2</td>\n      <td>3</td>\n      <td>1</td>\n      <td>5</td>\n      <td>8</td>\n      <td>1</td>\n      <td>0</td>\n      <td>...</td>\n      <td>8</td>\n      <td>0</td>\n      <td>7</td>\n      <td>3</td>\n      <td>7</td>\n      <td>0</td>\n      <td>8</td>\n      <td>4</td>\n      <td>8</td>\n      <td>7</td>\n    </tr>\n    <tr>\n      <th>20</th>\n      <td>4</td>\n      <td>2</td>\n      <td>6</td>\n      <td>0</td>\n      <td>9</td>\n      <td>2</td>\n      <td>5</td>\n      <td>3</td>\n      <td>1</td>\n      <td>4</td>\n      <td>...</td>\n      <td>3</td>\n      <td>0</td>\n      <td>1</td>\n      <td>8</td>\n      <td>3</td>\n      <td>9</td>\n      <td>0</td>\n      <td>8</td>\n      <td>1</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>21</th>\n      <td>0</td>\n      <td>0</td>\n      <td>8</td>\n      <td>2</td>\n      <td>6</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n      <td>2</td>\n      <td>...</td>\n      <td>5</td>\n      <td>1</td>\n      <td>7</td>\n      <td>5</td>\n      <td>7</td>\n      <td>3</td>\n      <td>6</td>\n      <td>0</td>\n      <td>7</td>\n      <td>3</td>\n    </tr>\n    <tr>\n      <th>22</th>\n      <td>9</td>\n      <td>3</td>\n      <td>7</td>\n      <td>4</td>\n      <td>8</td>\n      <td>4</td>\n      <td>8</td>\n      <td>1</td>\n      <td>5</td>\n      <td>3</td>\n      <td>...</td>\n      <td>0</td>\n      <td>8</td>\n      <td>6</td>\n      <td>0</td>\n      <td>8</td>\n      <td>0</td>\n      <td>5</td>\n      <td>4</td>\n      <td>9</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>23</th>\n      <td>5</td>\n      <td>1</td>\n      <td>0</td>\n      <td>2</td>\n      <td>6</td>\n      <td>0</td>\n      <td>5</td>\n      <td>0</td>\n      <td>2</td>\n      <td>2</td>\n      <td>...</td>\n      <td>8</td>\n      <td>2</td>\n      <td>9</td>\n      <td>7</td>\n      <td>2</td>\n      <td>7</td>\n      <td>9</td>\n      <td>5</td>\n      <td>2</td>\n      <td>4</td>\n    </tr>\n    <tr>\n      <th>24</th>\n      <td>8</td>\n      <td>7</td>\n      <td>7</td>\n      <td>0</td>\n      <td>0</td>\n      <td>7</td>\n      <td>2</td>\n      <td>4</td>\n      <td>8</td>\n      <td>0</td>\n      <td>...</td>\n      <td>0</td>\n      <td>0</td>\n      <td>9</td>\n      <td>6</td>\n      <td>2</td>\n      <td>0</td>\n      <td>8</td>\n      <td>4</td>\n      <td>4</td>\n      <td>8</td>\n    </tr>\n    <tr>\n      <th>25</th>\n      <td>0</td>\n      <td>3</td>\n      <td>7</td>\n      <td>4</td>\n      <td>0</td>\n      <td>0</td>\n      <td>3</td>\n      <td>4</td>\n      <td>3</td>\n      <td>0</td>\n      <td>...</td>\n      <td>4</td>\n      <td>4</td>\n      <td>1</td>\n      <td>9</td>\n      <td>1</td>\n      <td>2</td>\n      <td>0</td>\n      <td>5</td>\n      <td>5</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>26</th>\n      <td>9</td>\n      <td>1</td>\n      <td>2</td>\n      <td>9</td>\n      <td>8</td>\n      <td>0</td>\n      <td>3</td>\n      <td>6</td>\n      <td>0</td>\n      <td>4</td>\n      <td>...</td>\n      <td>3</td>\n      <td>6</td>\n      <td>5</td>\n      <td>2</td>\n      <td>9</td>\n      <td>3</td>\n      <td>3</td>\n      <td>5</td>\n      <td>9</td>\n      <td>8</td>\n    </tr>\n    <tr>\n      <th>27</th>\n      <td>2</td>\n      <td>5</td>\n      <td>0</td>\n      <td>6</td>\n      <td>8</td>\n      <td>1</td>\n      <td>2</td>\n      <td>8</td>\n      <td>3</td>\n      <td>5</td>\n      <td>...</td>\n      <td>2</td>\n      <td>5</td>\n      <td>5</td>\n      <td>0</td>\n      <td>2</td>\n      <td>7</td>\n      <td>8</td>\n      <td>6</td>\n      <td>5</td>\n      <td>7</td>\n    </tr>\n    <tr>\n      <th>28</th>\n      <td>6</td>\n      <td>5</td>\n      <td>7</td>\n      <td>6</td>\n      <td>3</td>\n      <td>1</td>\n      <td>9</td>\n      <td>8</td>\n      <td>0</td>\n      <td>2</td>\n      <td>...</td>\n      <td>5</td>\n      <td>0</td>\n      <td>2</td>\n      <td>4</td>\n      <td>2</td>\n      <td>5</td>\n      <td>3</td>\n      <td>3</td>\n      <td>3</td>\n      <td>5</td>\n    </tr>\n    <tr>\n      <th>29</th>\n      <td>3</td>\n      <td>9</td>\n      <td>2</td>\n      <td>8</td>\n      <td>8</td>\n      <td>5</td>\n      <td>2</td>\n      <td>2</td>\n      <td>4</td>\n      <td>8</td>\n      <td>...</td>\n      <td>1</td>\n      <td>4</td>\n      <td>1</td>\n      <td>3</td>\n      <td>4</td>\n      <td>9</td>\n      <td>9</td>\n      <td>7</td>\n      <td>2</td>\n      <td>6</td>\n    </tr>\n  </tbody>\n</table>\n<p>30 rows × 30 columns</p>\n</div>"
+     },
+     "execution_count": 256,
+     "metadata": {},
+     "output_type": "execute_result"
+    }
+   ],
+   "source": [
+    "z = x.T\n",
+    "z"
+   ],
+   "metadata": {
+    "collapsed": false,
+    "ExecuteTime": {
+     "end_time": "2024-07-14T11:32:36.292784500Z",
+     "start_time": "2024-07-14T11:32:36.118518200Z"
+    }
+   },
+   "id": "75fd06c9511a1253",
+   "execution_count": 256
+  },
+  {
+   "cell_type": "code",
+   "outputs": [
+    {
+     "data": {
+      "text/plain": "    0   1   2   3   4   5   6   7   8   9   ...  20  21  22  23  24  25  26  \\\n0    5   8   9   5   0   0   1   7   6   9  ...   1   7   0   6   9   9   7   \n1    0   1   8   8   3   9   8   7   3   6  ...   9   2   0   4   9   2   7   \n2    6   9   3   7   7   4   5   9   3   6  ...   7   7   1   1   3   0   8   \n3    6   2   5   7   8   4   4   7   7   4  ...   0   1   9   8   2   3   1   \n4    6   0   9   2   6   6   2   7   7   0  ...   1   5   4   0   7   8   9   \n5    9   3   9   1   4   4   6   8   8   9  ...   1   8   7   0   3   4   2   \n6    1   2   4   3   0   6   0   7   2   8  ...   4   3   3   6   7   3   5   \n7    4   0   3   3   8   3   5   6   7   5  ...   1   7   3   1   6   6   9   \n8    0   0   2   9   6   0   6   7   0   3  ...   6   7   9   5   4   9   5   \n9    6   8   7   7   7   2   6   0   5   2  ...   7   0   6   2   4   3   6   \n10   0   6   4   7   6   2   9   5   9   9  ...   4   9   3   9   1   2   5   \n11   2   3   9   9   4   4   8   2   1   6  ...   0   5   9   8   6   6   0   \n12   0   1   6   0   6   1   6   4   2   5  ...   8   8   0   7   2   0   7   \n13   5   1   5   9   6   4   9   8   7   5  ...   2   4   3   2   0   0   4   \n14   0   3   8   5   3   1   4   7   3   2  ...   8   5   5   7   5   9   1   \n15   3   3   6   1   3   0   5   0   5   2  ...   7   1   7   7   3   8   3   \n16   0   6   5   9   6   4   6   6   2   2  ...   3   6   8   6   5   1   3   \n17   6   7   2   8   0   1   8   6   0   0  ...   5   6   2   5   4   3   0   \n18   9   4   4   0   9   8   7   7   6   1  ...   7   9   9   7   1   1   4   \n19   4   1   1   5   1   2   6   2   3   3  ...   0   0   0   9   8   5   9   \n20   9   8   6   3   9   9   0   8   1   6  ...   2   9   0   1   3   9   4   \n21   2   8   6   4   9   0   5   5   6   1  ...   6   7   5   6   8   7   4   \n22   0   3   5   9   0   3   6   5   1   1  ...   6   2   5   3   9   3   9   \n23   7   7   0   8   6   1   2   0   4   4  ...   1   9   6   0   2   8   3   \n24   6   0   4   2   3   1   0   5   7   0  ...   1   1   2   7   5   2   9   \n25   5   0   2   1   4   9   4   6   9   3  ...   5   5   3   5   9   2   7   \n26   9   8   1   8   1   6   2   6   1   8  ...   2   5   1   2   5   3   3   \n27   1   8   6   4   6   9   5   4   7   2  ...   9   3   1   5   1   1   7   \n28   0   7   7   4   3   2   7   8   5   2  ...   0   2   8   3   7   3   9   \n29   8   0   2   6   8   3   6   4   9   7  ...   6   7   8   5   7   2   5   \n\n    27  28  29  \n0    6   9   1  \n1    7   9   8  \n2    6   4   5  \n3    2   7   2  \n4    5   7   0  \n5    0   3   5  \n6    3   2   4  \n7    6   9   6  \n8    2   5   6  \n9    7   6   3  \n10   4   0   8  \n11   4   7   3  \n12   1   1   9  \n13   2   5   0  \n14   3   9   3  \n15   0   6   3  \n16   2   6   3  \n17   6   2   1  \n18   6   5   6  \n19   3   4   0  \n20   8   8   8  \n21   2   4   0  \n22   5   1   9  \n23   7   2   5  \n24   4   7   3  \n25   4   1   6  \n26   6   1   8  \n27   1   2   6  \n28   2   3   8  \n29   3   4   5  \n\n[30 rows x 30 columns]",
+      "text/html": "<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>0</th>\n      <th>1</th>\n      <th>2</th>\n      <th>3</th>\n      <th>4</th>\n      <th>5</th>\n      <th>6</th>\n      <th>7</th>\n      <th>8</th>\n      <th>9</th>\n      <th>...</th>\n      <th>20</th>\n      <th>21</th>\n      <th>22</th>\n      <th>23</th>\n      <th>24</th>\n      <th>25</th>\n      <th>26</th>\n      <th>27</th>\n      <th>28</th>\n      <th>29</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>5</td>\n      <td>8</td>\n      <td>9</td>\n      <td>5</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n      <td>7</td>\n      <td>6</td>\n      <td>9</td>\n      <td>...</td>\n      <td>1</td>\n      <td>7</td>\n      <td>0</td>\n      <td>6</td>\n      <td>9</td>\n      <td>9</td>\n      <td>7</td>\n      <td>6</td>\n      <td>9</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>0</td>\n      <td>1</td>\n      <td>8</td>\n      <td>8</td>\n      <td>3</td>\n      <td>9</td>\n      <td>8</td>\n      <td>7</td>\n      <td>3</td>\n      <td>6</td>\n      <td>...</td>\n      <td>9</td>\n      <td>2</td>\n      <td>0</td>\n      <td>4</td>\n      <td>9</td>\n      <td>2</td>\n      <td>7</td>\n      <td>7</td>\n      <td>9</td>\n      <td>8</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>6</td>\n      <td>9</td>\n      <td>3</td>\n      <td>7</td>\n      <td>7</td>\n      <td>4</td>\n      <td>5</td>\n      <td>9</td>\n      <td>3</td>\n      <td>6</td>\n      <td>...</td>\n      <td>7</td>\n      <td>7</td>\n      <td>1</td>\n      <td>1</td>\n      <td>3</td>\n      <td>0</td>\n      <td>8</td>\n      <td>6</td>\n      <td>4</td>\n      <td>5</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>6</td>\n      <td>2</td>\n      <td>5</td>\n      <td>7</td>\n      <td>8</td>\n      <td>4</td>\n      <td>4</td>\n      <td>7</td>\n      <td>7</td>\n      <td>4</td>\n      <td>...</td>\n      <td>0</td>\n      <td>1</td>\n      <td>9</td>\n      <td>8</td>\n      <td>2</td>\n      <td>3</td>\n      <td>1</td>\n      <td>2</td>\n      <td>7</td>\n      <td>2</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>6</td>\n      <td>0</td>\n      <td>9</td>\n      <td>2</td>\n      <td>6</td>\n      <td>6</td>\n      <td>2</td>\n      <td>7</td>\n      <td>7</td>\n      <td>0</td>\n      <td>...</td>\n      <td>1</td>\n      <td>5</td>\n      <td>4</td>\n      <td>0</td>\n      <td>7</td>\n      <td>8</td>\n      <td>9</td>\n      <td>5</td>\n      <td>7</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>5</th>\n      <td>9</td>\n      <td>3</td>\n      <td>9</td>\n      <td>1</td>\n      <td>4</td>\n      <td>4</td>\n      <td>6</td>\n      <td>8</td>\n      <td>8</td>\n      <td>9</td>\n      <td>...</td>\n      <td>1</td>\n      <td>8</td>\n      <td>7</td>\n      <td>0</td>\n      <td>3</td>\n      <td>4</td>\n      <td>2</td>\n      <td>0</td>\n      <td>3</td>\n      <td>5</td>\n    </tr>\n    <tr>\n      <th>6</th>\n      <td>1</td>\n      <td>2</td>\n      <td>4</td>\n      <td>3</td>\n      <td>0</td>\n      <td>6</td>\n      <td>0</td>\n      <td>7</td>\n      <td>2</td>\n      <td>8</td>\n      <td>...</td>\n      <td>4</td>\n      <td>3</td>\n      <td>3</td>\n      <td>6</td>\n      <td>7</td>\n      <td>3</td>\n      <td>5</td>\n      <td>3</td>\n      <td>2</td>\n      <td>4</td>\n    </tr>\n    <tr>\n      <th>7</th>\n      <td>4</td>\n      <td>0</td>\n      <td>3</td>\n      <td>3</td>\n      <td>8</td>\n      <td>3</td>\n      <td>5</td>\n      <td>6</td>\n      <td>7</td>\n      <td>5</td>\n      <td>...</td>\n      <td>1</td>\n      <td>7</td>\n      <td>3</td>\n      <td>1</td>\n      <td>6</td>\n      <td>6</td>\n      <td>9</td>\n      <td>6</td>\n      <td>9</td>\n      <td>6</td>\n    </tr>\n    <tr>\n      <th>8</th>\n      <td>0</td>\n      <td>0</td>\n      <td>2</td>\n      <td>9</td>\n      <td>6</td>\n      <td>0</td>\n      <td>6</td>\n      <td>7</td>\n      <td>0</td>\n      <td>3</td>\n      <td>...</td>\n      <td>6</td>\n      <td>7</td>\n      <td>9</td>\n      <td>5</td>\n      <td>4</td>\n      <td>9</td>\n      <td>5</td>\n      <td>2</td>\n      <td>5</td>\n      <td>6</td>\n    </tr>\n    <tr>\n      <th>9</th>\n      <td>6</td>\n      <td>8</td>\n      <td>7</td>\n      <td>7</td>\n      <td>7</td>\n      <td>2</td>\n      <td>6</td>\n      <td>0</td>\n      <td>5</td>\n      <td>2</td>\n      <td>...</td>\n      <td>7</td>\n      <td>0</td>\n      <td>6</td>\n      <td>2</td>\n      <td>4</td>\n      <td>3</td>\n      <td>6</td>\n      <td>7</td>\n      <td>6</td>\n      <td>3</td>\n    </tr>\n    <tr>\n      <th>10</th>\n      <td>0</td>\n      <td>6</td>\n      <td>4</td>\n      <td>7</td>\n      <td>6</td>\n      <td>2</td>\n      <td>9</td>\n      <td>5</td>\n      <td>9</td>\n      <td>9</td>\n      <td>...</td>\n      <td>4</td>\n      <td>9</td>\n      <td>3</td>\n      <td>9</td>\n      <td>1</td>\n      <td>2</td>\n      <td>5</td>\n      <td>4</td>\n      <td>0</td>\n      <td>8</td>\n    </tr>\n    <tr>\n      <th>11</th>\n      <td>2</td>\n      <td>3</td>\n      <td>9</td>\n      <td>9</td>\n      <td>4</td>\n      <td>4</td>\n      <td>8</td>\n      <td>2</td>\n      <td>1</td>\n      <td>6</td>\n      <td>...</td>\n      <td>0</td>\n      <td>5</td>\n      <td>9</td>\n      <td>8</td>\n      <td>6</td>\n      <td>6</td>\n      <td>0</td>\n      <td>4</td>\n      <td>7</td>\n      <td>3</td>\n    </tr>\n    <tr>\n      <th>12</th>\n      <td>0</td>\n      <td>1</td>\n      <td>6</td>\n      <td>0</td>\n      <td>6</td>\n      <td>1</td>\n      <td>6</td>\n      <td>4</td>\n      <td>2</td>\n      <td>5</td>\n      <td>...</td>\n      <td>8</td>\n      <td>8</td>\n      <td>0</td>\n      <td>7</td>\n      <td>2</td>\n      <td>0</td>\n      <td>7</td>\n      <td>1</td>\n      <td>1</td>\n      <td>9</td>\n    </tr>\n    <tr>\n      <th>13</th>\n      <td>5</td>\n      <td>1</td>\n      <td>5</td>\n      <td>9</td>\n      <td>6</td>\n      <td>4</td>\n      <td>9</td>\n      <td>8</td>\n      <td>7</td>\n      <td>5</td>\n      <td>...</td>\n      <td>2</td>\n      <td>4</td>\n      <td>3</td>\n      <td>2</td>\n      <td>0</td>\n      <td>0</td>\n      <td>4</td>\n      <td>2</td>\n      <td>5</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>14</th>\n      <td>0</td>\n      <td>3</td>\n      <td>8</td>\n      <td>5</td>\n      <td>3</td>\n      <td>1</td>\n      <td>4</td>\n      <td>7</td>\n      <td>3</td>\n      <td>2</td>\n      <td>...</td>\n      <td>8</td>\n      <td>5</td>\n      <td>5</td>\n      <td>7</td>\n      <td>5</td>\n      <td>9</td>\n      <td>1</td>\n      <td>3</td>\n      <td>9</td>\n      <td>3</td>\n    </tr>\n    <tr>\n      <th>15</th>\n      <td>3</td>\n      <td>3</td>\n      <td>6</td>\n      <td>1</td>\n      <td>3</td>\n      <td>0</td>\n      <td>5</td>\n      <td>0</td>\n      <td>5</td>\n      <td>2</td>\n      <td>...</td>\n      <td>7</td>\n      <td>1</td>\n      <td>7</td>\n      <td>7</td>\n      <td>3</td>\n      <td>8</td>\n      <td>3</td>\n      <td>0</td>\n      <td>6</td>\n      <td>3</td>\n    </tr>\n    <tr>\n      <th>16</th>\n      <td>0</td>\n      <td>6</td>\n      <td>5</td>\n      <td>9</td>\n      <td>6</td>\n      <td>4</td>\n      <td>6</td>\n      <td>6</td>\n      <td>2</td>\n      <td>2</td>\n      <td>...</td>\n      <td>3</td>\n      <td>6</td>\n      <td>8</td>\n      <td>6</td>\n      <td>5</td>\n      <td>1</td>\n      <td>3</td>\n      <td>2</td>\n      <td>6</td>\n      <td>3</td>\n    </tr>\n    <tr>\n      <th>17</th>\n      <td>6</td>\n      <td>7</td>\n      <td>2</td>\n      <td>8</td>\n      <td>0</td>\n      <td>1</td>\n      <td>8</td>\n      <td>6</td>\n      <td>0</td>\n      <td>0</td>\n      <td>...</td>\n      <td>5</td>\n      <td>6</td>\n      <td>2</td>\n      <td>5</td>\n      <td>4</td>\n      <td>3</td>\n      <td>0</td>\n      <td>6</td>\n      <td>2</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>18</th>\n      <td>9</td>\n      <td>4</td>\n      <td>4</td>\n      <td>0</td>\n      <td>9</td>\n      <td>8</td>\n      <td>7</td>\n      <td>7</td>\n      <td>6</td>\n      <td>1</td>\n      <td>...</td>\n      <td>7</td>\n      <td>9</td>\n      <td>9</td>\n      <td>7</td>\n      <td>1</td>\n      <td>1</td>\n      <td>4</td>\n      <td>6</td>\n      <td>5</td>\n      <td>6</td>\n    </tr>\n    <tr>\n      <th>19</th>\n      <td>4</td>\n      <td>1</td>\n      <td>1</td>\n      <td>5</td>\n      <td>1</td>\n      <td>2</td>\n      <td>6</td>\n      <td>2</td>\n      <td>3</td>\n      <td>3</td>\n      <td>...</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>9</td>\n      <td>8</td>\n      <td>5</td>\n      <td>9</td>\n      <td>3</td>\n      <td>4</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>20</th>\n      <td>9</td>\n      <td>8</td>\n      <td>6</td>\n      <td>3</td>\n      <td>9</td>\n      <td>9</td>\n      <td>0</td>\n      <td>8</td>\n      <td>1</td>\n      <td>6</td>\n      <td>...</td>\n      <td>2</td>\n      <td>9</td>\n      <td>0</td>\n      <td>1</td>\n      <td>3</td>\n      <td>9</td>\n      <td>4</td>\n      <td>8</td>\n      <td>8</td>\n      <td>8</td>\n    </tr>\n    <tr>\n      <th>21</th>\n      <td>2</td>\n      <td>8</td>\n      <td>6</td>\n      <td>4</td>\n      <td>9</td>\n      <td>0</td>\n      <td>5</td>\n      <td>5</td>\n      <td>6</td>\n      <td>1</td>\n      <td>...</td>\n      <td>6</td>\n      <td>7</td>\n      <td>5</td>\n      <td>6</td>\n      <td>8</td>\n      <td>7</td>\n      <td>4</td>\n      <td>2</td>\n      <td>4</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>22</th>\n      <td>0</td>\n      <td>3</td>\n      <td>5</td>\n      <td>9</td>\n      <td>0</td>\n      <td>3</td>\n      <td>6</td>\n      <td>5</td>\n      <td>1</td>\n      <td>1</td>\n      <td>...</td>\n      <td>6</td>\n      <td>2</td>\n      <td>5</td>\n      <td>3</td>\n      <td>9</td>\n      <td>3</td>\n      <td>9</td>\n      <td>5</td>\n      <td>1</td>\n      <td>9</td>\n    </tr>\n    <tr>\n      <th>23</th>\n      <td>7</td>\n      <td>7</td>\n      <td>0</td>\n      <td>8</td>\n      <td>6</td>\n      <td>1</td>\n      <td>2</td>\n      <td>0</td>\n      <td>4</td>\n      <td>4</td>\n      <td>...</td>\n      <td>1</td>\n      <td>9</td>\n      <td>6</td>\n      <td>0</td>\n      <td>2</td>\n      <td>8</td>\n      <td>3</td>\n      <td>7</td>\n      <td>2</td>\n      <td>5</td>\n    </tr>\n    <tr>\n      <th>24</th>\n      <td>6</td>\n      <td>0</td>\n      <td>4</td>\n      <td>2</td>\n      <td>3</td>\n      <td>1</td>\n      <td>0</td>\n      <td>5</td>\n      <td>7</td>\n      <td>0</td>\n      <td>...</td>\n      <td>1</td>\n      <td>1</td>\n      <td>2</td>\n      <td>7</td>\n      <td>5</td>\n      <td>2</td>\n      <td>9</td>\n      <td>4</td>\n      <td>7</td>\n      <td>3</td>\n    </tr>\n    <tr>\n      <th>25</th>\n      <td>5</td>\n      <td>0</td>\n      <td>2</td>\n      <td>1</td>\n      <td>4</td>\n      <td>9</td>\n      <td>4</td>\n      <td>6</td>\n      <td>9</td>\n      <td>3</td>\n      <td>...</td>\n      <td>5</td>\n      <td>5</td>\n      <td>3</td>\n      <td>5</td>\n      <td>9</td>\n      <td>2</td>\n      <td>7</td>\n      <td>4</td>\n      <td>1</td>\n      <td>6</td>\n    </tr>\n    <tr>\n      <th>26</th>\n      <td>9</td>\n      <td>8</td>\n      <td>1</td>\n      <td>8</td>\n      <td>1</td>\n      <td>6</td>\n      <td>2</td>\n      <td>6</td>\n      <td>1</td>\n      <td>8</td>\n      <td>...</td>\n      <td>2</td>\n      <td>5</td>\n      <td>1</td>\n      <td>2</td>\n      <td>5</td>\n      <td>3</td>\n      <td>3</td>\n      <td>6</td>\n      <td>1</td>\n      <td>8</td>\n    </tr>\n    <tr>\n      <th>27</th>\n      <td>1</td>\n      <td>8</td>\n      <td>6</td>\n      <td>4</td>\n      <td>6</td>\n      <td>9</td>\n      <td>5</td>\n      <td>4</td>\n      <td>7</td>\n      <td>2</td>\n      <td>...</td>\n      <td>9</td>\n      <td>3</td>\n      <td>1</td>\n      <td>5</td>\n      <td>1</td>\n      <td>1</td>\n      <td>7</td>\n      <td>1</td>\n      <td>2</td>\n      <td>6</td>\n    </tr>\n    <tr>\n      <th>28</th>\n      <td>0</td>\n      <td>7</td>\n      <td>7</td>\n      <td>4</td>\n      <td>3</td>\n      <td>2</td>\n      <td>7</td>\n      <td>8</td>\n      <td>5</td>\n      <td>2</td>\n      <td>...</td>\n      <td>0</td>\n      <td>2</td>\n      <td>8</td>\n      <td>3</td>\n      <td>7</td>\n      <td>3</td>\n      <td>9</td>\n      <td>2</td>\n      <td>3</td>\n      <td>8</td>\n    </tr>\n    <tr>\n      <th>29</th>\n      <td>8</td>\n      <td>0</td>\n      <td>2</td>\n      <td>6</td>\n      <td>8</td>\n      <td>3</td>\n      <td>6</td>\n      <td>4</td>\n      <td>9</td>\n      <td>7</td>\n      <td>...</td>\n      <td>6</td>\n      <td>7</td>\n      <td>8</td>\n      <td>5</td>\n      <td>7</td>\n      <td>2</td>\n      <td>5</td>\n      <td>3</td>\n      <td>4</td>\n      <td>5</td>\n    </tr>\n  </tbody>\n</table>\n<p>30 rows × 30 columns</p>\n</div>"
+     },
+     "execution_count": 257,
+     "metadata": {},
+     "output_type": "execute_result"
+    }
+   ],
+   "source": [
+    "np.random.seed(1)\n",
+    "y = pd.DataFrame(np.random.randint(10, size=(30, 30)))\n",
+    "y"
+   ],
+   "metadata": {
+    "collapsed": false,
+    "ExecuteTime": {
+     "end_time": "2024-07-14T11:32:36.407169200Z",
+     "start_time": "2024-07-14T11:32:36.224278Z"
+    }
+   },
+   "id": "ac5cd612755c50e4",
+   "execution_count": 257
+  },
+  {
+   "cell_type": "code",
+   "outputs": [
+    {
+     "data": {
+      "text/plain": "     0    1    2    3    4    5    6    7    8    9   ...   20   21   22   23  \\\n0   616  560  723  739  612  457  681  799  575  590  ...  523  739  613  580   \n1   520  438  691  600  612  455  666  764  707  592  ...  555  681  503  679   \n2   557  570  786  807  690  469  804  828  704  573  ...  563  675  712  758   \n3   605  507  664  701  660  496  698  806  651  575  ...  582  685  668  586   \n4   599  681  753  873  721  563  754  770  620  654  ...  633  747  661  677   \n5   422  354  602  627  613  396  617  627  489  423  ...  456  572  559  537   \n6   359  446  599  599  481  357  577  572  451  464  ...  449  550  495  532   \n7   531  520  698  590  607  537  665  696  571  472  ...  576  588  551  665   \n8   449  322  547  533  593  399  584  638  587  424  ...  402  596  523  523   \n9   373  433  525  601  522  345  551  521  434  447  ...  508  498  438  478   \n10  500  427  574  607  667  477  652  656  615  477  ...  622  702  531  610   \n11  664  694  772  841  779  574  730  810  711  608  ...  591  760  616  638   \n12  545  547  687  701  721  576  689  724  710  532  ...  674  684  648  694   \n13  574  586  723  750  691  494  696  787  667  523  ...  618  681  568  682   \n14  502  382  645  557  570  403  538  677  500  501  ...  369  650  507  576   \n15  510  505  736  651  649  510  719  733  694  557  ...  605  717  574  642   \n16  567  376  614  612  643  514  598  724  547  464  ...  456  639  520  560   \n17  626  716  828  765  740  603  809  852  692  591  ...  664  716  655  721   \n18  600  559  667  664  641  556  624  815  638  564  ...  581  701  559  677   \n19  445  431  661  681  641  552  690  719  602  474  ...  515  637  576  620   \n20  523  569  784  725  713  501  740  772  638  640  ...  589  775  664  686   \n21  487  465  553  639  517  449  592  609  454  398  ...  492  567  534  404   \n22  479  449  574  686  583  377  566  614  563  455  ...  453  539  491  501   \n23  483  386  476  526  550  426  492  585  536  482  ...  322  541  438  456   \n24  523  551  658  767  537  444  663  731  576  577  ...  522  590  525  664   \n25  652  656  738  753  853  508  752  815  669  576  ...  694  833  693  606   \n26  578  577  744  856  699  497  779  800  733  587  ...  630  754  704  834   \n27  554  494  665  689  630  574  695  703  636  599  ...  554  685  532  658   \n28  498  552  659  784  552  492  690  775  544  551  ...  567  636  518  599   \n29  513  491  563  642  477  367  589  647  516  484  ...  428  574  504  548   \n\n     24   25   26   27   28   29  \n0   668  602  733  585  657  700  \n1   641  506  779  494  633  590  \n2   793  672  754  550  756  638  \n3   629  534  678  484  591  626  \n4   726  649  716  610  735  706  \n5   499  384  589  436  574  507  \n6   633  554  663  476  565  602  \n7   652  527  742  528  650  599  \n8   447  362  561  386  529  484  \n9   459  418  488  407  503  496  \n10  558  532  598  471  582  561  \n11  721  676  846  678  754  708  \n12  710  564  757  571  671  656  \n13  715  644  756  557  690  604  \n14  546  531  554  437  616  463  \n15  678  576  755  455  598  654  \n16  569  442  596  517  659  532  \n17  742  612  819  593  744  712  \n18  710  554  748  597  614  657  \n19  572  512  599  455  622  538  \n20  726  672  747  548  723  645  \n21  554  417  561  466  498  492  \n22  596  520  722  478  565  501  \n23  487  408  502  426  474  481  \n24  691  548  635  526  641  538  \n25  575  616  704  559  728  672  \n26  760  680  765  592  731  629  \n27  649  554  693  577  634  668  \n28  742  521  733  533  605  604  \n29  553  483  540  407  547  455  \n\n[30 rows x 30 columns]",
+      "text/html": "<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>0</th>\n      <th>1</th>\n      <th>2</th>\n      <th>3</th>\n      <th>4</th>\n      <th>5</th>\n      <th>6</th>\n      <th>7</th>\n      <th>8</th>\n      <th>9</th>\n      <th>...</th>\n      <th>20</th>\n      <th>21</th>\n      <th>22</th>\n      <th>23</th>\n      <th>24</th>\n      <th>25</th>\n      <th>26</th>\n      <th>27</th>\n      <th>28</th>\n      <th>29</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>616</td>\n      <td>560</td>\n      <td>723</td>\n      <td>739</td>\n      <td>612</td>\n      <td>457</td>\n      <td>681</td>\n      <td>799</td>\n      <td>575</td>\n      <td>590</td>\n      <td>...</td>\n      <td>523</td>\n      <td>739</td>\n      <td>613</td>\n      <td>580</td>\n      <td>668</td>\n      <td>602</td>\n      <td>733</td>\n      <td>585</td>\n      <td>657</td>\n      <td>700</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>520</td>\n      <td>438</td>\n      <td>691</td>\n      <td>600</td>\n      <td>612</td>\n      <td>455</td>\n      <td>666</td>\n      <td>764</td>\n      <td>707</td>\n      <td>592</td>\n      <td>...</td>\n      <td>555</td>\n      <td>681</td>\n      <td>503</td>\n      <td>679</td>\n      <td>641</td>\n      <td>506</td>\n      <td>779</td>\n      <td>494</td>\n      <td>633</td>\n      <td>590</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>557</td>\n      <td>570</td>\n      <td>786</td>\n      <td>807</td>\n      <td>690</td>\n      <td>469</td>\n      <td>804</td>\n      <td>828</td>\n      <td>704</td>\n      <td>573</td>\n      <td>...</td>\n      <td>563</td>\n      <td>675</td>\n      <td>712</td>\n      <td>758</td>\n      <td>793</td>\n      <td>672</td>\n      <td>754</td>\n      <td>550</td>\n      <td>756</td>\n      <td>638</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>605</td>\n      <td>507</td>\n      <td>664</td>\n      <td>701</td>\n      <td>660</td>\n      <td>496</td>\n      <td>698</td>\n      <td>806</td>\n      <td>651</td>\n      <td>575</td>\n      <td>...</td>\n      <td>582</td>\n      <td>685</td>\n      <td>668</td>\n      <td>586</td>\n      <td>629</td>\n      <td>534</td>\n      <td>678</td>\n      <td>484</td>\n      <td>591</td>\n      <td>626</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>599</td>\n      <td>681</td>\n      <td>753</td>\n      <td>873</td>\n      <td>721</td>\n      <td>563</td>\n      <td>754</td>\n      <td>770</td>\n      <td>620</td>\n      <td>654</td>\n      <td>...</td>\n      <td>633</td>\n      <td>747</td>\n      <td>661</td>\n      <td>677</td>\n      <td>726</td>\n      <td>649</td>\n      <td>716</td>\n      <td>610</td>\n      <td>735</td>\n      <td>706</td>\n    </tr>\n    <tr>\n      <th>5</th>\n      <td>422</td>\n      <td>354</td>\n      <td>602</td>\n      <td>627</td>\n      <td>613</td>\n      <td>396</td>\n      <td>617</td>\n      <td>627</td>\n      <td>489</td>\n      <td>423</td>\n      <td>...</td>\n      <td>456</td>\n      <td>572</td>\n      <td>559</td>\n      <td>537</td>\n      <td>499</td>\n      <td>384</td>\n      <td>589</td>\n      <td>436</td>\n      <td>574</td>\n      <td>507</td>\n    </tr>\n    <tr>\n      <th>6</th>\n      <td>359</td>\n      <td>446</td>\n      <td>599</td>\n      <td>599</td>\n      <td>481</td>\n      <td>357</td>\n      <td>577</td>\n      <td>572</td>\n      <td>451</td>\n      <td>464</td>\n      <td>...</td>\n      <td>449</td>\n      <td>550</td>\n      <td>495</td>\n      <td>532</td>\n      <td>633</td>\n      <td>554</td>\n      <td>663</td>\n      <td>476</td>\n      <td>565</td>\n      <td>602</td>\n    </tr>\n    <tr>\n      <th>7</th>\n      <td>531</td>\n      <td>520</td>\n      <td>698</td>\n      <td>590</td>\n      <td>607</td>\n      <td>537</td>\n      <td>665</td>\n      <td>696</td>\n      <td>571</td>\n      <td>472</td>\n      <td>...</td>\n      <td>576</td>\n      <td>588</td>\n      <td>551</td>\n      <td>665</td>\n      <td>652</td>\n      <td>527</td>\n      <td>742</td>\n      <td>528</td>\n      <td>650</td>\n      <td>599</td>\n    </tr>\n    <tr>\n      <th>8</th>\n      <td>449</td>\n      <td>322</td>\n      <td>547</td>\n      <td>533</td>\n      <td>593</td>\n      <td>399</td>\n      <td>584</td>\n      <td>638</td>\n      <td>587</td>\n      <td>424</td>\n      <td>...</td>\n      <td>402</td>\n      <td>596</td>\n      <td>523</td>\n      <td>523</td>\n      <td>447</td>\n      <td>362</td>\n      <td>561</td>\n      <td>386</td>\n      <td>529</td>\n      <td>484</td>\n    </tr>\n    <tr>\n      <th>9</th>\n      <td>373</td>\n      <td>433</td>\n      <td>525</td>\n      <td>601</td>\n      <td>522</td>\n      <td>345</td>\n      <td>551</td>\n      <td>521</td>\n      <td>434</td>\n      <td>447</td>\n      <td>...</td>\n      <td>508</td>\n      <td>498</td>\n      <td>438</td>\n      <td>478</td>\n      <td>459</td>\n      <td>418</td>\n      <td>488</td>\n      <td>407</td>\n      <td>503</td>\n      <td>496</td>\n    </tr>\n    <tr>\n      <th>10</th>\n      <td>500</td>\n      <td>427</td>\n      <td>574</td>\n      <td>607</td>\n      <td>667</td>\n      <td>477</td>\n      <td>652</td>\n      <td>656</td>\n      <td>615</td>\n      <td>477</td>\n      <td>...</td>\n      <td>622</td>\n      <td>702</td>\n      <td>531</td>\n      <td>610</td>\n      <td>558</td>\n      <td>532</td>\n      <td>598</td>\n      <td>471</td>\n      <td>582</td>\n      <td>561</td>\n    </tr>\n    <tr>\n      <th>11</th>\n      <td>664</td>\n      <td>694</td>\n      <td>772</td>\n      <td>841</td>\n      <td>779</td>\n      <td>574</td>\n      <td>730</td>\n      <td>810</td>\n      <td>711</td>\n      <td>608</td>\n      <td>...</td>\n      <td>591</td>\n      <td>760</td>\n      <td>616</td>\n      <td>638</td>\n      <td>721</td>\n      <td>676</td>\n      <td>846</td>\n      <td>678</td>\n      <td>754</td>\n      <td>708</td>\n    </tr>\n    <tr>\n      <th>12</th>\n      <td>545</td>\n      <td>547</td>\n      <td>687</td>\n      <td>701</td>\n      <td>721</td>\n      <td>576</td>\n      <td>689</td>\n      <td>724</td>\n      <td>710</td>\n      <td>532</td>\n      <td>...</td>\n      <td>674</td>\n      <td>684</td>\n      <td>648</td>\n      <td>694</td>\n      <td>710</td>\n      <td>564</td>\n      <td>757</td>\n      <td>571</td>\n      <td>671</td>\n      <td>656</td>\n    </tr>\n    <tr>\n      <th>13</th>\n      <td>574</td>\n      <td>586</td>\n      <td>723</td>\n      <td>750</td>\n      <td>691</td>\n      <td>494</td>\n      <td>696</td>\n      <td>787</td>\n      <td>667</td>\n      <td>523</td>\n      <td>...</td>\n      <td>618</td>\n      <td>681</td>\n      <td>568</td>\n      <td>682</td>\n      <td>715</td>\n      <td>644</td>\n      <td>756</td>\n      <td>557</td>\n      <td>690</td>\n      <td>604</td>\n    </tr>\n    <tr>\n      <th>14</th>\n      <td>502</td>\n      <td>382</td>\n      <td>645</td>\n      <td>557</td>\n      <td>570</td>\n      <td>403</td>\n      <td>538</td>\n      <td>677</td>\n      <td>500</td>\n      <td>501</td>\n      <td>...</td>\n      <td>369</td>\n      <td>650</td>\n      <td>507</td>\n      <td>576</td>\n      <td>546</td>\n      <td>531</td>\n      <td>554</td>\n      <td>437</td>\n      <td>616</td>\n      <td>463</td>\n    </tr>\n    <tr>\n      <th>15</th>\n      <td>510</td>\n      <td>505</td>\n      <td>736</td>\n      <td>651</td>\n      <td>649</td>\n      <td>510</td>\n      <td>719</td>\n      <td>733</td>\n      <td>694</td>\n      <td>557</td>\n      <td>...</td>\n      <td>605</td>\n      <td>717</td>\n      <td>574</td>\n      <td>642</td>\n      <td>678</td>\n      <td>576</td>\n      <td>755</td>\n      <td>455</td>\n      <td>598</td>\n      <td>654</td>\n    </tr>\n    <tr>\n      <th>16</th>\n      <td>567</td>\n      <td>376</td>\n      <td>614</td>\n      <td>612</td>\n      <td>643</td>\n      <td>514</td>\n      <td>598</td>\n      <td>724</td>\n      <td>547</td>\n      <td>464</td>\n      <td>...</td>\n      <td>456</td>\n      <td>639</td>\n      <td>520</td>\n      <td>560</td>\n      <td>569</td>\n      <td>442</td>\n      <td>596</td>\n      <td>517</td>\n      <td>659</td>\n      <td>532</td>\n    </tr>\n    <tr>\n      <th>17</th>\n      <td>626</td>\n      <td>716</td>\n      <td>828</td>\n      <td>765</td>\n      <td>740</td>\n      <td>603</td>\n      <td>809</td>\n      <td>852</td>\n      <td>692</td>\n      <td>591</td>\n      <td>...</td>\n      <td>664</td>\n      <td>716</td>\n      <td>655</td>\n      <td>721</td>\n      <td>742</td>\n      <td>612</td>\n      <td>819</td>\n      <td>593</td>\n      <td>744</td>\n      <td>712</td>\n    </tr>\n    <tr>\n      <th>18</th>\n      <td>600</td>\n      <td>559</td>\n      <td>667</td>\n      <td>664</td>\n      <td>641</td>\n      <td>556</td>\n      <td>624</td>\n      <td>815</td>\n      <td>638</td>\n      <td>564</td>\n      <td>...</td>\n      <td>581</td>\n      <td>701</td>\n      <td>559</td>\n      <td>677</td>\n      <td>710</td>\n      <td>554</td>\n      <td>748</td>\n      <td>597</td>\n      <td>614</td>\n      <td>657</td>\n    </tr>\n    <tr>\n      <th>19</th>\n      <td>445</td>\n      <td>431</td>\n      <td>661</td>\n      <td>681</td>\n      <td>641</td>\n      <td>552</td>\n      <td>690</td>\n      <td>719</td>\n      <td>602</td>\n      <td>474</td>\n      <td>...</td>\n      <td>515</td>\n      <td>637</td>\n      <td>576</td>\n      <td>620</td>\n      <td>572</td>\n      <td>512</td>\n      <td>599</td>\n      <td>455</td>\n      <td>622</td>\n      <td>538</td>\n    </tr>\n    <tr>\n      <th>20</th>\n      <td>523</td>\n      <td>569</td>\n      <td>784</td>\n      <td>725</td>\n      <td>713</td>\n      <td>501</td>\n      <td>740</td>\n      <td>772</td>\n      <td>638</td>\n      <td>640</td>\n      <td>...</td>\n      <td>589</td>\n      <td>775</td>\n      <td>664</td>\n      <td>686</td>\n      <td>726</td>\n      <td>672</td>\n      <td>747</td>\n      <td>548</td>\n      <td>723</td>\n      <td>645</td>\n    </tr>\n    <tr>\n      <th>21</th>\n      <td>487</td>\n      <td>465</td>\n      <td>553</td>\n      <td>639</td>\n      <td>517</td>\n      <td>449</td>\n      <td>592</td>\n      <td>609</td>\n      <td>454</td>\n      <td>398</td>\n      <td>...</td>\n      <td>492</td>\n      <td>567</td>\n      <td>534</td>\n      <td>404</td>\n      <td>554</td>\n      <td>417</td>\n      <td>561</td>\n      <td>466</td>\n      <td>498</td>\n      <td>492</td>\n    </tr>\n    <tr>\n      <th>22</th>\n      <td>479</td>\n      <td>449</td>\n      <td>574</td>\n      <td>686</td>\n      <td>583</td>\n      <td>377</td>\n      <td>566</td>\n      <td>614</td>\n      <td>563</td>\n      <td>455</td>\n      <td>...</td>\n      <td>453</td>\n      <td>539</td>\n      <td>491</td>\n      <td>501</td>\n      <td>596</td>\n      <td>520</td>\n      <td>722</td>\n      <td>478</td>\n      <td>565</td>\n      <td>501</td>\n    </tr>\n    <tr>\n      <th>23</th>\n      <td>483</td>\n      <td>386</td>\n      <td>476</td>\n      <td>526</td>\n      <td>550</td>\n      <td>426</td>\n      <td>492</td>\n      <td>585</td>\n      <td>536</td>\n      <td>482</td>\n      <td>...</td>\n      <td>322</td>\n      <td>541</td>\n      <td>438</td>\n      <td>456</td>\n      <td>487</td>\n      <td>408</td>\n      <td>502</td>\n      <td>426</td>\n      <td>474</td>\n      <td>481</td>\n    </tr>\n    <tr>\n      <th>24</th>\n      <td>523</td>\n      <td>551</td>\n      <td>658</td>\n      <td>767</td>\n      <td>537</td>\n      <td>444</td>\n      <td>663</td>\n      <td>731</td>\n      <td>576</td>\n      <td>577</td>\n      <td>...</td>\n      <td>522</td>\n      <td>590</td>\n      <td>525</td>\n      <td>664</td>\n      <td>691</td>\n      <td>548</td>\n      <td>635</td>\n      <td>526</td>\n      <td>641</td>\n      <td>538</td>\n    </tr>\n    <tr>\n      <th>25</th>\n      <td>652</td>\n      <td>656</td>\n      <td>738</td>\n      <td>753</td>\n      <td>853</td>\n      <td>508</td>\n      <td>752</td>\n      <td>815</td>\n      <td>669</td>\n      <td>576</td>\n      <td>...</td>\n      <td>694</td>\n      <td>833</td>\n      <td>693</td>\n      <td>606</td>\n      <td>575</td>\n      <td>616</td>\n      <td>704</td>\n      <td>559</td>\n      <td>728</td>\n      <td>672</td>\n    </tr>\n    <tr>\n      <th>26</th>\n      <td>578</td>\n      <td>577</td>\n      <td>744</td>\n      <td>856</td>\n      <td>699</td>\n      <td>497</td>\n      <td>779</td>\n      <td>800</td>\n      <td>733</td>\n      <td>587</td>\n      <td>...</td>\n      <td>630</td>\n      <td>754</td>\n      <td>704</td>\n      <td>834</td>\n      <td>760</td>\n      <td>680</td>\n      <td>765</td>\n      <td>592</td>\n      <td>731</td>\n      <td>629</td>\n    </tr>\n    <tr>\n      <th>27</th>\n      <td>554</td>\n      <td>494</td>\n      <td>665</td>\n      <td>689</td>\n      <td>630</td>\n      <td>574</td>\n      <td>695</td>\n      <td>703</td>\n      <td>636</td>\n      <td>599</td>\n      <td>...</td>\n      <td>554</td>\n      <td>685</td>\n      <td>532</td>\n      <td>658</td>\n      <td>649</td>\n      <td>554</td>\n      <td>693</td>\n      <td>577</td>\n      <td>634</td>\n      <td>668</td>\n    </tr>\n    <tr>\n      <th>28</th>\n      <td>498</td>\n      <td>552</td>\n      <td>659</td>\n      <td>784</td>\n      <td>552</td>\n      <td>492</td>\n      <td>690</td>\n      <td>775</td>\n      <td>544</td>\n      <td>551</td>\n      <td>...</td>\n      <td>567</td>\n      <td>636</td>\n      <td>518</td>\n      <td>599</td>\n      <td>742</td>\n      <td>521</td>\n      <td>733</td>\n      <td>533</td>\n      <td>605</td>\n      <td>604</td>\n    </tr>\n    <tr>\n      <th>29</th>\n      <td>513</td>\n      <td>491</td>\n      <td>563</td>\n      <td>642</td>\n      <td>477</td>\n      <td>367</td>\n      <td>589</td>\n      <td>647</td>\n      <td>516</td>\n      <td>484</td>\n      <td>...</td>\n      <td>428</td>\n      <td>574</td>\n      <td>504</td>\n      <td>548</td>\n      <td>553</td>\n      <td>483</td>\n      <td>540</td>\n      <td>407</td>\n      <td>547</td>\n      <td>455</td>\n    </tr>\n  </tbody>\n</table>\n<p>30 rows × 30 columns</p>\n</div>"
+     },
+     "execution_count": 258,
+     "metadata": {},
+     "output_type": "execute_result"
+    }
+   ],
+   "source": [
+    "x.dot(y)"
+   ],
+   "metadata": {
+    "collapsed": false,
+    "ExecuteTime": {
+     "end_time": "2024-07-14T11:32:36.545497800Z",
+     "start_time": "2024-07-14T11:32:36.365291400Z"
+    }
+   },
+   "id": "6e50bae745a01488",
+   "execution_count": 258
+  },
+  {
+   "cell_type": "code",
+   "outputs": [
+    {
+     "name": "stdout",
+     "output_type": "stream",
+     "text": [
+      "90 µs ± 6.29 µs per loop (mean ± std. dev. of 7 runs, 10,000 loops each)\n"
+     ]
+    }
+   ],
+   "source": [
+    "%timeit x.dot(y)"
+   ],
+   "metadata": {
+    "collapsed": false,
+    "ExecuteTime": {
+     "end_time": "2024-07-14T11:32:44.726539100Z",
+     "start_time": "2024-07-14T11:32:36.539493500Z"
+    }
+   },
+   "id": "b358dd8463a486f8",
+   "execution_count": 259
+  },
+  {
+   "cell_type": "code",
+   "outputs": [
+    {
+     "name": "stdout",
+     "output_type": "stream",
+     "text": [
+      "29 µs ± 3.18 µs per loop (mean ± std. dev. of 7 runs, 10,000 loops each)\n"
+     ]
+    }
+   ],
+   "source": [
+    "%timeit np.dot(x,y)"
+   ],
+   "metadata": {
+    "collapsed": false,
+    "ExecuteTime": {
+     "end_time": "2024-07-14T11:32:46.201915700Z",
+     "start_time": "2024-07-14T11:32:43.866845300Z"
+    }
+   },
+   "id": "1cc46487424a2008",
+   "execution_count": 260
+  },
+  {
+   "cell_type": "markdown",
+   "source": [
+    "* 执行相同运算，Numpy与Pandas的对比\n",
+    "**一般来说，纯粹的计算在Numpy里执行更快**\n",
+    "numpy更侧重于计算，Pandas更侧重于数据处理"
+   ],
+   "metadata": {
+    "collapsed": false
+   },
+   "id": "4d8bad32b5599bda"
+  },
+  {
+   "cell_type": "markdown",
+   "source": [
+    "#### 3.2.3广播运算"
+   ],
+   "metadata": {
+    "collapsed": false
+   },
+   "id": "91b6793882b8ab"
+  },
+  {
+   "cell_type": "code",
+   "outputs": [
+    {
+     "data": {
+      "text/plain": "   A  B  C\n0  6  3  7\n1  4  6  9\n2  2  6  7",
+      "text/html": "<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>A</th>\n      <th>B</th>\n      <th>C</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>6</td>\n      <td>3</td>\n      <td>7</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>4</td>\n      <td>6</td>\n      <td>9</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>2</td>\n      <td>6</td>\n      <td>7</td>\n    </tr>\n  </tbody>\n</table>\n</div>"
+     },
+     "execution_count": 261,
+     "metadata": {},
+     "output_type": "execute_result"
+    }
+   ],
+   "source": [
+    "np.random.seed(42)\n",
+    "x = pd.DataFrame(np.random.randint(10, size=(3, 3)), columns=list(\"ABC\"))\n",
+    "x"
+   ],
+   "metadata": {
+    "collapsed": false,
+    "ExecuteTime": {
+     "end_time": "2024-07-14T11:32:46.222046100Z",
+     "start_time": "2024-07-14T11:32:46.199492600Z"
+    }
+   },
+   "id": "1ff5d34d2c48a27b",
+   "execution_count": 261
+  },
+  {
+   "cell_type": "markdown",
+   "source": [
+    "* 按行广播"
+   ],
+   "metadata": {
+    "collapsed": false
+   },
+   "id": "b14460e272a9d309"
+  },
+  {
+   "cell_type": "code",
+   "outputs": [
+    {
+     "data": {
+      "text/plain": "A    6\nB    3\nC    7\nName: 0, dtype: int32"
+     },
+     "execution_count": 262,
+     "metadata": {},
+     "output_type": "execute_result"
+    }
+   ],
+   "source": [
+    "x.iloc[0]"
+   ],
+   "metadata": {
+    "collapsed": false,
+    "ExecuteTime": {
+     "end_time": "2024-07-14T11:32:46.305871300Z",
+     "start_time": "2024-07-14T11:32:46.216042400Z"
+    }
+   },
+   "id": "6b711cfdac8519e7",
+   "execution_count": 262
+  },
+  {
+   "cell_type": "code",
+   "outputs": [
+    {
+     "data": {
+      "text/plain": "          A    B         C\n0  1.000000  1.0  1.000000\n1  0.666667  2.0  1.285714\n2  0.333333  2.0  1.000000",
+      "text/html": "<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>A</th>\n      <th>B</th>\n      <th>C</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>1.000000</td>\n      <td>1.0</td>\n      <td>1.000000</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>0.666667</td>\n      <td>2.0</td>\n      <td>1.285714</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>0.333333</td>\n      <td>2.0</td>\n      <td>1.000000</td>\n    </tr>\n  </tbody>\n</table>\n</div>"
+     },
+     "execution_count": 263,
+     "metadata": {},
+     "output_type": "execute_result"
+    }
+   ],
+   "source": [
+    "x / x.iloc[0]"
+   ],
+   "metadata": {
+    "collapsed": false,
+    "ExecuteTime": {
+     "end_time": "2024-07-14T11:32:46.330874400Z",
+     "start_time": "2024-07-14T11:32:46.233043500Z"
+    }
+   },
+   "id": "824c540fb16ac9",
+   "execution_count": 263
+  },
+  {
+   "cell_type": "markdown",
+   "source": [
+    "* 按列运算"
+   ],
+   "metadata": {
+    "collapsed": false
+   },
+   "id": "57d77da92e224232"
+  },
+  {
+   "cell_type": "code",
+   "outputs": [
+    {
+     "data": {
+      "text/plain": "0    6\n1    4\n2    2\nName: A, dtype: int32"
+     },
+     "execution_count": 264,
+     "metadata": {},
+     "output_type": "execute_result"
+    }
+   ],
+   "source": [
+    "x.A"
+   ],
+   "metadata": {
+    "collapsed": false,
+    "ExecuteTime": {
+     "end_time": "2024-07-14T11:32:46.379382Z",
+     "start_time": "2024-07-14T11:32:46.247607800Z"
+    }
+   },
+   "id": "a108e2e61ec812a7",
+   "execution_count": 264
+  },
+  {
+   "cell_type": "code",
+   "outputs": [
+    {
+     "data": {
+      "text/plain": "     A    B         C\n0  1.0  0.5  1.166667\n1  1.0  1.5  2.250000\n2  1.0  3.0  3.500000",
+      "text/html": "<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>A</th>\n      <th>B</th>\n      <th>C</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>1.0</td>\n      <td>0.5</td>\n      <td>1.166667</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>1.0</td>\n      <td>1.5</td>\n      <td>2.250000</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>1.0</td>\n      <td>3.0</td>\n      <td>3.500000</td>\n    </tr>\n  </tbody>\n</table>\n</div>"
+     },
+     "execution_count": 265,
+     "metadata": {},
+     "output_type": "execute_result"
+    }
+   ],
+   "source": [
+    "x.div(x.A, axis=0)"
+   ],
+   "metadata": {
+    "collapsed": false,
+    "ExecuteTime": {
+     "end_time": "2024-07-14T11:32:46.398512800Z",
+     "start_time": "2024-07-14T11:32:46.262867300Z"
+    }
+   },
+   "id": "88662bfb7cc7c57c",
+   "execution_count": 265
+  },
+  {
+   "cell_type": "code",
+   "outputs": [
+    {
+     "data": {
+      "text/plain": "          A    B         C\n0  1.000000  1.0  1.000000\n1  0.666667  2.0  1.285714\n2  0.333333  2.0  1.000000",
+      "text/html": "<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>A</th>\n      <th>B</th>\n      <th>C</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>1.000000</td>\n      <td>1.0</td>\n      <td>1.000000</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>0.666667</td>\n      <td>2.0</td>\n      <td>1.285714</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>0.333333</td>\n      <td>2.0</td>\n      <td>1.000000</td>\n    </tr>\n  </tbody>\n</table>\n</div>"
+     },
+     "execution_count": 266,
+     "metadata": {},
+     "output_type": "execute_result"
+    }
+   ],
+   "source": [
+    "x.div(x.iloc[0], axis=1)"
+   ],
+   "metadata": {
+    "collapsed": false,
+    "ExecuteTime": {
+     "end_time": "2024-07-14T11:32:46.489021600Z",
+     "start_time": "2024-07-14T11:32:46.278867300Z"
+    }
+   },
+   "id": "5223b91a40c52781",
+   "execution_count": 266
+  },
+  {
+   "cell_type": "markdown",
+   "source": [
+    "### 3.3新的用法\n",
+    "#### 3.3.1索引对齐"
+   ],
+   "metadata": {
+    "collapsed": false
+   },
+   "id": "9618593a76a7e08f"
+  },
+  {
+   "cell_type": "code",
+   "outputs": [
+    {
+     "data": {
+      "text/plain": "   A  B\n0  3  7\n1  2  1",
+      "text/html": "<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>A</th>\n      <th>B</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>3</td>\n      <td>7</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>2</td>\n      <td>1</td>\n    </tr>\n  </tbody>\n</table>\n</div>"
+     },
+     "execution_count": 267,
+     "metadata": {},
+     "output_type": "execute_result"
+    }
+   ],
+   "source": [
+    "A = pd.DataFrame(np.random.randint(0, 20, size=(2, 2)), columns=list(\"AB\"))\n",
+    "A"
+   ],
+   "metadata": {
+    "collapsed": false,
+    "ExecuteTime": {
+     "end_time": "2024-07-14T11:32:46.521025400Z",
+     "start_time": "2024-07-14T11:32:46.294867700Z"
+    }
+   },
+   "id": "dfcb55dacafcd310",
+   "execution_count": 267
+  },
+  {
+   "cell_type": "code",
+   "outputs": [
+    {
+     "data": {
+      "text/plain": "   A  B  C\n0  7  5  1\n1  4  0  9\n2  5  8  0",
+      "text/html": "<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>A</th>\n      <th>B</th>\n      <th>C</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>7</td>\n      <td>5</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>4</td>\n      <td>0</td>\n      <td>9</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>5</td>\n      <td>8</td>\n      <td>0</td>\n    </tr>\n  </tbody>\n</table>\n</div>"
+     },
+     "execution_count": 268,
+     "metadata": {},
+     "output_type": "execute_result"
+    }
+   ],
+   "source": [
+    "B = pd.DataFrame(np.random.randint(0, 10, size=(3, 3)), columns=list(\"ABC\"))\n",
+    "B"
+   ],
+   "metadata": {
+    "collapsed": false,
+    "ExecuteTime": {
+     "end_time": "2024-07-14T11:32:46.553545400Z",
+     "start_time": "2024-07-14T11:32:46.310867700Z"
+    }
+   },
+   "id": "8c0c16dd5794b8c3",
+   "execution_count": 268
+  },
+  {
+   "cell_type": "markdown",
+   "source": [
+    "* pandas会自动对齐两个对象的索引，没有的值用np.nan表示"
+   ],
+   "metadata": {
+    "collapsed": false
+   },
+   "id": "78838f5f6eec991e"
+  },
+  {
+   "cell_type": "code",
+   "outputs": [
+    {
+     "data": {
+      "text/plain": "      A     B   C\n0  10.0  12.0 NaN\n1   6.0   1.0 NaN\n2   NaN   NaN NaN",
+      "text/html": "<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>A</th>\n      <th>B</th>\n      <th>C</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>10.0</td>\n      <td>12.0</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>6.0</td>\n      <td>1.0</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n    </tr>\n  </tbody>\n</table>\n</div>"
+     },
+     "execution_count": 269,
+     "metadata": {},
+     "output_type": "execute_result"
+    }
+   ],
+   "source": [
+    "A + B"
+   ],
+   "metadata": {
+    "collapsed": false,
+    "ExecuteTime": {
+     "end_time": "2024-07-14T11:32:46.571973100Z",
+     "start_time": "2024-07-14T11:32:46.325869400Z"
+    }
+   },
+   "id": "bf1276df0cf88736",
+   "execution_count": 269
+  },
+  {
+   "cell_type": "markdown",
+   "source": [
+    "* 缺省值也可用fill_value来填充"
+   ],
+   "metadata": {
+    "collapsed": false
+   },
+   "id": "198f0a3aae96443a"
+  },
+  {
+   "cell_type": "code",
+   "outputs": [
+    {
+     "data": {
+      "text/plain": "      A     B    C\n0  10.0  12.0  1.0\n1   6.0   1.0  9.0\n2   5.0   8.0  0.0",
+      "text/html": "<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>A</th>\n      <th>B</th>\n      <th>C</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>10.0</td>\n      <td>12.0</td>\n      <td>1.0</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>6.0</td>\n      <td>1.0</td>\n      <td>9.0</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>5.0</td>\n      <td>8.0</td>\n      <td>0.0</td>\n    </tr>\n  </tbody>\n</table>\n</div>"
+     },
+     "execution_count": 270,
+     "metadata": {},
+     "output_type": "execute_result"
+    }
+   ],
+   "source": [
+    "A.add(B, fill_value=0)"
+   ],
+   "metadata": {
+    "collapsed": false,
+    "ExecuteTime": {
+     "end_time": "2024-07-14T11:32:46.602973200Z",
+     "start_time": "2024-07-14T11:32:46.340382500Z"
+    }
+   },
+   "id": "dadb5ec95f43154d",
+   "execution_count": 270
+  },
+  {
+   "cell_type": "code",
+   "outputs": [
+    {
+     "data": {
+      "text/plain": "      A     B   C\n0  21.0  35.0 NaN\n1   8.0   0.0 NaN\n2   NaN   NaN NaN",
+      "text/html": "<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>A</th>\n      <th>B</th>\n      <th>C</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>21.0</td>\n      <td>35.0</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>8.0</td>\n      <td>0.0</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n    </tr>\n  </tbody>\n</table>\n</div>"
+     },
+     "execution_count": 271,
+     "metadata": {},
+     "output_type": "execute_result"
+    }
+   ],
+   "source": [
+    "A * B"
+   ],
+   "metadata": {
+    "collapsed": false,
+    "ExecuteTime": {
+     "end_time": "2024-07-14T11:32:46.630971500Z",
+     "start_time": "2024-07-14T11:32:46.357382100Z"
+    }
+   },
+   "id": "492c050c6e3615b4",
+   "execution_count": 271
+  },
+  {
+   "cell_type": "markdown",
+   "source": [
+    "### 3.4统计相关\n",
+    "#### 3.4.1数据种类统计"
+   ],
+   "metadata": {
+    "collapsed": false
+   },
+   "id": "bda5addce108e544"
+  },
+  {
+   "cell_type": "code",
+   "outputs": [
+    {
+     "data": {
+      "text/plain": "array([2, 2, 2, 1, 2, 1, 1, 2, 1, 2, 2, 0, 2, 0, 2, 2, 0, 0, 2, 1])"
+     },
+     "execution_count": 272,
+     "metadata": {},
+     "output_type": "execute_result"
+    }
+   ],
+   "source": [
+    "y = np.random.randint(3, size=20)\n",
+    "y"
+   ],
+   "metadata": {
+    "collapsed": false,
+    "ExecuteTime": {
+     "end_time": "2024-07-14T11:32:46.662488Z",
+     "start_time": "2024-07-14T11:32:46.372381500Z"
+    }
+   },
+   "id": "2c2371c584b69927",
+   "execution_count": 272
+  },
+  {
+   "cell_type": "code",
+   "outputs": [
+    {
+     "data": {
+      "text/plain": "array([0, 1, 2])"
+     },
+     "execution_count": 273,
+     "metadata": {},
+     "output_type": "execute_result"
+    }
+   ],
+   "source": [
+    "np.unique(y)"
+   ],
+   "metadata": {
+    "collapsed": false,
+    "ExecuteTime": {
+     "end_time": "2024-07-14T11:32:46.702812600Z",
+     "start_time": "2024-07-14T11:32:46.387512900Z"
+    }
+   },
+   "id": "10051eace096c832",
+   "execution_count": 273
+  },
+  {
+   "cell_type": "code",
+   "outputs": [
+    {
+     "data": {
+      "text/plain": "Counter({2: 11, 1: 5, 0: 4})"
+     },
+     "execution_count": 274,
+     "metadata": {},
+     "output_type": "execute_result"
+    }
+   ],
+   "source": [
+    "from collections import Counter\n",
+    "\n",
+    "Counter(y)"
+   ],
+   "metadata": {
+    "collapsed": false,
+    "ExecuteTime": {
+     "end_time": "2024-07-14T11:32:46.747331400Z",
+     "start_time": "2024-07-14T11:32:46.402512400Z"
+    }
+   },
+   "id": "3fb50eb92e240d22",
+   "execution_count": 274
+  },
+  {
+   "cell_type": "code",
+   "outputs": [
+    {
+     "data": {
+      "text/plain": "    A\n0   2\n1   2\n2   2\n3   1\n4   2\n5   1\n6   1\n7   2\n8   1\n9   2\n10  2\n11  0\n12  2\n13  0\n14  2\n15  2\n16  0\n17  0\n18  2\n19  1",
+      "text/html": "<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>A</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>2</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>2</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>2</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>2</td>\n    </tr>\n    <tr>\n      <th>5</th>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>6</th>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>7</th>\n      <td>2</td>\n    </tr>\n    <tr>\n      <th>8</th>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>9</th>\n      <td>2</td>\n    </tr>\n    <tr>\n      <th>10</th>\n      <td>2</td>\n    </tr>\n    <tr>\n      <th>11</th>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>12</th>\n      <td>2</td>\n    </tr>\n    <tr>\n      <th>13</th>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>14</th>\n      <td>2</td>\n    </tr>\n    <tr>\n      <th>15</th>\n      <td>2</td>\n    </tr>\n    <tr>\n      <th>16</th>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>17</th>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>18</th>\n      <td>2</td>\n    </tr>\n    <tr>\n      <th>19</th>\n      <td>1</td>\n    </tr>\n  </tbody>\n</table>\n</div>"
+     },
+     "execution_count": 275,
+     "metadata": {},
+     "output_type": "execute_result"
+    }
+   ],
+   "source": [
+    " y1 = pd.DataFrame(y, columns=[\"A\"])\n",
+    "y1"
+   ],
+   "metadata": {
+    "collapsed": false,
+    "ExecuteTime": {
+     "end_time": "2024-07-14T11:32:46.796332300Z",
+     "start_time": "2024-07-14T11:32:46.418512500Z"
+    }
+   },
+   "id": "da3feeac40babc2a",
+   "execution_count": 275
+  },
+  {
+   "cell_type": "code",
+   "outputs": [
+    {
+     "data": {
+      "text/plain": "array([0, 1, 2])"
+     },
+     "execution_count": 276,
+     "metadata": {},
+     "output_type": "execute_result"
+    }
+   ],
+   "source": [
+    "np.unique(y1)"
+   ],
+   "metadata": {
+    "collapsed": false,
+    "ExecuteTime": {
+     "end_time": "2024-07-14T11:32:47.028856800Z",
+     "start_time": "2024-07-14T11:32:46.434518400Z"
+    }
+   },
+   "id": "5c5e10034d9bdb15",
+   "execution_count": 276
+  },
+  {
+   "cell_type": "code",
+   "outputs": [
+    {
+     "data": {
+      "text/plain": "A\n2    11\n1     5\n0     4\nName: count, dtype: int64"
+     },
+     "execution_count": 277,
+     "metadata": {},
+     "output_type": "execute_result"
+    }
+   ],
+   "source": [
+    "y1[\"A\"].value_counts()"
+   ],
+   "metadata": {
+    "collapsed": false,
+    "ExecuteTime": {
+     "end_time": "2024-07-14T11:32:47.067555500Z",
+     "start_time": "2024-07-14T11:32:46.449871700Z"
+    }
+   },
+   "id": "5db76b2f6817d624",
+   "execution_count": 277
+  },
+  {
+   "cell_type": "markdown",
+   "source": [
+    "#### 3.4.2排序\n",
+    "* 产生新的结果，并进行排序"
+   ],
+   "metadata": {
+    "collapsed": false
+   },
+   "id": "2f1b767d61b2531"
+  },
+  {
+   "cell_type": "code",
+   "outputs": [
+    {
+     "data": {
+      "text/plain": "           population    GDP\nBeijing          2154  30320\nShangHai         2424  32680\nShenZheng        1303  24222\nHangZhou          981  13468",
+      "text/html": "<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>population</th>\n      <th>GDP</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>Beijing</th>\n      <td>2154</td>\n      <td>30320</td>\n    </tr>\n    <tr>\n      <th>ShangHai</th>\n      <td>2424</td>\n      <td>32680</td>\n    </tr>\n    <tr>\n      <th>ShenZheng</th>\n      <td>1303</td>\n      <td>24222</td>\n    </tr>\n    <tr>\n      <th>HangZhou</th>\n      <td>981</td>\n      <td>13468</td>\n    </tr>\n  </tbody>\n</table>\n</div>"
+     },
+     "execution_count": 278,
+     "metadata": {},
+     "output_type": "execute_result"
+    }
+   ],
+   "source": [
+    "population_dict = {\"Beijing\": 2154,\n",
+    "                   \"ShangHai\": 2424,\n",
+    "                   \"ShenZheng\": 1303,\n",
+    "                   \"HangZhou\": 981}\n",
+    "population = pd.Series(population_dict)\n",
+    "GDP_dict = {\"Beijing\": 30320,\n",
+    "            \"ShangHai\": 32680,\n",
+    "            \"ShenZheng\": 24222,\n",
+    "            \"HangZhou\": 13468}\n",
+    "GDP = pd.Series(GDP_dict)\n",
+    "city_info = pd.DataFrame({\"population\": population, \"GDP\": GDP})\n",
+    "city_info"
+   ],
+   "metadata": {
+    "collapsed": false,
+    "ExecuteTime": {
+     "end_time": "2024-07-14T11:32:47.090555100Z",
+     "start_time": "2024-07-14T11:32:46.466021600Z"
+    }
+   },
+   "id": "f0b76f85a0233b36",
+   "execution_count": 278
+  },
+  {
+   "cell_type": "code",
+   "outputs": [
+    {
+     "data": {
+      "text/plain": "           population    GDP    per_GDP\nBeijing          2154  30320  14.076137\nShangHai         2424  32680  13.481848\nShenZheng        1303  24222  18.589409\nHangZhou          981  13468  13.728848",
+      "text/html": "<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>population</th>\n      <th>GDP</th>\n      <th>per_GDP</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>Beijing</th>\n      <td>2154</td>\n      <td>30320</td>\n      <td>14.076137</td>\n    </tr>\n    <tr>\n      <th>ShangHai</th>\n      <td>2424</td>\n      <td>32680</td>\n      <td>13.481848</td>\n    </tr>\n    <tr>\n      <th>ShenZheng</th>\n      <td>1303</td>\n      <td>24222</td>\n      <td>18.589409</td>\n    </tr>\n    <tr>\n      <th>HangZhou</th>\n      <td>981</td>\n      <td>13468</td>\n      <td>13.728848</td>\n    </tr>\n  </tbody>\n</table>\n</div>"
+     },
+     "execution_count": 279,
+     "metadata": {},
+     "output_type": "execute_result"
+    }
+   ],
+   "source": [
+    "city_info[\"per_GDP\"] = city_info[\"GDP\"] / city_info[\"population\"]\n",
+    "city_info"
+   ],
+   "metadata": {
+    "collapsed": false,
+    "ExecuteTime": {
+     "end_time": "2024-07-14T11:32:47.110555100Z",
+     "start_time": "2024-07-14T11:32:46.481021200Z"
+    }
+   },
+   "id": "6adb32867da4ec36",
+   "execution_count": 279
+  },
+  {
+   "cell_type": "markdown",
+   "source": [
+    "递增排序"
+   ],
+   "metadata": {
+    "collapsed": false
+   },
+   "id": "20a983c01b77bda0"
+  },
+  {
+   "cell_type": "code",
+   "outputs": [
+    {
+     "data": {
+      "text/plain": "           population    GDP    per_GDP\nShangHai         2424  32680  13.481848\nHangZhou          981  13468  13.728848\nBeijing          2154  30320  14.076137\nShenZheng        1303  24222  18.589409",
+      "text/html": "<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>population</th>\n      <th>GDP</th>\n      <th>per_GDP</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>ShangHai</th>\n      <td>2424</td>\n      <td>32680</td>\n      <td>13.481848</td>\n    </tr>\n    <tr>\n      <th>HangZhou</th>\n      <td>981</td>\n      <td>13468</td>\n      <td>13.728848</td>\n    </tr>\n    <tr>\n      <th>Beijing</th>\n      <td>2154</td>\n      <td>30320</td>\n      <td>14.076137</td>\n    </tr>\n    <tr>\n      <th>ShenZheng</th>\n      <td>1303</td>\n      <td>24222</td>\n      <td>18.589409</td>\n    </tr>\n  </tbody>\n</table>\n</div>"
+     },
+     "execution_count": 280,
+     "metadata": {},
+     "output_type": "execute_result"
+    }
+   ],
+   "source": [
+    "city_info.sort_values(by=\"per_GDP\")"
+   ],
+   "metadata": {
+    "collapsed": false,
+    "ExecuteTime": {
+     "end_time": "2024-07-14T11:32:47.126323600Z",
+     "start_time": "2024-07-14T11:32:46.497021400Z"
+    }
+   },
+   "id": "eba4f54ef8867c32",
+   "execution_count": 280
+  },
+  {
+   "cell_type": "markdown",
+   "source": [
+    "递减排序"
+   ],
+   "metadata": {
+    "collapsed": false
+   },
+   "id": "dacb5a9158bb9290"
+  },
+  {
+   "cell_type": "code",
+   "outputs": [
+    {
+     "data": {
+      "text/plain": "           population    GDP    per_GDP\nShenZheng        1303  24222  18.589409\nBeijing          2154  30320  14.076137\nHangZhou          981  13468  13.728848\nShangHai         2424  32680  13.481848",
+      "text/html": "<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>population</th>\n      <th>GDP</th>\n      <th>per_GDP</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>ShenZheng</th>\n      <td>1303</td>\n      <td>24222</td>\n      <td>18.589409</td>\n    </tr>\n    <tr>\n      <th>Beijing</th>\n      <td>2154</td>\n      <td>30320</td>\n      <td>14.076137</td>\n    </tr>\n    <tr>\n      <th>HangZhou</th>\n      <td>981</td>\n      <td>13468</td>\n      <td>13.728848</td>\n    </tr>\n    <tr>\n      <th>ShangHai</th>\n      <td>2424</td>\n      <td>32680</td>\n      <td>13.481848</td>\n    </tr>\n  </tbody>\n</table>\n</div>"
+     },
+     "execution_count": 281,
+     "metadata": {},
+     "output_type": "execute_result"
+    }
+   ],
+   "source": [
+    "city_info.sort_values(by=\"per_GDP\", ascending=False)"
+   ],
+   "metadata": {
+    "collapsed": false,
+    "ExecuteTime": {
+     "end_time": "2024-07-14T11:32:47.153428100Z",
+     "start_time": "2024-07-14T11:32:46.513021200Z"
+    }
+   },
+   "id": "1649c67628732d21",
+   "execution_count": 281
+  },
+  {
+   "cell_type": "markdown",
+   "source": [
+    "**按轴进行排序**"
+   ],
+   "metadata": {
+    "collapsed": false
+   },
+   "id": "3b8122387affe611"
+  },
+  {
+   "cell_type": "code",
+   "outputs": [
+    {
+     "data": {
+      "text/plain": "    C   B   A  D\n2   3  13  17  8\n1   1  19  14  6\n0  11   7  14  2",
+      "text/html": "<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>C</th>\n      <th>B</th>\n      <th>A</th>\n      <th>D</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>2</th>\n      <td>3</td>\n      <td>13</td>\n      <td>17</td>\n      <td>8</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>1</td>\n      <td>19</td>\n      <td>14</td>\n      <td>6</td>\n    </tr>\n    <tr>\n      <th>0</th>\n      <td>11</td>\n      <td>7</td>\n      <td>14</td>\n      <td>2</td>\n    </tr>\n  </tbody>\n</table>\n</div>"
+     },
+     "execution_count": 282,
+     "metadata": {},
+     "output_type": "execute_result"
+    }
+   ],
+   "source": [
+    "data = pd.DataFrame(np.random.randint(20, size=(3, 4)), index=[2, 1, 0], columns=list(\"CBAD\"))\n",
+    "data"
+   ],
+   "metadata": {
+    "collapsed": false,
+    "ExecuteTime": {
+     "end_time": "2024-07-14T11:32:47.167433500Z",
+     "start_time": "2024-07-14T11:32:46.528030Z"
+    }
+   },
+   "id": "94d69fba5761cd83",
+   "execution_count": 282
+  },
+  {
+   "cell_type": "markdown",
+   "source": [
+    "行排序"
+   ],
+   "metadata": {
+    "collapsed": false
+   },
+   "id": "b279b96b84c3abde"
+  },
+  {
+   "cell_type": "code",
+   "outputs": [
+    {
+     "data": {
+      "text/plain": "    C   B   A  D\n0  11   7  14  2\n1   1  19  14  6\n2   3  13  17  8",
+      "text/html": "<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>C</th>\n      <th>B</th>\n      <th>A</th>\n      <th>D</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>11</td>\n      <td>7</td>\n      <td>14</td>\n      <td>2</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>1</td>\n      <td>19</td>\n      <td>14</td>\n      <td>6</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>3</td>\n      <td>13</td>\n      <td>17</td>\n      <td>8</td>\n    </tr>\n  </tbody>\n</table>\n</div>"
+     },
+     "execution_count": 283,
+     "metadata": {},
+     "output_type": "execute_result"
+    }
+   ],
+   "source": [
+    "data.sort_index()"
+   ],
+   "metadata": {
+    "collapsed": false,
+    "ExecuteTime": {
+     "end_time": "2024-07-14T11:32:47.182956800Z",
+     "start_time": "2024-07-14T11:32:46.544541500Z"
+    }
+   },
+   "id": "a19053c6cf0dc93c",
+   "execution_count": 283
+  },
+  {
+   "cell_type": "markdown",
+   "source": [
+    "列排序"
+   ],
+   "metadata": {
+    "collapsed": false
+   },
+   "id": "1e6679851479cefb"
+  },
+  {
+   "cell_type": "code",
+   "outputs": [
+    {
+     "data": {
+      "text/plain": "    A   B   C  D\n2  17  13   3  8\n1  14  19   1  6\n0  14   7  11  2",
+      "text/html": "<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>A</th>\n      <th>B</th>\n      <th>C</th>\n      <th>D</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>2</th>\n      <td>17</td>\n      <td>13</td>\n      <td>3</td>\n      <td>8</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>14</td>\n      <td>19</td>\n      <td>1</td>\n      <td>6</td>\n    </tr>\n    <tr>\n      <th>0</th>\n      <td>14</td>\n      <td>7</td>\n      <td>11</td>\n      <td>2</td>\n    </tr>\n  </tbody>\n</table>\n</div>"
+     },
+     "execution_count": 284,
+     "metadata": {},
+     "output_type": "execute_result"
+    }
+   ],
+   "source": [
+    "data.sort_index(axis=1)"
+   ],
+   "metadata": {
+    "collapsed": false,
+    "ExecuteTime": {
+     "end_time": "2024-07-14T11:32:47.207992700Z",
+     "start_time": "2024-07-14T11:32:46.567968800Z"
+    }
+   },
+   "id": "1cb9b1e73be9dc56",
+   "execution_count": 284
+  },
+  {
+   "cell_type": "code",
+   "outputs": [
+    {
+     "data": {
+      "text/plain": "   D   C   B   A\n2  8   3  13  17\n1  6   1  19  14\n0  2  11   7  14",
+      "text/html": "<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>D</th>\n      <th>C</th>\n      <th>B</th>\n      <th>A</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>2</th>\n      <td>8</td>\n      <td>3</td>\n      <td>13</td>\n      <td>17</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>6</td>\n      <td>1</td>\n      <td>19</td>\n      <td>14</td>\n    </tr>\n    <tr>\n      <th>0</th>\n      <td>2</td>\n      <td>11</td>\n      <td>7</td>\n      <td>14</td>\n    </tr>\n  </tbody>\n</table>\n</div>"
+     },
+     "execution_count": 285,
+     "metadata": {},
+     "output_type": "execute_result"
+    }
+   ],
+   "source": [
+    "data.sort_index(axis=1, ascending=False)"
+   ],
+   "metadata": {
+    "collapsed": false,
+    "ExecuteTime": {
+     "end_time": "2024-07-14T11:32:47.230514500Z",
+     "start_time": "2024-07-14T11:32:46.575968300Z"
+    }
+   },
+   "id": "83cf104a2b72ea57",
+   "execution_count": 285
+  },
+  {
+   "cell_type": "markdown",
+   "source": [
+    "#### 3.4.3统计方法"
+   ],
+   "metadata": {
+    "collapsed": false
+   },
+   "id": "f7da2c53b691f4e8"
+  },
+  {
+   "cell_type": "code",
+   "outputs": [
+    {
+     "data": {
+      "text/plain": "           A         B         C         D\n0   1.082198  3.557396 -3.060476  6.367969\n1  13.113252  6.774559  2.874553  5.527044\n2  -2.036341 -4.333177  5.094802 -0.152567\n3  -3.386712 -1.522365 -2.522209  2.537716\n4   4.328491  5.550994  5.577329  5.019991\n5   1.171336 -0.493910 -4.032613  6.398588",
+      "text/html": "<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>A</th>\n      <th>B</th>\n      <th>C</th>\n      <th>D</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>1.082198</td>\n      <td>3.557396</td>\n      <td>-3.060476</td>\n      <td>6.367969</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>13.113252</td>\n      <td>6.774559</td>\n      <td>2.874553</td>\n      <td>5.527044</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>-2.036341</td>\n      <td>-4.333177</td>\n      <td>5.094802</td>\n      <td>-0.152567</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>-3.386712</td>\n      <td>-1.522365</td>\n      <td>-2.522209</td>\n      <td>2.537716</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>4.328491</td>\n      <td>5.550994</td>\n      <td>5.577329</td>\n      <td>5.019991</td>\n    </tr>\n    <tr>\n      <th>5</th>\n      <td>1.171336</td>\n      <td>-0.493910</td>\n      <td>-4.032613</td>\n      <td>6.398588</td>\n    </tr>\n  </tbody>\n</table>\n</div>"
+     },
+     "execution_count": 286,
+     "metadata": {},
+     "output_type": "execute_result"
+    }
+   ],
+   "source": [
+    "df = pd.DataFrame(np.random.normal(2, 4, size=(6, 4)), columns=list(\"ABCD\"))\n",
+    "df"
+   ],
+   "metadata": {
+    "collapsed": false,
+    "ExecuteTime": {
+     "end_time": "2024-07-14T11:32:47.251684300Z",
+     "start_time": "2024-07-14T11:32:46.592972800Z"
+    }
+   },
+   "id": "2450ba5e92aa16bf",
+   "execution_count": 286
+  },
+  {
+   "cell_type": "markdown",
+   "source": [
+    "非空个数"
+   ],
+   "metadata": {
+    "collapsed": false
+   },
+   "id": "72b8f13dd31931db"
+  },
+  {
+   "cell_type": "code",
+   "outputs": [
+    {
+     "data": {
+      "text/plain": "A    6\nB    6\nC    6\nD    6\ndtype: int64"
+     },
+     "execution_count": 287,
+     "metadata": {},
+     "output_type": "execute_result"
+    }
+   ],
+   "source": [
+    "df.count()"
+   ],
+   "metadata": {
+    "collapsed": false,
+    "ExecuteTime": {
+     "end_time": "2024-07-14T11:32:47.256689200Z",
+     "start_time": "2024-07-14T11:32:46.608968700Z"
+    }
+   },
+   "id": "d6752acecde4d87f",
+   "execution_count": 287
+  },
+  {
+   "cell_type": "markdown",
+   "source": [
+    "求和"
+   ],
+   "metadata": {
+    "collapsed": false
+   },
+   "id": "e588de67c0af721a"
+  },
+  {
+   "cell_type": "code",
+   "outputs": [
+    {
+     "data": {
+      "text/plain": "A    14.272224\nB     9.533497\nC     3.931385\nD    25.698741\ndtype: float64"
+     },
+     "execution_count": 288,
+     "metadata": {},
+     "output_type": "execute_result"
+    }
+   ],
+   "source": [
+    "df.sum()"
+   ],
+   "metadata": {
+    "collapsed": false,
+    "ExecuteTime": {
+     "end_time": "2024-07-14T11:32:47.292223700Z",
+     "start_time": "2024-07-14T11:32:46.624970700Z"
+    }
+   },
+   "id": "58ef6821dabd5757",
+   "execution_count": 288
+  },
+  {
+   "cell_type": "code",
+   "outputs": [
+    {
+     "data": {
+      "text/plain": "0     7.947086\n1    28.289408\n2    -1.427283\n3    -4.893571\n4    20.476806\n5     3.043402\ndtype: float64"
+     },
+     "execution_count": 289,
+     "metadata": {},
+     "output_type": "execute_result"
+    }
+   ],
+   "source": [
+    "df.sum(axis=1)"
+   ],
+   "metadata": {
+    "collapsed": false,
+    "ExecuteTime": {
+     "end_time": "2024-07-14T11:32:47.302387200Z",
+     "start_time": "2024-07-14T11:32:46.640483800Z"
+    }
+   },
+   "id": "32bd6fbdc7a068f5",
+   "execution_count": 289
+  },
+  {
+   "cell_type": "markdown",
+   "source": [
+    "最大值 最小值"
+   ],
+   "metadata": {
+    "collapsed": false
+   },
+   "id": "36e8f81abd4c577"
+  },
+  {
+   "cell_type": "code",
+   "outputs": [
+    {
+     "data": {
+      "text/plain": "A   -3.386712\nB   -4.333177\nC   -4.032613\nD   -0.152567\ndtype: float64"
+     },
+     "execution_count": 290,
+     "metadata": {},
+     "output_type": "execute_result"
+    }
+   ],
+   "source": [
+    "df.min()"
+   ],
+   "metadata": {
+    "collapsed": false,
+    "ExecuteTime": {
+     "end_time": "2024-07-14T11:32:47.338400200Z",
+     "start_time": "2024-07-14T11:32:46.655483800Z"
+    }
+   },
+   "id": "ab06237c56f2348c",
+   "execution_count": 290
+  },
+  {
+   "cell_type": "code",
+   "outputs": [
+    {
+     "data": {
+      "text/plain": "0   -3.060476\n1    2.874553\n2   -4.333177\n3   -3.386712\n4    4.328491\n5   -4.032613\ndtype: float64"
+     },
+     "execution_count": 291,
+     "metadata": {},
+     "output_type": "execute_result"
+    }
+   ],
+   "source": [
+    " df.min(axis=1)"
+   ],
+   "metadata": {
+    "collapsed": false,
+    "ExecuteTime": {
+     "end_time": "2024-07-14T11:32:47.343912700Z",
+     "start_time": "2024-07-14T11:32:46.671810800Z"
+    }
+   },
+   "id": "e39b9ebd4960c849",
+   "execution_count": 291
+  },
+  {
+   "cell_type": "code",
+   "outputs": [
+    {
+     "data": {
+      "text/plain": "A    1\nB    1\nC    4\nD    5\ndtype: int64"
+     },
+     "execution_count": 292,
+     "metadata": {},
+     "output_type": "execute_result"
+    }
+   ],
+   "source": [
+    "df.idxmax()"
+   ],
+   "metadata": {
+    "collapsed": false,
+    "ExecuteTime": {
+     "end_time": "2024-07-14T11:32:47.349950800Z",
+     "start_time": "2024-07-14T11:32:46.687812300Z"
+    }
+   },
+   "id": "2dcc22df8616222b",
+   "execution_count": 292
+  },
+  {
+   "cell_type": "markdown",
+   "source": [
+    "均值"
+   ],
+   "metadata": {
+    "collapsed": false
+   },
+   "id": "7fb8dc0da9da2f25"
+  },
+  {
+   "cell_type": "code",
+   "outputs": [
+    {
+     "data": {
+      "text/plain": "A    2.378704\nB    1.588916\nC    0.655231\nD    4.283124\ndtype: float64"
+     },
+     "execution_count": 293,
+     "metadata": {},
+     "output_type": "execute_result"
+    }
+   ],
+   "source": [
+    "df.mean()"
+   ],
+   "metadata": {
+    "collapsed": false,
+    "ExecuteTime": {
+     "end_time": "2024-07-14T11:32:47.371946100Z",
+     "start_time": "2024-07-14T11:32:46.703812600Z"
+    }
+   },
+   "id": "78cc14ca1bec1c94",
+   "execution_count": 293
+  },
+  {
+   "cell_type": "markdown",
+   "source": [
+    "方差"
+   ],
+   "metadata": {
+    "collapsed": false
+   },
+   "id": "6b37c8b04de84e00"
+  },
+  {
+   "cell_type": "code",
+   "outputs": [
+    {
+     "data": {
+      "text/plain": "A    34.980702\nB    19.110656\nC    18.948144\nD     6.726776\ndtype: float64"
+     },
+     "execution_count": 294,
+     "metadata": {},
+     "output_type": "execute_result"
+    }
+   ],
+   "source": [
+    "df.var()"
+   ],
+   "metadata": {
+    "collapsed": false,
+    "ExecuteTime": {
+     "end_time": "2024-07-14T11:32:47.392945600Z",
+     "start_time": "2024-07-14T11:32:46.718812100Z"
+    }
+   },
+   "id": "2aea087ad545d47",
+   "execution_count": 294
+  },
+  {
+   "cell_type": "markdown",
+   "source": [
+    "标准差"
+   ],
+   "metadata": {
+    "collapsed": false
+   },
+   "id": "cbab06c1343004f3"
+  },
+  {
+   "cell_type": "code",
+   "outputs": [
+    {
+     "data": {
+      "text/plain": "A    5.914449\nB    4.371574\nC    4.352947\nD    2.593603\ndtype: float64"
+     },
+     "execution_count": 295,
+     "metadata": {},
+     "output_type": "execute_result"
+    }
+   ],
+   "source": [
+    "df.std()"
+   ],
+   "metadata": {
+    "collapsed": false,
+    "ExecuteTime": {
+     "end_time": "2024-07-14T11:32:47.429106200Z",
+     "start_time": "2024-07-14T11:32:46.734820900Z"
+    }
+   },
+   "id": "5ac271046a549de5",
+   "execution_count": 295
+  },
+  {
+   "cell_type": "markdown",
+   "source": [
+    "中位数"
+   ],
+   "metadata": {
+    "collapsed": false
+   },
+   "id": "51825b74ab1ee920"
+  },
+  {
+   "cell_type": "code",
+   "outputs": [
+    {
+     "data": {
+      "text/plain": "A    1.126767\nB    1.531743\nC    0.176172\nD    5.273518\ndtype: float64"
+     },
+     "execution_count": 296,
+     "metadata": {},
+     "output_type": "execute_result"
+    }
+   ],
+   "source": [
+    "df.median()"
+   ],
+   "metadata": {
+    "collapsed": false,
+    "ExecuteTime": {
+     "end_time": "2024-07-14T11:32:47.461346700Z",
+     "start_time": "2024-07-14T11:32:46.750327800Z"
+    }
+   },
+   "id": "268d1b70d6159732",
+   "execution_count": 296
+  },
+  {
+   "cell_type": "markdown",
+   "source": [
+    "众数"
+   ],
+   "metadata": {
+    "collapsed": false
+   },
+   "id": "501af2c35fd8a833"
+  },
+  {
+   "cell_type": "code",
+   "outputs": [
+    {
+     "data": {
+      "text/plain": "   A  B\n0  4  2\n1  3  2\n2  2  0\n3  2  4\n4  2  0\n5  4  1\n6  2  0\n7  1  1\n8  3  4\n9  2  0",
+      "text/html": "<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>A</th>\n      <th>B</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>4</td>\n      <td>2</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>3</td>\n      <td>2</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>2</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>2</td>\n      <td>4</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>2</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>5</th>\n      <td>4</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>6</th>\n      <td>2</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>7</th>\n      <td>1</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>8</th>\n      <td>3</td>\n      <td>4</td>\n    </tr>\n    <tr>\n      <th>9</th>\n      <td>2</td>\n      <td>0</td>\n    </tr>\n  </tbody>\n</table>\n</div>"
+     },
+     "execution_count": 297,
+     "metadata": {},
+     "output_type": "execute_result"
+    }
+   ],
+   "source": [
+    "data = pd.DataFrame(np.random.randint(5, size=(10, 2)), columns=list(\"AB\"))\n",
+    "data"
+   ],
+   "metadata": {
+    "collapsed": false,
+    "ExecuteTime": {
+     "end_time": "2024-07-14T11:32:47.487346800Z",
+     "start_time": "2024-07-14T11:32:46.767328300Z"
+    }
+   },
+   "id": "d4cbfcedcc6910fa",
+   "execution_count": 297
+  },
+  {
+   "cell_type": "code",
+   "outputs": [
+    {
+     "data": {
+      "text/plain": "   A  B\n0  2  0",
+      "text/html": "<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>A</th>\n      <th>B</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>2</td>\n      <td>0</td>\n    </tr>\n  </tbody>\n</table>\n</div>"
+     },
+     "execution_count": 298,
+     "metadata": {},
+     "output_type": "execute_result"
+    }
+   ],
+   "source": [
+    "data.mode()"
+   ],
+   "metadata": {
+    "collapsed": false,
+    "ExecuteTime": {
+     "end_time": "2024-07-14T11:32:47.540868500Z",
+     "start_time": "2024-07-14T11:32:46.782327600Z"
+    }
+   },
+   "id": "c01c9945d0852717",
+   "execution_count": 298
+  },
+  {
+   "cell_type": "markdown",
+   "source": [
+    "75%分位数"
+   ],
+   "metadata": {
+    "collapsed": false
+   },
+   "id": "e467a038458f0f94"
+  },
+  {
+   "cell_type": "code",
+   "outputs": [
+    {
+     "data": {
+      "text/plain": "A    3.539202\nB    5.052594\nC    4.539740\nD    6.157738\nName: 0.75, dtype: float64"
+     },
+     "execution_count": 299,
+     "metadata": {},
+     "output_type": "execute_result"
+    }
+   ],
+   "source": [
+    "df.quantile(0.75)"
+   ],
+   "metadata": {
+    "collapsed": false,
+    "ExecuteTime": {
+     "end_time": "2024-07-14T11:32:47.564875200Z",
+     "start_time": "2024-07-14T11:32:46.801816600Z"
+    }
+   },
+   "id": "46948fdddf5685d4",
+   "execution_count": 299
+  },
+  {
+   "cell_type": "markdown",
+   "source": [
+    "一网打尽"
+   ],
+   "metadata": {
+    "collapsed": false
+   },
+   "id": "7d7afac2475c489b"
+  },
+  {
+   "cell_type": "code",
+   "outputs": [
+    {
+     "data": {
+      "text/plain": "               A         B         C         D\ncount   6.000000  6.000000  6.000000  6.000000\nmean    2.378704  1.588916  0.655231  4.283124\nstd     5.914449  4.371574  4.352947  2.593603\nmin    -3.386712 -4.333177 -4.032613 -0.152567\n25%    -1.256706 -1.265251 -2.925910  3.158284\n50%     1.126767  1.531743  0.176172  5.273518\n75%     3.539202  5.052594  4.539740  6.157738\nmax    13.113252  6.774559  5.577329  6.398588",
+      "text/html": "<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>A</th>\n      <th>B</th>\n      <th>C</th>\n      <th>D</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>count</th>\n      <td>6.000000</td>\n      <td>6.000000</td>\n      <td>6.000000</td>\n      <td>6.000000</td>\n    </tr>\n    <tr>\n      <th>mean</th>\n      <td>2.378704</td>\n      <td>1.588916</td>\n      <td>0.655231</td>\n      <td>4.283124</td>\n    </tr>\n    <tr>\n      <th>std</th>\n      <td>5.914449</td>\n      <td>4.371574</td>\n      <td>4.352947</td>\n      <td>2.593603</td>\n    </tr>\n    <tr>\n      <th>min</th>\n      <td>-3.386712</td>\n      <td>-4.333177</td>\n      <td>-4.032613</td>\n      <td>-0.152567</td>\n    </tr>\n    <tr>\n      <th>25%</th>\n      <td>-1.256706</td>\n      <td>-1.265251</td>\n      <td>-2.925910</td>\n      <td>3.158284</td>\n    </tr>\n    <tr>\n      <th>50%</th>\n      <td>1.126767</td>\n      <td>1.531743</td>\n      <td>0.176172</td>\n      <td>5.273518</td>\n    </tr>\n    <tr>\n      <th>75%</th>\n      <td>3.539202</td>\n      <td>5.052594</td>\n      <td>4.539740</td>\n      <td>6.157738</td>\n    </tr>\n    <tr>\n      <th>max</th>\n      <td>13.113252</td>\n      <td>6.774559</td>\n      <td>5.577329</td>\n      <td>6.398588</td>\n    </tr>\n  </tbody>\n</table>\n</div>"
+     },
+     "execution_count": 300,
+     "metadata": {},
+     "output_type": "execute_result"
+    }
+   ],
+   "source": [
+    "df.describe()"
+   ],
+   "metadata": {
+    "collapsed": false,
+    "ExecuteTime": {
+     "end_time": "2024-07-14T11:32:48.104133500Z",
+     "start_time": "2024-07-14T11:32:46.813817100Z"
+    }
+   },
+   "id": "85b8e4644cb1cf87",
+   "execution_count": 300
+  },
+  {
+   "cell_type": "code",
+   "outputs": [
+    {
+     "data": {
+      "text/plain": "   A  B  C  D\n0  a  a  c  d\n1  c  a  c  b\n2  a  a  d  c",
+      "text/html": "<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>A</th>\n      <th>B</th>\n      <th>C</th>\n      <th>D</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>a</td>\n      <td>a</td>\n      <td>c</td>\n      <td>d</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>c</td>\n      <td>a</td>\n      <td>c</td>\n      <td>b</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>a</td>\n      <td>a</td>\n      <td>d</td>\n      <td>c</td>\n    </tr>\n  </tbody>\n</table>\n</div>"
+     },
+     "execution_count": 301,
+     "metadata": {},
+     "output_type": "execute_result"
+    }
+   ],
+   "source": [
+    "data_2 = pd.DataFrame([[\"a\", \"a\", \"c\", \"d\"],\n",
+    "                       [\"c\", \"a\", \"c\", \"b\"],\n",
+    "                       [\"a\", \"a\", \"d\", \"c\"]], columns=list(\"ABCD\"))\n",
+    "data_2"
+   ],
+   "metadata": {
+    "collapsed": false,
+    "ExecuteTime": {
+     "end_time": "2024-07-14T11:32:48.238142700Z",
+     "start_time": "2024-07-14T11:32:46.828818100Z"
+    }
+   },
+   "id": "db80c6391416d405",
+   "execution_count": 301
+  },
+  {
+   "cell_type": "code",
+   "outputs": [
+    {
+     "data": {
+      "text/plain": "        A  B  C  D\ncount   3  3  3  3\nunique  2  1  2  3\ntop     a  a  c  d\nfreq    2  3  2  1",
+      "text/html": "<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>A</th>\n      <th>B</th>\n      <th>C</th>\n      <th>D</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>count</th>\n      <td>3</td>\n      <td>3</td>\n      <td>3</td>\n      <td>3</td>\n    </tr>\n    <tr>\n      <th>unique</th>\n      <td>2</td>\n      <td>1</td>\n      <td>2</td>\n      <td>3</td>\n    </tr>\n    <tr>\n      <th>top</th>\n      <td>a</td>\n      <td>a</td>\n      <td>c</td>\n      <td>d</td>\n    </tr>\n    <tr>\n      <th>freq</th>\n      <td>2</td>\n      <td>3</td>\n      <td>2</td>\n      <td>1</td>\n    </tr>\n  </tbody>\n</table>\n</div>"
+     },
+     "execution_count": 302,
+     "metadata": {},
+     "output_type": "execute_result"
+    }
+   ],
+   "source": [
+    "data_2.describe()"
+   ],
+   "metadata": {
+    "collapsed": false,
+    "ExecuteTime": {
+     "end_time": "2024-07-14T11:32:48.260661100Z",
+     "start_time": "2024-07-14T11:32:46.844329900Z"
+    }
+   },
+   "id": "5ee056cf7ae3997",
+   "execution_count": 302
+  },
+  {
+   "cell_type": "markdown",
+   "source": [
+    "相关性系数和协方差"
+   ],
+   "metadata": {
+    "collapsed": false
+   },
+   "id": "9284f89a0d37c69e"
+  },
+  {
+   "cell_type": "code",
+   "outputs": [
+    {
+     "data": {
+      "text/plain": "          A         B         C         D\nA  1.000000  0.831063  0.331060  0.510821\nB  0.831063  1.000000  0.179244  0.719112\nC  0.331060  0.179244  1.000000 -0.450365\nD  0.510821  0.719112 -0.450365  1.000000",
+      "text/html": "<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>A</th>\n      <th>B</th>\n      <th>C</th>\n      <th>D</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>A</th>\n      <td>1.000000</td>\n      <td>0.831063</td>\n      <td>0.331060</td>\n      <td>0.510821</td>\n    </tr>\n    <tr>\n      <th>B</th>\n      <td>0.831063</td>\n      <td>1.000000</td>\n      <td>0.179244</td>\n      <td>0.719112</td>\n    </tr>\n    <tr>\n      <th>C</th>\n      <td>0.331060</td>\n      <td>0.179244</td>\n      <td>1.000000</td>\n      <td>-0.450365</td>\n    </tr>\n    <tr>\n      <th>D</th>\n      <td>0.510821</td>\n      <td>0.719112</td>\n      <td>-0.450365</td>\n      <td>1.000000</td>\n    </tr>\n  </tbody>\n</table>\n</div>"
+     },
+     "execution_count": 303,
+     "metadata": {},
+     "output_type": "execute_result"
+    }
+   ],
+   "source": [
+    "df.corr()"
+   ],
+   "metadata": {
+    "collapsed": false,
+    "ExecuteTime": {
+     "end_time": "2024-07-14T11:32:48.291172700Z",
+     "start_time": "2024-07-14T11:32:46.860329900Z"
+    }
+   },
+   "id": "42db5eda7865146b",
+   "execution_count": 303
+  },
+  {
+   "cell_type": "code",
+   "outputs": [
+    {
+     "data": {
+      "text/plain": "A    1.000000\nB    0.831063\nC    0.331060\nD    0.510821\ndtype: float64"
+     },
+     "execution_count": 304,
+     "metadata": {},
+     "output_type": "execute_result"
+    }
+   ],
+   "source": [
+    "df.corrwith(df[\"A\"])"
+   ],
+   "metadata": {
+    "collapsed": false,
+    "ExecuteTime": {
+     "end_time": "2024-07-14T11:32:48.312168500Z",
+     "start_time": "2024-07-14T11:32:46.876334800Z"
+    }
+   },
+   "id": "2dfeb2bf5084c6df",
+   "execution_count": 304
+  },
+  {
+   "cell_type": "markdown",
+   "source": [
+    "### 3.5自定义输出\n",
+    "apply(method)的用法：使用method方法默认对每一列进行相应的操作"
+   ],
+   "metadata": {
+    "collapsed": false
+   },
+   "id": "6e875d002ce7ba9"
+  },
+  {
+   "cell_type": "code",
+   "outputs": [
+    {
+     "data": {
+      "text/plain": "           A         B         C         D\n0   1.082198  3.557396 -3.060476  6.367969\n1  13.113252  6.774559  2.874553  5.527044\n2  -2.036341 -4.333177  5.094802 -0.152567\n3  -3.386712 -1.522365 -2.522209  2.537716\n4   4.328491  5.550994  5.577329  5.019991\n5   1.171336 -0.493910 -4.032613  6.398588",
+      "text/html": "<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>A</th>\n      <th>B</th>\n      <th>C</th>\n      <th>D</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>1.082198</td>\n      <td>3.557396</td>\n      <td>-3.060476</td>\n      <td>6.367969</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>13.113252</td>\n      <td>6.774559</td>\n      <td>2.874553</td>\n      <td>5.527044</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>-2.036341</td>\n      <td>-4.333177</td>\n      <td>5.094802</td>\n      <td>-0.152567</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>-3.386712</td>\n      <td>-1.522365</td>\n      <td>-2.522209</td>\n      <td>2.537716</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>4.328491</td>\n      <td>5.550994</td>\n      <td>5.577329</td>\n      <td>5.019991</td>\n    </tr>\n    <tr>\n      <th>5</th>\n      <td>1.171336</td>\n      <td>-0.493910</td>\n      <td>-4.032613</td>\n      <td>6.398588</td>\n    </tr>\n  </tbody>\n</table>\n</div>"
+     },
+     "execution_count": 305,
+     "metadata": {},
+     "output_type": "execute_result"
+    }
+   ],
+   "source": [
+    "df"
+   ],
+   "metadata": {
+    "collapsed": false,
+    "ExecuteTime": {
+     "end_time": "2024-07-14T11:32:48.332457300Z",
+     "start_time": "2024-07-14T11:32:46.908330200Z"
+    }
+   },
+   "id": "99848d6b57d911e6",
+   "execution_count": 305
+  },
+  {
+   "cell_type": "code",
+   "outputs": [
+    {
+     "data": {
+      "text/plain": "           A          B         C          D\n0   1.082198   3.557396 -3.060476   6.367969\n1  14.195450  10.331955 -0.185923  11.895013\n2  12.159109   5.998778  4.908878  11.742447\n3   8.772397   4.476413  2.386669  14.280162\n4  13.100888  10.027406  7.963999  19.300153\n5  14.272224   9.533497  3.931385  25.698741",
+      "text/html": "<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>A</th>\n      <th>B</th>\n      <th>C</th>\n      <th>D</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>1.082198</td>\n      <td>3.557396</td>\n      <td>-3.060476</td>\n      <td>6.367969</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>14.195450</td>\n      <td>10.331955</td>\n      <td>-0.185923</td>\n      <td>11.895013</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>12.159109</td>\n      <td>5.998778</td>\n      <td>4.908878</td>\n      <td>11.742447</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>8.772397</td>\n      <td>4.476413</td>\n      <td>2.386669</td>\n      <td>14.280162</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>13.100888</td>\n      <td>10.027406</td>\n      <td>7.963999</td>\n      <td>19.300153</td>\n    </tr>\n    <tr>\n      <th>5</th>\n      <td>14.272224</td>\n      <td>9.533497</td>\n      <td>3.931385</td>\n      <td>25.698741</td>\n    </tr>\n  </tbody>\n</table>\n</div>"
+     },
+     "execution_count": 306,
+     "metadata": {},
+     "output_type": "execute_result"
+    }
+   ],
+   "source": [
+    "df.apply(np.cumsum)"
+   ],
+   "metadata": {
+    "collapsed": false,
+    "ExecuteTime": {
+     "end_time": "2024-07-14T11:32:48.352974Z",
+     "start_time": "2024-07-14T11:32:46.923330Z"
+    }
+   },
+   "id": "6e7cb475eadfc20",
+   "execution_count": 306
+  },
+  {
+   "cell_type": "code",
+   "outputs": [
+    {
+     "data": {
+      "text/plain": "           A          B          C          D\n0   1.082198   4.639594   1.579117   7.947086\n1  13.113252  19.887811  22.762364  28.289408\n2  -2.036341  -6.369518  -1.274717  -1.427283\n3  -3.386712  -4.909077  -7.431287  -4.893571\n4   4.328491   9.879485  15.456814  20.476806\n5   1.171336   0.677427  -3.355186   3.043402",
+      "text/html": "<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>A</th>\n      <th>B</th>\n      <th>C</th>\n      <th>D</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>1.082198</td>\n      <td>4.639594</td>\n      <td>1.579117</td>\n      <td>7.947086</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>13.113252</td>\n      <td>19.887811</td>\n      <td>22.762364</td>\n      <td>28.289408</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>-2.036341</td>\n      <td>-6.369518</td>\n      <td>-1.274717</td>\n      <td>-1.427283</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>-3.386712</td>\n      <td>-4.909077</td>\n      <td>-7.431287</td>\n      <td>-4.893571</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>4.328491</td>\n      <td>9.879485</td>\n      <td>15.456814</td>\n      <td>20.476806</td>\n    </tr>\n    <tr>\n      <th>5</th>\n      <td>1.171336</td>\n      <td>0.677427</td>\n      <td>-3.355186</td>\n      <td>3.043402</td>\n    </tr>\n  </tbody>\n</table>\n</div>"
+     },
+     "execution_count": 307,
+     "metadata": {},
+     "output_type": "execute_result"
+    }
+   ],
+   "source": [
+    "df.apply(np.cumsum, axis=1)"
+   ],
+   "metadata": {
+    "collapsed": false,
+    "ExecuteTime": {
+     "end_time": "2024-07-14T11:32:48.366970Z",
+     "start_time": "2024-07-14T11:32:46.939340700Z"
+    }
+   },
+   "id": "c94be32fbda96634",
+   "execution_count": 307
+  },
+  {
+   "cell_type": "code",
+   "outputs": [
+    {
+     "data": {
+      "text/plain": "A    14.272224\nB     9.533497\nC     3.931385\nD    25.698741\ndtype: float64"
+     },
+     "execution_count": 308,
+     "metadata": {},
+     "output_type": "execute_result"
+    }
+   ],
+   "source": [
+    "df.apply(sum)"
+   ],
+   "metadata": {
+    "collapsed": false,
+    "ExecuteTime": {
+     "end_time": "2024-07-14T11:32:48.371970200Z",
+     "start_time": "2024-07-14T11:32:46.954847800Z"
+    }
+   },
+   "id": "60471286d2b49b11",
+   "execution_count": 308
+  },
+  {
+   "cell_type": "code",
+   "outputs": [
+    {
+     "data": {
+      "text/plain": "A    16.499965\nB    11.107736\nC     9.609942\nD     6.551155\ndtype: float64"
+     },
+     "execution_count": 309,
+     "metadata": {},
+     "output_type": "execute_result"
+    }
+   ],
+   "source": [
+    "df.apply(lambda x: x.max() - x.min())"
+   ],
+   "metadata": {
+    "collapsed": false,
+    "ExecuteTime": {
+     "end_time": "2024-07-14T11:32:48.376970600Z",
+     "start_time": "2024-07-14T11:32:46.970847800Z"
+    }
+   },
+   "id": "dc454375b2ea434a",
+   "execution_count": 309
+  },
+  {
+   "cell_type": "code",
+   "outputs": [
+    {
+     "data": {
+      "text/plain": "                A         B         C         D\nCount    6.000000  6.000000  6.000000  6.000000\nmean     2.378704  1.588916  0.655231  4.283124\nmax     13.113252  6.774559  5.577329  6.398588\nidxmin   3.000000  2.000000  5.000000  2.000000\nstd      5.914449  4.371574  4.352947  2.593603",
+      "text/html": "<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>A</th>\n      <th>B</th>\n      <th>C</th>\n      <th>D</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>Count</th>\n      <td>6.000000</td>\n      <td>6.000000</td>\n      <td>6.000000</td>\n      <td>6.000000</td>\n    </tr>\n    <tr>\n      <th>mean</th>\n      <td>2.378704</td>\n      <td>1.588916</td>\n      <td>0.655231</td>\n      <td>4.283124</td>\n    </tr>\n    <tr>\n      <th>max</th>\n      <td>13.113252</td>\n      <td>6.774559</td>\n      <td>5.577329</td>\n      <td>6.398588</td>\n    </tr>\n    <tr>\n      <th>idxmin</th>\n      <td>3.000000</td>\n      <td>2.000000</td>\n      <td>5.000000</td>\n      <td>2.000000</td>\n    </tr>\n    <tr>\n      <th>std</th>\n      <td>5.914449</td>\n      <td>4.371574</td>\n      <td>4.352947</td>\n      <td>2.593603</td>\n    </tr>\n  </tbody>\n</table>\n</div>"
+     },
+     "execution_count": 310,
+     "metadata": {},
+     "output_type": "execute_result"
+    }
+   ],
+   "source": [
+    "def my_describe(x):\n",
+    "    return pd.Series([x.count(), x.mean(), x.max(), x.idxmin(), x.std()],\n",
+    "                     index=[\"Count\", \"mean\", \"max\", \"idxmin\", \"std\"])\n",
+    "\n",
+    "\n",
+    "df.apply(my_describe)"
+   ],
+   "metadata": {
+    "collapsed": false,
+    "ExecuteTime": {
+     "end_time": "2024-07-14T11:32:48.381970100Z",
+     "start_time": "2024-07-14T11:32:46.985847500Z"
+    }
+   },
+   "id": "a4210772b792c34c",
+   "execution_count": 310
+  },
+  {
+   "cell_type": "markdown",
+   "source": [
+    "## 4.缺失值处理\n",
+    "### 4.1发现缺失值"
+   ],
+   "metadata": {
+    "collapsed": false
+   },
+   "id": "35b7e471efa84b01"
+  },
+  {
+   "cell_type": "code",
+   "outputs": [
+    {
+     "data": {
+      "text/plain": "     A    B     C\n0    1  NaN     2\n1  NaN    3     4\n2    5    6  None",
+      "text/html": "<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>A</th>\n      <th>B</th>\n      <th>C</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>1</td>\n      <td>NaN</td>\n      <td>2</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>NaN</td>\n      <td>3</td>\n      <td>4</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>5</td>\n      <td>6</td>\n      <td>None</td>\n    </tr>\n  </tbody>\n</table>\n</div>"
+     },
+     "execution_count": 311,
+     "metadata": {},
+     "output_type": "execute_result"
+    }
+   ],
+   "source": [
+    "import pandas as pd\n",
+    "import numpy as np\n",
+    "\n",
+    "data = pd.DataFrame(np.array([[1, np.nan, 2],\n",
+    "                              [np.nan, 3, 4],\n",
+    "                              [5, 6, None]]), columns=[\"A\", \"B\", \"C\"])\n",
+    "data"
+   ],
+   "metadata": {
+    "collapsed": false,
+    "ExecuteTime": {
+     "end_time": "2024-07-14T11:32:48.395970300Z",
+     "start_time": "2024-07-14T11:32:47.000847500Z"
+    }
+   },
+   "id": "c16aafd53bca619f",
+   "execution_count": 311
+  },
+  {
+   "cell_type": "markdown",
+   "source": [
+    "**注意:有None、字符串等，数据类型全部变为object，它比int和float更消耗资源**"
+   ],
+   "metadata": {
+    "collapsed": false
+   },
+   "id": "846d799701f1940d"
+  },
+  {
+   "cell_type": "code",
+   "outputs": [
+    {
+     "data": {
+      "text/plain": "A    object\nB    object\nC    object\ndtype: object"
+     },
+     "execution_count": 312,
+     "metadata": {},
+     "output_type": "execute_result"
+    }
+   ],
+   "source": [
+    "data.dtypes"
+   ],
+   "metadata": {
+    "collapsed": false,
+    "ExecuteTime": {
+     "end_time": "2024-07-14T11:32:48.414973700Z",
+     "start_time": "2024-07-14T11:32:47.016847600Z"
+    }
+   },
+   "id": "d75d6e26a3ede5e2",
+   "execution_count": 312
+  },
+  {
+   "cell_type": "code",
+   "outputs": [
+    {
+     "data": {
+      "text/plain": "       A      B      C\n0  False   True  False\n1   True  False  False\n2  False  False   True",
+      "text/html": "<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>A</th>\n      <th>B</th>\n      <th>C</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>False</td>\n      <td>True</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>True</td>\n      <td>False</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>False</td>\n      <td>False</td>\n      <td>True</td>\n    </tr>\n  </tbody>\n</table>\n</div>"
+     },
+     "execution_count": 313,
+     "metadata": {},
+     "output_type": "execute_result"
+    }
+   ],
+   "source": [
+    "data.isnull()"
+   ],
+   "metadata": {
+    "collapsed": false,
+    "ExecuteTime": {
+     "end_time": "2024-07-14T11:32:48.437977800Z",
+     "start_time": "2024-07-14T11:32:47.032856500Z"
+    }
+   },
+   "id": "decdb20fdc63f73b",
+   "execution_count": 313
+  },
+  {
+   "cell_type": "code",
+   "outputs": [
+    {
+     "data": {
+      "text/plain": "       A      B      C\n0   True  False   True\n1  False   True   True\n2   True   True  False",
+      "text/html": "<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>A</th>\n      <th>B</th>\n      <th>C</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>True</td>\n      <td>False</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>False</td>\n      <td>True</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>True</td>\n      <td>True</td>\n      <td>False</td>\n    </tr>\n  </tbody>\n</table>\n</div>"
+     },
+     "execution_count": 314,
+     "metadata": {},
+     "output_type": "execute_result"
+    }
+   ],
+   "source": [
+    "data.notnull()"
+   ],
+   "metadata": {
+    "collapsed": false,
+    "ExecuteTime": {
+     "end_time": "2024-07-14T11:32:48.454488600Z",
+     "start_time": "2024-07-14T11:32:47.047554800Z"
+    }
+   },
+   "id": "e5c9c1c1571d6b2c",
+   "execution_count": 314
+  },
+  {
+   "cell_type": "markdown",
+   "source": [
+    "### 4.2删除缺失值"
+   ],
+   "metadata": {
+    "collapsed": false
+   },
+   "id": "5829d0d777b0dc41"
+  },
+  {
+   "cell_type": "code",
+   "outputs": [
+    {
+     "data": {
+      "text/plain": "      A     B     C     D\n0   1.0   NaN   2.0   3.0\n1   NaN   4.0   5.0   6.0\n2   7.0   8.0   NaN   9.0\n3  10.0  11.0  12.0  13.0",
+      "text/html": "<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>A</th>\n      <th>B</th>\n      <th>C</th>\n      <th>D</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>1.0</td>\n      <td>NaN</td>\n      <td>2.0</td>\n      <td>3.0</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>NaN</td>\n      <td>4.0</td>\n      <td>5.0</td>\n      <td>6.0</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>7.0</td>\n      <td>8.0</td>\n      <td>NaN</td>\n      <td>9.0</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>10.0</td>\n      <td>11.0</td>\n      <td>12.0</td>\n      <td>13.0</td>\n    </tr>\n  </tbody>\n</table>\n</div>"
+     },
+     "execution_count": 315,
+     "metadata": {},
+     "output_type": "execute_result"
+    }
+   ],
+   "source": [
+    "data = pd.DataFrame(np.array([[1, np.nan, 2, 3],\n",
+    "                              [np.nan, 4, 5, 6],\n",
+    "                              [7, 8, np.nan, 9],\n",
+    "                              [10, 11, 12, 13]]), columns=[\"A\", \"B\", \"C\", \"D\"])\n",
+    "data"
+   ],
+   "metadata": {
+    "collapsed": false,
+    "ExecuteTime": {
+     "end_time": "2024-07-14T11:32:48.464501100Z",
+     "start_time": "2024-07-14T11:32:47.063555100Z"
+    }
+   },
+   "id": "feae2f959debf45",
+   "execution_count": 315
+  },
+  {
+   "cell_type": "markdown",
+   "source": [
+    "**注意：np.nan是一种特殊的浮点数**"
+   ],
+   "metadata": {
+    "collapsed": false
+   },
+   "id": "6b85a68b7b9b9bac"
+  },
+  {
+   "cell_type": "code",
+   "outputs": [
+    {
+     "data": {
+      "text/plain": "A    float64\nB    float64\nC    float64\nD    float64\ndtype: object"
+     },
+     "execution_count": 316,
+     "metadata": {},
+     "output_type": "execute_result"
+    }
+   ],
+   "source": [
+    "data.dtypes"
+   ],
+   "metadata": {
+    "collapsed": false,
+    "ExecuteTime": {
+     "end_time": "2024-07-14T11:32:48.502488400Z",
+     "start_time": "2024-07-14T11:32:47.079554900Z"
+    }
+   },
+   "id": "214f67cebf569fd7",
+   "execution_count": 316
+  },
+  {
+   "cell_type": "markdown",
+   "source": [
+    "#### 4.2.1删除整行"
+   ],
+   "metadata": {
+    "collapsed": false
+   },
+   "id": "d6f7488750bd22f4"
+  },
+  {
+   "cell_type": "code",
+   "outputs": [
+    {
+     "data": {
+      "text/plain": "      A     B     C     D\n3  10.0  11.0  12.0  13.0",
+      "text/html": "<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>A</th>\n      <th>B</th>\n      <th>C</th>\n      <th>D</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>3</th>\n      <td>10.0</td>\n      <td>11.0</td>\n      <td>12.0</td>\n      <td>13.0</td>\n    </tr>\n  </tbody>\n</table>\n</div>"
+     },
+     "execution_count": 317,
+     "metadata": {},
+     "output_type": "execute_result"
+    }
+   ],
+   "source": [
+    "data.dropna()"
+   ],
+   "metadata": {
+    "collapsed": false,
+    "ExecuteTime": {
+     "end_time": "2024-07-14T11:32:48.523488700Z",
+     "start_time": "2024-07-14T11:32:47.095555100Z"
+    }
+   },
+   "id": "b90737cc61cdce5b",
+   "execution_count": 317
+  },
+  {
+   "cell_type": "markdown",
+   "source": [
+    "#### 4.2.2删除整列"
+   ],
+   "metadata": {
+    "collapsed": false
+   },
+   "id": "2d0844b8b94de4f"
+  },
+  {
+   "cell_type": "code",
+   "outputs": [
+    {
+     "data": {
+      "text/plain": "      D\n0   3.0\n1   6.0\n2   9.0\n3  13.0",
+      "text/html": "<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>D</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>3.0</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>6.0</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>9.0</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>13.0</td>\n    </tr>\n  </tbody>\n</table>\n</div>"
+     },
+     "execution_count": 318,
+     "metadata": {},
+     "output_type": "execute_result"
+    }
+   ],
+   "source": [
+    "data.dropna(axis=\"columns\")"
+   ],
+   "metadata": {
+    "collapsed": false,
+    "ExecuteTime": {
+     "end_time": "2024-07-14T11:32:48.565059300Z",
+     "start_time": "2024-07-14T11:32:47.111697700Z"
+    }
+   },
+   "id": "c3c13a974a4e4af7",
+   "execution_count": 318
+  },
+  {
+   "cell_type": "code",
+   "outputs": [
+    {
+     "data": {
+      "text/plain": "      A     B     C   D\n0   1.0   NaN   2.0 NaN\n1   NaN   4.0   5.0 NaN\n2   7.0   8.0   NaN NaN\n3  10.0  11.0  12.0 NaN",
+      "text/html": "<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>A</th>\n      <th>B</th>\n      <th>C</th>\n      <th>D</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>1.0</td>\n      <td>NaN</td>\n      <td>2.0</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>NaN</td>\n      <td>4.0</td>\n      <td>5.0</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>7.0</td>\n      <td>8.0</td>\n      <td>NaN</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>10.0</td>\n      <td>11.0</td>\n      <td>12.0</td>\n      <td>NaN</td>\n    </tr>\n  </tbody>\n</table>\n</div>"
+     },
+     "execution_count": 319,
+     "metadata": {},
+     "output_type": "execute_result"
+    }
+   ],
+   "source": [
+    "data[\"D\"] = np.nan\n",
+    "data"
+   ],
+   "metadata": {
+    "collapsed": false,
+    "ExecuteTime": {
+     "end_time": "2024-07-14T11:32:48.588996Z",
+     "start_time": "2024-07-14T11:32:47.125319700Z"
+    }
+   },
+   "id": "56cdde80c67eb49e",
+   "execution_count": 319
+  },
+  {
+   "cell_type": "code",
+   "outputs": [
+    {
+     "data": {
+      "text/plain": "Empty DataFrame\nColumns: []\nIndex: [0, 1, 2, 3]",
+      "text/html": "<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n    </tr>\n    <tr>\n      <th>1</th>\n    </tr>\n    <tr>\n      <th>2</th>\n    </tr>\n    <tr>\n      <th>3</th>\n    </tr>\n  </tbody>\n</table>\n</div>"
+     },
+     "execution_count": 320,
+     "metadata": {},
+     "output_type": "execute_result"
+    }
+   ],
+   "source": [
+    "data.dropna(axis=\"columns\", how=\"any\")"
+   ],
+   "metadata": {
+    "collapsed": false,
+    "ExecuteTime": {
+     "end_time": "2024-07-14T11:32:48.609518700Z",
+     "start_time": "2024-07-14T11:32:47.141428600Z"
+    }
+   },
+   "id": "f2f362f861b5ba63",
+   "execution_count": 320
+  },
+  {
+   "cell_type": "code",
+   "outputs": [
+    {
+     "data": {
+      "text/plain": "     A    B    C   D\n0  1.0  NaN  2.0 NaN\n1  NaN  4.0  5.0 NaN\n2  7.0  8.0  NaN NaN\n3  NaN  NaN  NaN NaN",
+      "text/html": "<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>A</th>\n      <th>B</th>\n      <th>C</th>\n      <th>D</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>1.0</td>\n      <td>NaN</td>\n      <td>2.0</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>NaN</td>\n      <td>4.0</td>\n      <td>5.0</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>7.0</td>\n      <td>8.0</td>\n      <td>NaN</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n    </tr>\n  </tbody>\n</table>\n</div>"
+     },
+     "execution_count": 321,
+     "metadata": {},
+     "output_type": "execute_result"
+    }
+   ],
+   "source": [
+    "data.iloc[3] = np.nan\n",
+    "data"
+   ],
+   "metadata": {
+    "collapsed": false,
+    "ExecuteTime": {
+     "end_time": "2024-07-14T11:32:48.639521100Z",
+     "start_time": "2024-07-14T11:32:47.156429600Z"
+    }
+   },
+   "id": "348aa7969150d71e",
+   "execution_count": 321
+  },
+  {
+   "cell_type": "code",
+   "outputs": [
+    {
+     "data": {
+      "text/plain": "     A    B    C   D\n0  1.0  NaN  2.0 NaN\n1  NaN  4.0  5.0 NaN\n2  7.0  8.0  NaN NaN",
+      "text/html": "<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>A</th>\n      <th>B</th>\n      <th>C</th>\n      <th>D</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>1.0</td>\n      <td>NaN</td>\n      <td>2.0</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>NaN</td>\n      <td>4.0</td>\n      <td>5.0</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>7.0</td>\n      <td>8.0</td>\n      <td>NaN</td>\n      <td>NaN</td>\n    </tr>\n  </tbody>\n</table>\n</div>"
+     },
+     "execution_count": 322,
+     "metadata": {},
+     "output_type": "execute_result"
+    }
+   ],
+   "source": [
+    "data.dropna(how=\"all\")"
+   ],
+   "metadata": {
+    "collapsed": false,
+    "ExecuteTime": {
+     "end_time": "2024-07-14T11:32:48.680041600Z",
+     "start_time": "2024-07-14T11:32:47.173952300Z"
+    }
+   },
+   "id": "9bdc01f4e0164a8b",
+   "execution_count": 322
+  },
+  {
+   "cell_type": "markdown",
+   "source": [
+    "### 4.3填充缺失值"
+   ],
+   "metadata": {
+    "collapsed": false
+   },
+   "id": "16aa9f24d0c96bac"
+  },
+  {
+   "cell_type": "code",
+   "outputs": [
+    {
+     "data": {
+      "text/plain": "     A    B    C    D\n0  1.0  5.0  2.0  5.0\n1  5.0  4.0  5.0  5.0\n2  7.0  8.0  5.0  5.0\n3  5.0  5.0  5.0  5.0",
+      "text/html": "<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>A</th>\n      <th>B</th>\n      <th>C</th>\n      <th>D</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>1.0</td>\n      <td>5.0</td>\n      <td>2.0</td>\n      <td>5.0</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>5.0</td>\n      <td>4.0</td>\n      <td>5.0</td>\n      <td>5.0</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>7.0</td>\n      <td>8.0</td>\n      <td>5.0</td>\n      <td>5.0</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>5.0</td>\n      <td>5.0</td>\n      <td>5.0</td>\n      <td>5.0</td>\n    </tr>\n  </tbody>\n</table>\n</div>"
+     },
+     "execution_count": 323,
+     "metadata": {},
+     "output_type": "execute_result"
+    }
+   ],
+   "source": [
+    "data.fillna(value=5)"
+   ],
+   "metadata": {
+    "collapsed": false,
+    "ExecuteTime": {
+     "end_time": "2024-07-14T11:32:48.703237400Z",
+     "start_time": "2024-07-14T11:32:47.189474300Z"
+    }
+   },
+   "id": "9e1a72b66d50d7a3",
+   "execution_count": 323
+  },
+  {
+   "cell_type": "markdown",
+   "source": [
+    "* 用均值进行替换"
+   ],
+   "metadata": {
+    "collapsed": false
+   },
+   "id": "dfd8931b90698f99"
+  },
+  {
+   "cell_type": "code",
+   "outputs": [
+    {
+     "data": {
+      "text/plain": "     A    B    C   D\n0  1.0  6.0  2.0 NaN\n1  4.0  4.0  5.0 NaN\n2  7.0  8.0  3.5 NaN\n3  4.0  6.0  3.5 NaN",
+      "text/html": "<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>A</th>\n      <th>B</th>\n      <th>C</th>\n      <th>D</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>1.0</td>\n      <td>6.0</td>\n      <td>2.0</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>4.0</td>\n      <td>4.0</td>\n      <td>5.0</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>7.0</td>\n      <td>8.0</td>\n      <td>3.5</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>4.0</td>\n      <td>6.0</td>\n      <td>3.5</td>\n      <td>NaN</td>\n    </tr>\n  </tbody>\n</table>\n</div>"
+     },
+     "execution_count": 324,
+     "metadata": {},
+     "output_type": "execute_result"
+    }
+   ],
+   "source": [
+    "fill = data.mean()\n",
+    "data.fillna(value=fill)"
+   ],
+   "metadata": {
+    "collapsed": false,
+    "ExecuteTime": {
+     "end_time": "2024-07-14T11:32:48.727245500Z",
+     "start_time": "2024-07-14T11:32:47.206989100Z"
+    }
+   },
+   "id": "22ca693a637dac43",
+   "execution_count": 324
+  },
+  {
+   "cell_type": "code",
+   "outputs": [
+    {
+     "data": {
+      "text/plain": "     A    B    C    D\n0  1.0  4.5  2.0  4.5\n1  4.5  4.0  5.0  4.5\n2  7.0  8.0  4.5  4.5\n3  4.5  4.5  4.5  4.5",
+      "text/html": "<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>A</th>\n      <th>B</th>\n      <th>C</th>\n      <th>D</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>1.0</td>\n      <td>4.5</td>\n      <td>2.0</td>\n      <td>4.5</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>4.5</td>\n      <td>4.0</td>\n      <td>5.0</td>\n      <td>4.5</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>7.0</td>\n      <td>8.0</td>\n      <td>4.5</td>\n      <td>4.5</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>4.5</td>\n      <td>4.5</td>\n      <td>4.5</td>\n      <td>4.5</td>\n    </tr>\n  </tbody>\n</table>\n</div>"
+     },
+     "execution_count": 325,
+     "metadata": {},
+     "output_type": "execute_result"
+    }
+   ],
+   "source": [
+    "fill = data.stack().mean()\n",
+    "data.fillna(value=fill)"
+   ],
+   "metadata": {
+    "collapsed": false,
+    "ExecuteTime": {
+     "end_time": "2024-07-14T11:32:48.746815700Z",
+     "start_time": "2024-07-14T11:32:47.222504300Z"
+    }
+   },
+   "id": "ac083b5c1edf4ac4",
+   "execution_count": 325
+  },
+  {
+   "cell_type": "markdown",
+   "source": [
+    "## 5.合并数据\n",
+    "* 构造一个生产DataFrame的函数"
+   ],
+   "metadata": {
+    "collapsed": false
+   },
+   "id": "a704d94f91046604"
+  },
+  {
+   "cell_type": "code",
+   "outputs": [
+    {
+     "name": "stdout",
+     "output_type": "stream",
+     "text": [
+      "{'A': ['A0', 'A1', 'A2'], 'B': ['B0', 'B1', 'B2'], 'C': ['C0', 'C1', 'C2']}\n"
+     ]
+    },
+    {
+     "data": {
+      "text/plain": "    A   B   C\n0  A0  B0  C0\n1  A1  B1  C1\n2  A2  B2  C2",
+      "text/html": "<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>A</th>\n      <th>B</th>\n      <th>C</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>A0</td>\n      <td>B0</td>\n      <td>C0</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>A1</td>\n      <td>B1</td>\n      <td>C1</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>A2</td>\n      <td>B2</td>\n      <td>C2</td>\n    </tr>\n  </tbody>\n</table>\n</div>"
+     },
+     "execution_count": 326,
+     "metadata": {},
+     "output_type": "execute_result"
+    }
+   ],
+   "source": [
+    "def make_df(cols, ind):\n",
+    "    \"一个简单的DataFrame\"\n",
+    "    data = {c: [str(c) + str(i) for i in ind] for c in cols}\n",
+    "    print(data)\n",
+    "    return pd.DataFrame(data, ind)\n",
+    "\n",
+    "\n",
+    "make_df(\"ABC\", range(3))"
+   ],
+   "metadata": {
+    "collapsed": false,
+    "ExecuteTime": {
+     "end_time": "2024-07-14T11:32:48.772752700Z",
+     "start_time": "2024-07-14T11:32:47.238514200Z"
+    }
+   },
+   "id": "431cff4ceac86c95",
+   "execution_count": 326
+  },
+  {
+   "cell_type": "markdown",
+   "source": [
+    "### 5.1垂直合并"
+   ],
+   "metadata": {
+    "collapsed": false
+   },
+   "id": "df1679aebf16ee85"
+  },
+  {
+   "cell_type": "code",
+   "outputs": [
+    {
+     "name": "stdout",
+     "output_type": "stream",
+     "text": [
+      "{'A': ['A1', 'A2'], 'B': ['B1', 'B2']}\n",
+      "{'A': ['A3', 'A4'], 'B': ['B3', 'B4']}\n",
+      "    A   B\n",
+      "1  A1  B1\n",
+      "2  A2  B2\n",
+      "    A   B\n",
+      "3  A3  B3\n",
+      "4  A4  B4\n"
+     ]
+    }
+   ],
+   "source": [
+    "df_1=make_df(\"AB\",[1,2])\n",
+    "df_2=make_df(\"AB\",[3,4])\n",
+    "print(df_1)\n",
+    "print(df_2)"
+   ],
+   "metadata": {
+    "collapsed": false,
+    "ExecuteTime": {
+     "end_time": "2024-07-14T11:32:48.796752500Z",
+     "start_time": "2024-07-14T11:32:47.253684700Z"
+    }
+   },
+   "id": "dc17541bfb938f4d",
+   "execution_count": 327
+  },
+  {
+   "cell_type": "code",
+   "outputs": [
+    {
+     "data": {
+      "text/plain": "    A   B\n1  A1  B1\n2  A2  B2\n3  A3  B3\n4  A4  B4",
+      "text/html": "<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>A</th>\n      <th>B</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>1</th>\n      <td>A1</td>\n      <td>B1</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>A2</td>\n      <td>B2</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>A3</td>\n      <td>B3</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>A4</td>\n      <td>B4</td>\n    </tr>\n  </tbody>\n</table>\n</div>"
+     },
+     "execution_count": 328,
+     "metadata": {},
+     "output_type": "execute_result"
+    }
+   ],
+   "source": [
+    "pd.concat([df_1,df_2])"
+   ],
+   "metadata": {
+    "collapsed": false,
+    "ExecuteTime": {
+     "end_time": "2024-07-14T11:32:48.817787400Z",
+     "start_time": "2024-07-14T11:32:47.268072800Z"
+    }
+   },
+   "id": "3beabd9ef78041b1",
+   "execution_count": 328
+  },
+  {
+   "cell_type": "markdown",
+   "source": [
+    "### 5.2水平合并"
+   ],
+   "metadata": {
+    "collapsed": false
+   },
+   "id": "960f48f7ca0012b8"
+  },
+  {
+   "cell_type": "code",
+   "outputs": [
+    {
+     "name": "stdout",
+     "output_type": "stream",
+     "text": [
+      "{'A': ['A0', 'A1'], 'B': ['B0', 'B1']}\n",
+      "{'C': ['C0', 'C1'], 'D': ['D0', 'D1']}\n",
+      "    A   B\n",
+      "0  A0  B0\n",
+      "1  A1  B1\n",
+      "    C   D\n",
+      "0  C0  D0\n",
+      "1  C1  D1\n"
+     ]
+    }
+   ],
+   "source": [
+    "df_3=make_df(\"AB\",[0,1])\n",
+    "df_4=make_df(\"CD\",[0,1])\n",
+    "print(df_3)\n",
+    "print(df_4)"
+   ],
+   "metadata": {
+    "collapsed": false,
+    "ExecuteTime": {
+     "end_time": "2024-07-14T11:32:48.844158500Z",
+     "start_time": "2024-07-14T11:32:47.284220Z"
+    }
+   },
+   "id": "f7b4908cd196be42",
+   "execution_count": 329
+  },
+  {
+   "cell_type": "code",
+   "outputs": [
+    {
+     "data": {
+      "text/plain": "    A   B   C   D\n0  A0  B0  C0  D0\n1  A1  B1  C1  D1",
+      "text/html": "<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>A</th>\n      <th>B</th>\n      <th>C</th>\n      <th>D</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>A0</td>\n      <td>B0</td>\n      <td>C0</td>\n      <td>D0</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>A1</td>\n      <td>B1</td>\n      <td>C1</td>\n      <td>D1</td>\n    </tr>\n  </tbody>\n</table>\n</div>"
+     },
+     "execution_count": 330,
+     "metadata": {},
+     "output_type": "execute_result"
+    }
+   ],
+   "source": [
+    "pd.concat([df_3,df_4],axis=1)"
+   ],
+   "metadata": {
+    "collapsed": false,
+    "ExecuteTime": {
+     "end_time": "2024-07-14T11:32:48.869157Z",
+     "start_time": "2024-07-14T11:32:47.300392400Z"
+    }
+   },
+   "id": "5160842ea4626b1e",
+   "execution_count": 330
+  },
+  {
+   "cell_type": "markdown",
+   "source": [
+    "### 5.3索引重叠"
+   ],
+   "metadata": {
+    "collapsed": false
+   },
+   "id": "b34a16551ab0c37f"
+  },
+  {
+   "cell_type": "code",
+   "outputs": [
+    {
+     "name": "stdout",
+     "output_type": "stream",
+     "text": [
+      "{'A': ['A1', 'A2'], 'B': ['B1', 'B2']}\n",
+      "{'A': ['A1', 'A2'], 'B': ['B1', 'B2']}\n"
+     ]
+    },
+    {
+     "data": {
+      "text/plain": "    A   B\n1  A1  B1\n2  A2  B2\n1  A1  B1\n2  A2  B2",
+      "text/html": "<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>A</th>\n      <th>B</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>1</th>\n      <td>A1</td>\n      <td>B1</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>A2</td>\n      <td>B2</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>A1</td>\n      <td>B1</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>A2</td>\n      <td>B2</td>\n    </tr>\n  </tbody>\n</table>\n</div>"
+     },
+     "execution_count": 331,
+     "metadata": {},
+     "output_type": "execute_result"
+    }
+   ],
+   "source": [
+    "df_5=make_df(\"AB\",[1,2])\n",
+    "df_6=make_df(\"AB\",[1,2])\n",
+    "pd.concat([df_5,df_6])"
+   ],
+   "metadata": {
+    "collapsed": false,
+    "ExecuteTime": {
+     "end_time": "2024-07-14T11:32:48.884157Z",
+     "start_time": "2024-07-14T11:32:47.314387500Z"
+    }
+   },
+   "id": "42e114db6315805d",
+   "execution_count": 331
+  },
+  {
+   "cell_type": "code",
+   "outputs": [
+    {
+     "data": {
+      "text/plain": "    A   B\n0  A1  B1\n1  A2  B2\n2  A1  B1\n3  A2  B2",
+      "text/html": "<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>A</th>\n      <th>B</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>A1</td>\n      <td>B1</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>A2</td>\n      <td>B2</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>A1</td>\n      <td>B1</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>A2</td>\n      <td>B2</td>\n    </tr>\n  </tbody>\n</table>\n</div>"
+     },
+     "execution_count": 332,
+     "metadata": {},
+     "output_type": "execute_result"
+    }
+   ],
+   "source": [
+    "pd.concat([df_5,df_6],ignore_index=True)"
+   ],
+   "metadata": {
+    "collapsed": false,
+    "ExecuteTime": {
+     "end_time": "2024-07-14T11:32:48.914157Z",
+     "start_time": "2024-07-14T11:32:47.331396600Z"
+    }
+   },
+   "id": "67ca8c81ddcda129",
+   "execution_count": 332
+  },
+  {
+   "cell_type": "markdown",
+   "source": [
+    "### 5.4对齐合并merge()"
+   ],
+   "metadata": {
+    "collapsed": false
+   },
+   "id": "be39e3f4fd91b638"
+  },
+  {
+   "cell_type": "code",
+   "outputs": [
+    {
+     "name": "stdout",
+     "output_type": "stream",
+     "text": [
+      "{'A': ['A1', 'A2'], 'B': ['B1', 'B2']}\n",
+      "{'B': ['B1', 'B2'], 'C': ['C1', 'C2']}\n",
+      "    A   B\n",
+      "1  A1  B1\n",
+      "2  A2  B2\n",
+      "    B   C\n",
+      "1  B1  C1\n",
+      "2  B2  C2\n"
+     ]
+    }
+   ],
+   "source": [
+    "df_9=make_df(\"AB\",[1,2])\n",
+    "df_10=make_df(\"BC\",[1,2])\n",
+    "print(df_9)\n",
+    "print(df_10)"
+   ],
+   "metadata": {
+    "collapsed": false,
+    "ExecuteTime": {
+     "end_time": "2024-07-14T11:32:48.948663700Z",
+     "start_time": "2024-07-14T11:32:47.345946200Z"
+    }
+   },
+   "id": "7e02af94f1399cf8",
+   "execution_count": 333
+  },
+  {
+   "cell_type": "code",
+   "outputs": [
+    {
+     "data": {
+      "text/plain": "    A   B   C\n0  A1  B1  C1\n1  A2  B2  C2",
+      "text/html": "<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>A</th>\n      <th>B</th>\n      <th>C</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>A1</td>\n      <td>B1</td>\n      <td>C1</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>A2</td>\n      <td>B2</td>\n      <td>C2</td>\n    </tr>\n  </tbody>\n</table>\n</div>"
+     },
+     "execution_count": 334,
+     "metadata": {},
+     "output_type": "execute_result"
+    }
+   ],
+   "source": [
+    "pd.merge(df_9,df_10)"
+   ],
+   "metadata": {
+    "collapsed": false,
+    "ExecuteTime": {
+     "end_time": "2024-07-14T11:32:48.977664100Z",
+     "start_time": "2024-07-14T11:32:47.361945800Z"
+    }
+   },
+   "id": "379c6e67c1db0bb0",
+   "execution_count": 334
+  },
+  {
+   "cell_type": "code",
+   "outputs": [
+    {
+     "name": "stdout",
+     "output_type": "stream",
+     "text": [
+      "{'A': ['A1', 'A2'], 'B': ['B1', 'B2']}\n",
+      "{'C': ['C2', 'C1'], 'B': ['B2', 'B1']}\n",
+      "    A   B\n",
+      "1  A1  B1\n",
+      "2  A2  B2\n",
+      "    C   B\n",
+      "2  C2  B2\n",
+      "1  C1  B1\n"
+     ]
+    },
+    {
+     "data": {
+      "text/plain": "    A   B   C\n0  A1  B1  C1\n1  A2  B2  C2",
+      "text/html": "<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>A</th>\n      <th>B</th>\n      <th>C</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>A1</td>\n      <td>B1</td>\n      <td>C1</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>A2</td>\n      <td>B2</td>\n      <td>C2</td>\n    </tr>\n  </tbody>\n</table>\n</div>"
+     },
+     "execution_count": 335,
+     "metadata": {},
+     "output_type": "execute_result"
+    }
+   ],
+   "source": [
+    "df_9=make_df(\"AB\",[1,2])\n",
+    "df_10=make_df(\"CB\",[2,1])\n",
+    "print(df_9)\n",
+    "print(df_10)\n",
+    "pd.merge(df_9,df_10)"
+   ],
+   "metadata": {
+    "collapsed": false,
+    "ExecuteTime": {
+     "end_time": "2024-07-14T11:32:48.995664Z",
+     "start_time": "2024-07-14T11:32:47.378946Z"
+    }
+   },
+   "id": "e7f142f336ba5530",
+   "execution_count": 335
+  },
+  {
+   "cell_type": "markdown",
+   "source": [
+    "## 6.分组和数据透视表"
+   ],
+   "metadata": {
+    "collapsed": false
+   },
+   "id": "b707765a15f05d3d"
+  },
+  {
+   "cell_type": "code",
+   "outputs": [
+    {
+     "data": {
+      "text/plain": "  key  data1  data2\n0   A      0      3\n1   B      1      3\n2   C      2      4\n3   C      3      6\n4   B      4      6\n5   A      5      3",
+      "text/html": "<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>key</th>\n      <th>data1</th>\n      <th>data2</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>A</td>\n      <td>0</td>\n      <td>3</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>B</td>\n      <td>1</td>\n      <td>3</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>C</td>\n      <td>2</td>\n      <td>4</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>C</td>\n      <td>3</td>\n      <td>6</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>B</td>\n      <td>4</td>\n      <td>6</td>\n    </tr>\n    <tr>\n      <th>5</th>\n      <td>A</td>\n      <td>5</td>\n      <td>3</td>\n    </tr>\n  </tbody>\n</table>\n</div>"
+     },
+     "execution_count": 336,
+     "metadata": {},
+     "output_type": "execute_result"
+    }
+   ],
+   "source": [
+    "df=pd.DataFrame({\"key\":[\"A\",\"B\",\"C\",\"C\",\"B\",\"A\"],\n",
+    "                 \"data1\":range(6),\n",
+    "                 \"data2\":np.random.randint(0,10,size=6)})\n",
+    "df"
+   ],
+   "metadata": {
+    "collapsed": false,
+    "ExecuteTime": {
+     "end_time": "2024-07-14T11:32:49.016663700Z",
+     "start_time": "2024-07-14T11:32:47.395100500Z"
+    }
+   },
+   "id": "88b3999b6cd6626d",
+   "execution_count": 336
+  },
+  {
+   "cell_type": "markdown",
+   "source": [
+    "### 6.1分组\n",
+    "* 延迟计算"
+   ],
+   "metadata": {
+    "collapsed": false
+   },
+   "id": "8e1598778ed9bc4b"
+  },
+  {
+   "cell_type": "code",
+   "outputs": [
+    {
+     "data": {
+      "text/plain": "<pandas.core.groupby.generic.DataFrameGroupBy object at 0x00000229AE118880>"
+     },
+     "execution_count": 337,
+     "metadata": {},
+     "output_type": "execute_result"
+    }
+   ],
+   "source": [
+    "df.groupby(\"key\")"
+   ],
+   "metadata": {
+    "collapsed": false,
+    "ExecuteTime": {
+     "end_time": "2024-07-14T11:32:49.038669900Z",
+     "start_time": "2024-07-14T11:32:47.409100200Z"
+    }
+   },
+   "id": "344d83df73636359",
+   "execution_count": 337
+  },
+  {
+   "cell_type": "code",
+   "outputs": [
+    {
+     "data": {
+      "text/plain": "     data1  data2\nkey              \nA        5      6\nB        5      9\nC        5     10",
+      "text/html": "<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>data1</th>\n      <th>data2</th>\n    </tr>\n    <tr>\n      <th>key</th>\n      <th></th>\n      <th></th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>A</th>\n      <td>5</td>\n      <td>6</td>\n    </tr>\n    <tr>\n      <th>B</th>\n      <td>5</td>\n      <td>9</td>\n    </tr>\n    <tr>\n      <th>C</th>\n      <td>5</td>\n      <td>10</td>\n    </tr>\n  </tbody>\n</table>\n</div>"
+     },
+     "execution_count": 338,
+     "metadata": {},
+     "output_type": "execute_result"
+    }
+   ],
+   "source": [
+    "df.groupby(\"key\").sum()"
+   ],
+   "metadata": {
+    "collapsed": false,
+    "ExecuteTime": {
+     "end_time": "2024-07-14T11:32:49.063189200Z",
+     "start_time": "2024-07-14T11:32:47.424100600Z"
+    }
+   },
+   "id": "ad0b01fe074cadab",
+   "execution_count": 338
+  },
+  {
+   "cell_type": "code",
+   "outputs": [
+    {
+     "data": {
+      "text/plain": "     data1  data2\nkey              \nA      2.5    3.0\nB      2.5    4.5\nC      2.5    5.0",
+      "text/html": "<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>data1</th>\n      <th>data2</th>\n    </tr>\n    <tr>\n      <th>key</th>\n      <th></th>\n      <th></th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>A</th>\n      <td>2.5</td>\n      <td>3.0</td>\n    </tr>\n    <tr>\n      <th>B</th>\n      <td>2.5</td>\n      <td>4.5</td>\n    </tr>\n    <tr>\n      <th>C</th>\n      <td>2.5</td>\n      <td>5.0</td>\n    </tr>\n  </tbody>\n</table>\n</div>"
+     },
+     "execution_count": 339,
+     "metadata": {},
+     "output_type": "execute_result"
+    }
+   ],
+   "source": [
+    "df.groupby(\"key\").mean()"
+   ],
+   "metadata": {
+    "collapsed": false,
+    "ExecuteTime": {
+     "end_time": "2024-07-14T11:32:49.068189100Z",
+     "start_time": "2024-07-14T11:32:47.439697100Z"
+    }
+   },
+   "id": "8fbd3119bb89d8ea",
+   "execution_count": 339
+  },
+  {
+   "cell_type": "code",
+   "outputs": [
+    {
+     "name": "stdout",
+     "output_type": "stream",
+     "text": [
+      "('A',   key  data1  data2\n",
+      "0   A      0      3\n",
+      "5   A      5      3)\n",
+      "('B',   key  data1  data2\n",
+      "1   B      1      3\n",
+      "4   B      4      6)\n",
+      "('C',   key  data1  data2\n",
+      "2   C      2      4\n",
+      "3   C      3      6)\n"
+     ]
+    }
+   ],
+   "source": [
+    "for i in df.groupby(\"key\"):\n",
+    "    print(str(i))    "
+   ],
+   "metadata": {
+    "collapsed": false,
+    "ExecuteTime": {
+     "end_time": "2024-07-14T11:32:49.099189100Z",
+     "start_time": "2024-07-14T11:32:47.457344800Z"
+    }
+   },
+   "id": "958b18728818e505",
+   "execution_count": 340
+  },
+  {
+   "cell_type": "markdown",
+   "source": [
+    "* 按列取值"
+   ],
+   "metadata": {
+    "collapsed": false
+   },
+   "id": "642d9924bcab7c98"
+  },
+  {
+   "cell_type": "code",
+   "outputs": [
+    {
+     "data": {
+      "text/plain": "key\nA     6\nB     9\nC    10\nName: data2, dtype: int32"
+     },
+     "execution_count": 341,
+     "metadata": {},
+     "output_type": "execute_result"
+    }
+   ],
+   "source": [
+    "df.groupby(\"key\")[\"data2\"].sum()"
+   ],
+   "metadata": {
+    "collapsed": false,
+    "ExecuteTime": {
+     "end_time": "2024-07-14T11:32:49.111192700Z",
+     "start_time": "2024-07-14T11:32:47.471351600Z"
+    }
+   },
+   "id": "90926fef8cc6eae8",
+   "execution_count": 341
+  },
+  {
+   "cell_type": "markdown",
+   "source": [
+    "* 按组迭代"
+   ],
+   "metadata": {
+    "collapsed": false
+   },
+   "id": "d88178ff25d45219"
+  },
+  {
+   "cell_type": "code",
+   "outputs": [
+    {
+     "name": "stdout",
+     "output_type": "stream",
+     "text": [
+      "A    .shape=(2, 3)\n",
+      "B    .shape=(2, 3)\n",
+      "C    .shape=(2, 3)\n"
+     ]
+    }
+   ],
+   "source": [
+    "for data,group in df.groupby(\"key\"):\n",
+    "    print(\"{0:5}.shape={1}\".format(data,group.shape))"
+   ],
+   "metadata": {
+    "collapsed": false,
+    "ExecuteTime": {
+     "end_time": "2024-07-14T11:32:49.135198100Z",
+     "start_time": "2024-07-14T11:32:47.488346500Z"
+    }
+   },
+   "id": "aba2daab43d6c08a",
+   "execution_count": 342
+  },
+  {
+   "cell_type": "markdown",
+   "source": [
+    "* 调用方法"
+   ],
+   "metadata": {
+    "collapsed": false
+   },
+   "id": "7cac9d63084698aa"
+  },
+  {
+   "cell_type": "code",
+   "outputs": [
+    {
+     "data": {
+      "text/plain": "     count  mean       std  min   25%  50%   75%  max\nkey                                                  \nA      2.0   2.5  3.535534  0.0  1.25  2.5  3.75  5.0\nB      2.0   2.5  2.121320  1.0  1.75  2.5  3.25  4.0\nC      2.0   2.5  0.707107  2.0  2.25  2.5  2.75  3.0",
+      "text/html": "<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>count</th>\n      <th>mean</th>\n      <th>std</th>\n      <th>min</th>\n      <th>25%</th>\n      <th>50%</th>\n      <th>75%</th>\n      <th>max</th>\n    </tr>\n    <tr>\n      <th>key</th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>A</th>\n      <td>2.0</td>\n      <td>2.5</td>\n      <td>3.535534</td>\n      <td>0.0</td>\n      <td>1.25</td>\n      <td>2.5</td>\n      <td>3.75</td>\n      <td>5.0</td>\n    </tr>\n    <tr>\n      <th>B</th>\n      <td>2.0</td>\n      <td>2.5</td>\n      <td>2.121320</td>\n      <td>1.0</td>\n      <td>1.75</td>\n      <td>2.5</td>\n      <td>3.25</td>\n      <td>4.0</td>\n    </tr>\n    <tr>\n      <th>C</th>\n      <td>2.0</td>\n      <td>2.5</td>\n      <td>0.707107</td>\n      <td>2.0</td>\n      <td>2.25</td>\n      <td>2.5</td>\n      <td>2.75</td>\n      <td>3.0</td>\n    </tr>\n  </tbody>\n</table>\n</div>"
+     },
+     "execution_count": 343,
+     "metadata": {},
+     "output_type": "execute_result"
+    }
+   ],
+   "source": [
+    "df.groupby(\"key\")[\"data1\"].describe()"
+   ],
+   "metadata": {
+    "collapsed": false,
+    "ExecuteTime": {
+     "end_time": "2024-07-14T11:32:49.141704300Z",
+     "start_time": "2024-07-14T11:32:47.504346500Z"
+    }
+   },
+   "id": "c3c4e8e1c6cf38da",
+   "execution_count": 343
+  },
+  {
+   "cell_type": "markdown",
+   "source": [
+    "* 支持更复杂的操作"
+   ],
+   "metadata": {
+    "collapsed": false
+   },
+   "id": "4c054de69c4217ae"
+  },
+  {
+   "cell_type": "code",
+   "outputs": [
+    {
+     "data": {
+      "text/plain": "    data1            data2           \n      min median max   min median max\nkey                                  \nA       0    2.5   5     3    3.0   3\nB       1    2.5   4     3    4.5   6\nC       2    2.5   3     4    5.0   6",
+      "text/html": "<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead tr th {\n        text-align: left;\n    }\n\n    .dataframe thead tr:last-of-type th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr>\n      <th></th>\n      <th colspan=\"3\" halign=\"left\">data1</th>\n      <th colspan=\"3\" halign=\"left\">data2</th>\n    </tr>\n    <tr>\n      <th></th>\n      <th>min</th>\n      <th>median</th>\n      <th>max</th>\n      <th>min</th>\n      <th>median</th>\n      <th>max</th>\n    </tr>\n    <tr>\n      <th>key</th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>A</th>\n      <td>0</td>\n      <td>2.5</td>\n      <td>5</td>\n      <td>3</td>\n      <td>3.0</td>\n      <td>3</td>\n    </tr>\n    <tr>\n      <th>B</th>\n      <td>1</td>\n      <td>2.5</td>\n      <td>4</td>\n      <td>3</td>\n      <td>4.5</td>\n      <td>6</td>\n    </tr>\n    <tr>\n      <th>C</th>\n      <td>2</td>\n      <td>2.5</td>\n      <td>3</td>\n      <td>4</td>\n      <td>5.0</td>\n      <td>6</td>\n    </tr>\n  </tbody>\n</table>\n</div>"
+     },
+     "execution_count": 344,
+     "metadata": {},
+     "output_type": "execute_result"
+    }
+   ],
+   "source": [
+    "df.groupby(\"key\").aggregate([\"min\",\"median\",\"max\"])"
+   ],
+   "metadata": {
+    "collapsed": false,
+    "ExecuteTime": {
+     "end_time": "2024-07-14T11:32:49.164704200Z",
+     "start_time": "2024-07-14T11:32:47.520346500Z"
+    }
+   },
+   "id": "2e7f857b6d617c2e",
+   "execution_count": 344
+  },
+  {
+   "cell_type": "markdown",
+   "source": [
+    "* 过滤"
+   ],
+   "metadata": {
+    "collapsed": false
+   },
+   "id": "edf84b71bf0be877"
+  },
+  {
+   "cell_type": "code",
+   "outputs": [
+    {
+     "data": {
+      "text/plain": "key\nA    0.000000\nB    2.121320\nC    1.414214\nName: data2, dtype: float64"
+     },
+     "execution_count": 345,
+     "metadata": {},
+     "output_type": "execute_result"
+    }
+   ],
+   "source": [
+    "def filter_func(x):\n",
+    "    return x[\"data2\"].std()>3\n",
+    "df.groupby(\"key\")[\"data2\"].std()"
+   ],
+   "metadata": {
+    "collapsed": false,
+    "ExecuteTime": {
+     "end_time": "2024-07-14T11:32:49.212635300Z",
+     "start_time": "2024-07-14T11:32:47.535355300Z"
+    }
+   },
+   "id": "9b4e46c2756c572d",
+   "execution_count": 345
+  },
+  {
+   "cell_type": "code",
+   "outputs": [
+    {
+     "data": {
+      "text/plain": "Empty DataFrame\nColumns: [key, data1, data2]\nIndex: []",
+      "text/html": "<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>key</th>\n      <th>data1</th>\n      <th>data2</th>\n    </tr>\n  </thead>\n  <tbody>\n  </tbody>\n</table>\n</div>"
+     },
+     "execution_count": 346,
+     "metadata": {},
+     "output_type": "execute_result"
+    }
+   ],
+   "source": [
+    "df.groupby(\"key\").filter(filter_func)"
+   ],
+   "metadata": {
+    "collapsed": false,
+    "ExecuteTime": {
+     "end_time": "2024-07-14T11:32:49.245238900Z",
+     "start_time": "2024-07-14T11:32:47.550862400Z"
+    }
+   },
+   "id": "5b021f86fa97be9f",
+   "execution_count": 346
+  },
+  {
+   "cell_type": "markdown",
+   "source": [
+    "* 转换"
+   ],
+   "metadata": {
+    "collapsed": false
+   },
+   "id": "8ea31af797bf0b84"
+  },
+  {
+   "cell_type": "code",
+   "outputs": [
+    {
+     "data": {
+      "text/plain": "   data1  data2\n0   -2.5    0.0\n1   -1.5   -1.5\n2   -0.5   -1.0\n3    0.5    1.0\n4    1.5    1.5\n5    2.5    0.0",
+      "text/html": "<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>data1</th>\n      <th>data2</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>-2.5</td>\n      <td>0.0</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>-1.5</td>\n      <td>-1.5</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>-0.5</td>\n      <td>-1.0</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>0.5</td>\n      <td>1.0</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>1.5</td>\n      <td>1.5</td>\n    </tr>\n    <tr>\n      <th>5</th>\n      <td>2.5</td>\n      <td>0.0</td>\n    </tr>\n  </tbody>\n</table>\n</div>"
+     },
+     "execution_count": 347,
+     "metadata": {},
+     "output_type": "execute_result"
+    }
+   ],
+   "source": [
+    "df.groupby(\"key\").transform(lambda x:x-x.mean())"
+   ],
+   "metadata": {
+    "collapsed": false,
+    "ExecuteTime": {
+     "end_time": "2024-07-14T11:32:49.281238500Z",
+     "start_time": "2024-07-14T11:32:47.566875400Z"
+    }
+   },
+   "id": "a8d10b67d0650950",
+   "execution_count": 347
+  },
+  {
+   "cell_type": "markdown",
+   "source": [
+    "* apply()方法"
+   ],
+   "metadata": {
+    "collapsed": false
+   },
+   "id": "e832415c38040305"
+  },
+  {
+   "cell_type": "code",
+   "outputs": [],
+   "source": [
+    "def norm_by_data2(x):\n",
+    "    x[\"data1\"]/=x[\"data2\"].sum()\n",
+    "    return x"
+   ],
+   "metadata": {
+    "collapsed": false,
+    "ExecuteTime": {
+     "end_time": "2024-07-14T11:32:49.303238700Z",
+     "start_time": "2024-07-14T11:32:47.581875100Z"
+    }
+   },
+   "id": "816156c83073bb32",
+   "execution_count": 348
+  },
+  {
+   "cell_type": "code",
+   "outputs": [
+    {
+     "name": "stderr",
+     "output_type": "stream",
+     "text": [
+      "C:\\Users\\Lenovo\\AppData\\Local\\Temp\\ipykernel_37336\\86320971.py:1: DeprecationWarning: DataFrameGroupBy.apply operated on the grouping columns. This behavior is deprecated, and in a future version of pandas the grouping columns will be excluded from the operation. Either pass `include_groups=False` to exclude the groupings or explicitly select the grouping columns after groupby to silence this warning.\n",
+      "  df.groupby(\"key\").apply(norm_by_data2)\n"
+     ]
+    },
+    {
+     "data": {
+      "text/plain": "      key     data1  data2\nkey                       \nA   0   A  0.000000      3\n    5   A  0.833333      3\nB   1   B  0.111111      3\n    4   B  0.444444      6\nC   2   C  0.200000      4\n    3   C  0.300000      6",
+      "text/html": "<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th></th>\n      <th>key</th>\n      <th>data1</th>\n      <th>data2</th>\n    </tr>\n    <tr>\n      <th>key</th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th rowspan=\"2\" valign=\"top\">A</th>\n      <th>0</th>\n      <td>A</td>\n      <td>0.000000</td>\n      <td>3</td>\n    </tr>\n    <tr>\n      <th>5</th>\n      <td>A</td>\n      <td>0.833333</td>\n      <td>3</td>\n    </tr>\n    <tr>\n      <th rowspan=\"2\" valign=\"top\">B</th>\n      <th>1</th>\n      <td>B</td>\n      <td>0.111111</td>\n      <td>3</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>B</td>\n      <td>0.444444</td>\n      <td>6</td>\n    </tr>\n    <tr>\n      <th rowspan=\"2\" valign=\"top\">C</th>\n      <th>2</th>\n      <td>C</td>\n      <td>0.200000</td>\n      <td>4</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>C</td>\n      <td>0.300000</td>\n      <td>6</td>\n    </tr>\n  </tbody>\n</table>\n</div>"
+     },
+     "execution_count": 349,
+     "metadata": {},
+     "output_type": "execute_result"
+    }
+   ],
+   "source": [
+    "df.groupby(\"key\").apply(norm_by_data2)"
+   ],
+   "metadata": {
+    "collapsed": false,
+    "ExecuteTime": {
+     "end_time": "2024-07-14T11:32:49.359394700Z",
+     "start_time": "2024-07-14T11:32:47.596874700Z"
+    }
+   },
+   "id": "76166f32f248344d",
+   "execution_count": 349
+  },
+  {
+   "cell_type": "markdown",
+   "source": [
+    "* 将列表、数组设为分组键"
+   ],
+   "metadata": {
+    "collapsed": false
+   },
+   "id": "462510b191df00d4"
+  },
+  {
+   "cell_type": "code",
+   "outputs": [
+    {
+     "data": {
+      "text/plain": "  key  data1  data2\n0   A      0      3\n1   B      1      3\n2   C      2      4\n3   C      3      6\n4   B      4      6\n5   A      5      3",
+      "text/html": "<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>key</th>\n      <th>data1</th>\n      <th>data2</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>A</td>\n      <td>0</td>\n      <td>3</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>B</td>\n      <td>1</td>\n      <td>3</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>C</td>\n      <td>2</td>\n      <td>4</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>C</td>\n      <td>3</td>\n      <td>6</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>B</td>\n      <td>4</td>\n      <td>6</td>\n    </tr>\n    <tr>\n      <th>5</th>\n      <td>A</td>\n      <td>5</td>\n      <td>3</td>\n    </tr>\n  </tbody>\n</table>\n</div>"
+     },
+     "execution_count": 350,
+     "metadata": {},
+     "output_type": "execute_result"
+    }
+   ],
+   "source": [
+    "L=[0,1,0,1,2,0]\n",
+    "df"
+   ],
+   "metadata": {
+    "collapsed": false,
+    "ExecuteTime": {
+     "end_time": "2024-07-14T11:32:49.396443300Z",
+     "start_time": "2024-07-14T11:32:47.612875Z"
+    }
+   },
+   "id": "69eee0e55228f4d",
+   "execution_count": 350
+  },
+  {
+   "cell_type": "code",
+   "outputs": [
+    {
+     "data": {
+      "text/plain": "   key  data1  data2\n0  ACA      7     10\n1   BC      4      9\n2    B      4      6",
+      "text/html": "<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>key</th>\n      <th>data1</th>\n      <th>data2</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>ACA</td>\n      <td>7</td>\n      <td>10</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>BC</td>\n      <td>4</td>\n      <td>9</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>B</td>\n      <td>4</td>\n      <td>6</td>\n    </tr>\n  </tbody>\n</table>\n</div>"
+     },
+     "execution_count": 351,
+     "metadata": {},
+     "output_type": "execute_result"
+    }
+   ],
+   "source": [
+    "df.groupby(L).sum()"
+   ],
+   "metadata": {
+    "collapsed": false,
+    "ExecuteTime": {
+     "end_time": "2024-07-14T11:32:49.411441300Z",
+     "start_time": "2024-07-14T11:32:47.629004500Z"
+    }
+   },
+   "id": "97da75d50b854d5a",
+   "execution_count": 351
+  },
+  {
+   "cell_type": "markdown",
+   "source": [
+    "* 用字典将索引映射到分组"
+   ],
+   "metadata": {
+    "collapsed": false
+   },
+   "id": "28e0021c84c5909b"
+  },
+  {
+   "cell_type": "code",
+   "outputs": [
+    {
+     "data": {
+      "text/plain": "     data1  data2\nkey              \nA        0      3\nB        1      3\nC        2      4\nC        3      6\nB        4      6\nA        5      3",
+      "text/html": "<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>data1</th>\n      <th>data2</th>\n    </tr>\n    <tr>\n      <th>key</th>\n      <th></th>\n      <th></th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>A</th>\n      <td>0</td>\n      <td>3</td>\n    </tr>\n    <tr>\n      <th>B</th>\n      <td>1</td>\n      <td>3</td>\n    </tr>\n    <tr>\n      <th>C</th>\n      <td>2</td>\n      <td>4</td>\n    </tr>\n    <tr>\n      <th>C</th>\n      <td>3</td>\n      <td>6</td>\n    </tr>\n    <tr>\n      <th>B</th>\n      <td>4</td>\n      <td>6</td>\n    </tr>\n    <tr>\n      <th>A</th>\n      <td>5</td>\n      <td>3</td>\n    </tr>\n  </tbody>\n</table>\n</div>"
+     },
+     "execution_count": 352,
+     "metadata": {},
+     "output_type": "execute_result"
+    }
+   ],
+   "source": [
+    "df2=df.set_index(\"key\")\n",
+    "df2"
+   ],
+   "metadata": {
+    "collapsed": false,
+    "ExecuteTime": {
+     "end_time": "2024-07-14T11:32:49.417443Z",
+     "start_time": "2024-07-14T11:32:47.643040700Z"
+    }
+   },
+   "id": "fa4d4dceb9a641c7",
+   "execution_count": 352
+  },
+  {
+   "cell_type": "code",
+   "outputs": [
+    {
+     "data": {
+      "text/plain": "          data1  data2\nkey                   \nconstant     10     19\nfirst         5      6",
+      "text/html": "<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>data1</th>\n      <th>data2</th>\n    </tr>\n    <tr>\n      <th>key</th>\n      <th></th>\n      <th></th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>constant</th>\n      <td>10</td>\n      <td>19</td>\n    </tr>\n    <tr>\n      <th>first</th>\n      <td>5</td>\n      <td>6</td>\n    </tr>\n  </tbody>\n</table>\n</div>"
+     },
+     "execution_count": 353,
+     "metadata": {},
+     "output_type": "execute_result"
+    }
+   ],
+   "source": [
+    "mapping={\"A\":\"first\",\"B\":\"constant\",\"C\":\"constant\"}\n",
+    "df2.groupby(mapping).sum()"
+   ],
+   "metadata": {
+    "collapsed": false,
+    "ExecuteTime": {
+     "end_time": "2024-07-14T11:32:49.965845100Z",
+     "start_time": "2024-07-14T11:32:47.659040900Z"
+    }
+   },
+   "id": "47c94e6648f79d2",
+   "execution_count": 353
+  },
+  {
+   "cell_type": "markdown",
+   "source": [
+    "* 任意Python函数"
+   ],
+   "metadata": {
+    "collapsed": false
+   },
+   "id": "a997bc5b6aa8c7fc"
+  },
+  {
+   "cell_type": "code",
+   "outputs": [
+    {
+     "data": {
+      "text/plain": "     data1  data2\nkey              \na      2.5    3.0\nb      2.5    4.5\nc      2.5    5.0",
+      "text/html": "<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>data1</th>\n      <th>data2</th>\n    </tr>\n    <tr>\n      <th>key</th>\n      <th></th>\n      <th></th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>a</th>\n      <td>2.5</td>\n      <td>3.0</td>\n    </tr>\n    <tr>\n      <th>b</th>\n      <td>2.5</td>\n      <td>4.5</td>\n    </tr>\n    <tr>\n      <th>c</th>\n      <td>2.5</td>\n      <td>5.0</td>\n    </tr>\n  </tbody>\n</table>\n</div>"
+     },
+     "execution_count": 354,
+     "metadata": {},
+     "output_type": "execute_result"
+    }
+   ],
+   "source": [
+    "df2.groupby(str.lower).mean()"
+   ],
+   "metadata": {
+    "collapsed": false,
+    "ExecuteTime": {
+     "end_time": "2024-07-14T11:32:49.995874Z",
+     "start_time": "2024-07-14T11:32:47.675040400Z"
+    }
+   },
+   "id": "a5069c88b7e11ec9",
+   "execution_count": 354
+  },
+  {
+   "cell_type": "markdown",
+   "source": [
+    "* 多个有效值组成的列表"
+   ],
+   "metadata": {
+    "collapsed": false
+   },
+   "id": "6c5f9790daa58641"
+  },
+  {
+   "cell_type": "code",
+   "outputs": [
+    {
+     "data": {
+      "text/plain": "              data1  data2\nkey key                   \na   first       2.5    3.0\nb   constant    2.5    4.5\nc   constant    2.5    5.0",
+      "text/html": "<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th></th>\n      <th>data1</th>\n      <th>data2</th>\n    </tr>\n    <tr>\n      <th>key</th>\n      <th>key</th>\n      <th></th>\n      <th></th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>a</th>\n      <th>first</th>\n      <td>2.5</td>\n      <td>3.0</td>\n    </tr>\n    <tr>\n      <th>b</th>\n      <th>constant</th>\n      <td>2.5</td>\n      <td>4.5</td>\n    </tr>\n    <tr>\n      <th>c</th>\n      <th>constant</th>\n      <td>2.5</td>\n      <td>5.0</td>\n    </tr>\n  </tbody>\n</table>\n</div>"
+     },
+     "execution_count": 355,
+     "metadata": {},
+     "output_type": "execute_result"
+    }
+   ],
+   "source": [
+    "df2.groupby([str.lower,mapping]).mean()"
+   ],
+   "metadata": {
+    "collapsed": false,
+    "ExecuteTime": {
+     "end_time": "2024-07-14T11:32:50.024854500Z",
+     "start_time": "2024-07-14T11:32:47.692040500Z"
+    }
+   },
+   "id": "4ac03f63e0aa7c1a",
+   "execution_count": 355
+  },
+  {
+   "cell_type": "markdown",
+   "source": [
+    "### 6.2数据透视表 "
+   ],
+   "metadata": {
+    "collapsed": false
+   },
+   "id": "5bb7a9b8b873515c"
+  },
+  {
+   "cell_type": "markdown",
+   "source": [
+    "df.pivot_table()方法 详见参考文档"
+   ],
+   "metadata": {
+    "collapsed": false
+   },
+   "id": "641daf1992445742"
+  },
+  {
+   "cell_type": "markdown",
+   "source": [
+    "## 7.其他\n",
+    "### 7.1向量化字符串操作\n",
+    "### 7.2处理时间序列\n",
+    "### 7.3多级索引：用于多维数据"
+   ],
+   "metadata": {
+    "collapsed": false
+   },
+   "id": "6ed9a9df7fd430d8"
+  },
+  {
+   "cell_type": "code",
+   "outputs": [
+    {
+     "data": {
+      "text/plain": "                population    GDP\nBeiJing   2008        1771  11115\n          2018        2154  30320\nShangHai  2008        2141  14070\n          2018        2424  32680\nShenZheng 2008        1077   7806\n          2018        1303  24222\nHangZhou  2008         798   4789\nHangHOu   2018         981  13468",
+      "text/html": "<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th></th>\n      <th>population</th>\n      <th>GDP</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th rowspan=\"2\" valign=\"top\">BeiJing</th>\n      <th>2008</th>\n      <td>1771</td>\n      <td>11115</td>\n    </tr>\n    <tr>\n      <th>2018</th>\n      <td>2154</td>\n      <td>30320</td>\n    </tr>\n    <tr>\n      <th rowspan=\"2\" valign=\"top\">ShangHai</th>\n      <th>2008</th>\n      <td>2141</td>\n      <td>14070</td>\n    </tr>\n    <tr>\n      <th>2018</th>\n      <td>2424</td>\n      <td>32680</td>\n    </tr>\n    <tr>\n      <th rowspan=\"2\" valign=\"top\">ShenZheng</th>\n      <th>2008</th>\n      <td>1077</td>\n      <td>7806</td>\n    </tr>\n    <tr>\n      <th>2018</th>\n      <td>1303</td>\n      <td>24222</td>\n    </tr>\n    <tr>\n      <th>HangZhou</th>\n      <th>2008</th>\n      <td>798</td>\n      <td>4789</td>\n    </tr>\n    <tr>\n      <th>HangHOu</th>\n      <th>2018</th>\n      <td>981</td>\n      <td>13468</td>\n    </tr>\n  </tbody>\n</table>\n</div>"
+     },
+     "execution_count": 356,
+     "metadata": {},
+     "output_type": "execute_result"
+    }
+   ],
+   "source": [
+    "base_data=np.array([[1771,11115],\n",
+    "                    [2154,30320],\n",
+    "                    [2141,14070],\n",
+    "                    [2424,32680],\n",
+    "                    [1077,7806],\n",
+    "                    [1303,24222],\n",
+    "                    [798,4789],\n",
+    "                    [981,13468]])\n",
+    "data=pd.DataFrame(base_data,index=[[\"BeiJing\",\"BeiJing\",\"ShangHai\",\"ShangHai\",\"ShenZheng\",\"ShenZheng\",\"HangZhou\",\"HangHOu\"]\n",
+    "                                   ,[2008,2018]*4],columns=[\"population\",\"GDP\"])\n",
+    "data"
+   ],
+   "metadata": {
+    "collapsed": false,
+    "ExecuteTime": {
+     "end_time": "2024-07-14T11:32:50.117589500Z",
+     "start_time": "2024-07-14T11:32:47.708040500Z"
+    }
+   },
+   "id": "541bae48f2485140",
+   "execution_count": 356
+  },
+  {
+   "cell_type": "code",
+   "outputs": [
+    {
+     "data": {
+      "text/plain": "                population    GDP\ncity      year                   \nBeiJing   2008        1771  11115\n          2018        2154  30320\nShangHai  2008        2141  14070\n          2018        2424  32680\nShenZheng 2008        1077   7806\n          2018        1303  24222\nHangZhou  2008         798   4789\nHangHOu   2018         981  13468",
+      "text/html": "<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th></th>\n      <th>population</th>\n      <th>GDP</th>\n    </tr>\n    <tr>\n      <th>city</th>\n      <th>year</th>\n      <th></th>\n      <th></th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th rowspan=\"2\" valign=\"top\">BeiJing</th>\n      <th>2008</th>\n      <td>1771</td>\n      <td>11115</td>\n    </tr>\n    <tr>\n      <th>2018</th>\n      <td>2154</td>\n      <td>30320</td>\n    </tr>\n    <tr>\n      <th rowspan=\"2\" valign=\"top\">ShangHai</th>\n      <th>2008</th>\n      <td>2141</td>\n      <td>14070</td>\n    </tr>\n    <tr>\n      <th>2018</th>\n      <td>2424</td>\n      <td>32680</td>\n    </tr>\n    <tr>\n      <th rowspan=\"2\" valign=\"top\">ShenZheng</th>\n      <th>2008</th>\n      <td>1077</td>\n      <td>7806</td>\n    </tr>\n    <tr>\n      <th>2018</th>\n      <td>1303</td>\n      <td>24222</td>\n    </tr>\n    <tr>\n      <th>HangZhou</th>\n      <th>2008</th>\n      <td>798</td>\n      <td>4789</td>\n    </tr>\n    <tr>\n      <th>HangHOu</th>\n      <th>2018</th>\n      <td>981</td>\n      <td>13468</td>\n    </tr>\n  </tbody>\n</table>\n</div>"
+     },
+     "execution_count": 357,
+     "metadata": {},
+     "output_type": "execute_result"
+    }
+   ],
+   "source": [
+    "data.index.names=[\"city\",\"year\"]\n",
+    "data"
+   ],
+   "metadata": {
+    "collapsed": false,
+    "ExecuteTime": {
+     "end_time": "2024-07-14T11:32:50.146274300Z",
+     "start_time": "2024-07-14T11:32:47.723040600Z"
+    }
+   },
+   "id": "ffbef4f7eb3af15a",
+   "execution_count": 357
+  },
+  {
+   "cell_type": "code",
+   "outputs": [
+    {
+     "data": {
+      "text/plain": "city       year\nBeiJing    2008    11115\n           2018    30320\nShangHai   2008    14070\n           2018    32680\nShenZheng  2008     7806\n           2018    24222\nHangZhou   2008     4789\nHangHOu    2018    13468\nName: GDP, dtype: int32"
+     },
+     "execution_count": 358,
+     "metadata": {},
+     "output_type": "execute_result"
+    }
+   ],
+   "source": [
+    "data[\"GDP\"]"
+   ],
+   "metadata": {
+    "collapsed": false,
+    "ExecuteTime": {
+     "end_time": "2024-07-14T11:32:50.167273200Z",
+     "start_time": "2024-07-14T11:32:47.738042Z"
+    }
+   },
+   "id": "a6b8997607bfabaa",
+   "execution_count": 358
+  },
+  {
+   "cell_type": "code",
+   "outputs": [
+    {
+     "data": {
+      "text/plain": "year\n2008    14070\n2018    32680\nName: GDP, dtype: int32"
+     },
+     "execution_count": 359,
+     "metadata": {},
+     "output_type": "execute_result"
+    }
+   ],
+   "source": [
+    "data.loc[\"ShangHai\",\"GDP\"]"
+   ],
+   "metadata": {
+    "collapsed": false,
+    "ExecuteTime": {
+     "end_time": "2024-07-14T11:32:50.172306900Z",
+     "start_time": "2024-07-14T11:32:47.754547600Z"
+    }
+   },
+   "id": "fb0c096bb2c6f0e5",
+   "execution_count": 359
+  },
+  {
+   "cell_type": "code",
+   "outputs": [
+    {
+     "data": {
+      "text/plain": "population     2424\nGDP           32680\nName: (ShangHai, 2018), dtype: int32"
+     },
+     "execution_count": 360,
+     "metadata": {},
+     "output_type": "execute_result"
+    }
+   ],
+   "source": [
+    "data.loc[\"ShangHai\",2018]"
+   ],
+   "metadata": {
+    "collapsed": false,
+    "ExecuteTime": {
+     "end_time": "2024-07-14T11:32:50.195486400Z",
+     "start_time": "2024-07-14T11:32:47.770547700Z"
+    }
+   },
+   "id": "1f5516edeca74ca5",
+   "execution_count": 360
+  },
+  {
+   "cell_type": "code",
+   "outputs": [
+    {
+     "data": {
+      "text/plain": "32680"
+     },
+     "execution_count": 361,
+     "metadata": {},
+     "output_type": "execute_result"
+    }
+   ],
+   "source": [
+    "data.loc[\"ShangHai\", 2018][\"GDP\"]\n",
+    "# data.loc[\"ShangHai\", 2018].GDP "
+   ],
+   "metadata": {
+    "collapsed": false,
+    "ExecuteTime": {
+     "end_time": "2024-07-14T11:32:50.213587900Z",
+     "start_time": "2024-07-14T11:32:47.785547300Z"
+    }
+   },
+   "id": "385e880eb288936f",
+   "execution_count": 361
+  }
+ ],
+ "metadata": {
+  "kernelspec": {
+   "display_name": "Python 3",
+   "language": "python",
+   "name": "python3"
+  },
+  "language_info": {
+   "codemirror_mode": {
+    "name": "ipython",
+    "version": 2
+   },
+   "file_extension": ".py",
+   "mimetype": "text/x-python",
+   "name": "python",
+   "nbconvert_exporter": "python",
+   "pygments_lexer": "ipython2",
+   "version": "2.7.6"
+  }
+ },
+ "nbformat": 4,
+ "nbformat_minor": 5
+}
Index: 生成器.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/生成器.py b/生成器.py
new file mode 100644
--- /dev/null	
+++ b/生成器.py	
@@ -0,0 +1,45 @@
+# 创建生成器
+
+# 本质是对象，
+my_generator = (i * 2 for i in range(5))
+print(my_generator)
+
+value = next(my_generator)
+print(value)
+
+for value in my_generator:
+    print(value)
+
+
+def generator(n):
+    for i in range(n):
+        print("生成器正在运行")
+        yield i
+        print("生成器运行结束")
+
+
+g = generator(5)
+# print(next(g))
+# print(next(g))
+# print(next(g))
+# print(next(g))
+# print(next(g))
+#
+# print(next(g))
+# print(next(g))
+
+for i in g:
+    print(i)
+
+
+def fib(max):
+    n, a, b = 1, 1, 1,
+    while n <= max:
+        yield a
+        a, b = b, a + b
+        n += 1
+
+
+for i in fib(10):
+    print(i)
+
Index: Matplotlib库.ipynb
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Matplotlib库.ipynb b/Matplotlib库.ipynb
new file mode 100644
--- /dev/null	
+++ b/Matplotlib库.ipynb	
@@ -0,0 +1,2091 @@
+{
+ "cells": [
+  {
+   "cell_type": "markdown",
+   "source": [
+    "## 1.Matplotlib库\n",
+    "### 1.1折线图"
+   ],
+   "metadata": {
+    "collapsed": false
+   },
+   "id": "a68abda03d0013c1"
+  },
+  {
+   "cell_type": "code",
+   "outputs": [],
+   "source": [
+    "import matplotlib.pyplot as plt\n",
+    "import numpy as np\n",
+    "\n",
+    "plt.style.use(\"seaborn-whitegrid\")"
+   ],
+   "metadata": {
+    "collapsed": false,
+    "ExecuteTime": {
+     "end_time": "2024-07-15T08:23:57.587566500Z",
+     "start_time": "2024-07-15T08:23:57.421552200Z"
+    }
+   },
+   "id": "871837d18e4a97ba",
+   "execution_count": 2
+  },
+  {
+   "cell_type": "code",
+   "outputs": [
+    {
+     "data": {
+      "text/plain": "[<matplotlib.lines.Line2D at 0x24432f68ca0>]"
+     },
+     "execution_count": 3,
+     "metadata": {},
+     "output_type": "execute_result"
+    },
+    {
+     "data": {
+      "text/plain": "<Figure size 640x480 with 1 Axes>",
+      "image/png": ""
+     },
+     "metadata": {},
+     "output_type": "display_data"
+    }
+   ],
+   "source": [
+    "x = np.linspace(0, 2 * np.pi, 100)\n",
+    "plt.plot(x, np.sin(x))"
+   ],
+   "metadata": {
+    "collapsed": false,
+    "ExecuteTime": {
+     "end_time": "2024-07-15T08:24:00.701470900Z",
+     "start_time": "2024-07-15T08:24:00.606408900Z"
+    }
+   },
+   "id": "9afbe0545737405d",
+   "execution_count": 3
+  },
+  {
+   "cell_type": "markdown",
+   "source": [
+    "* 绘制多条曲线"
+   ],
+   "metadata": {
+    "collapsed": false
+   },
+   "id": "767d0b865d0d5be3"
+  },
+  {
+   "cell_type": "code",
+   "outputs": [
+    {
+     "data": {
+      "text/plain": "[<matplotlib.lines.Line2D at 0x29bd0d025e0>]"
+     },
+     "execution_count": 6,
+     "metadata": {},
+     "output_type": "execute_result"
+    },
+    {
+     "data": {
+      "text/plain": "<Figure size 640x480 with 1 Axes>",
+      "image/png": ""
+     },
+     "metadata": {},
+     "output_type": "display_data"
+    }
+   ],
+   "source": [
+    "plt.plot(x, np.cos(x))\n",
+    "plt.plot(x, np.sin(x))"
+   ],
+   "metadata": {
+    "collapsed": false,
+    "ExecuteTime": {
+     "end_time": "2024-07-14T11:35:27.252780500Z",
+     "start_time": "2024-07-14T11:35:27.142925400Z"
+    }
+   },
+   "id": "ab97d556680302ef",
+   "execution_count": 6
+  },
+  {
+   "cell_type": "markdown",
+   "source": [
+    "* 【1】调整线条颜色和风格\n",
+    "* * 调整线条颜色"
+   ],
+   "metadata": {
+    "collapsed": false
+   },
+   "id": "2a32937c5d58391c"
+  },
+  {
+   "cell_type": "code",
+   "outputs": [
+    {
+     "data": {
+      "text/plain": "<Figure size 640x480 with 1 Axes>",
+      "image/png": ""
+     },
+     "metadata": {},
+     "output_type": "display_data"
+    }
+   ],
+   "source": [
+    "offsets = np.linspace(0, np.pi, 5)\n",
+    "colors = ['blue', 'g', 'r', 'yellow', 'pink']\n",
+    "for offset, color in zip(offsets, colors):\n",
+    "    plt.plot(x, np.sin(x - offset), color=color)"
+   ],
+   "metadata": {
+    "collapsed": false,
+    "ExecuteTime": {
+     "end_time": "2024-07-14T07:01:38.522547700Z",
+     "start_time": "2024-07-14T07:01:38.447866600Z"
+    }
+   },
+   "id": "4cb6eba7c5006030",
+   "execution_count": 4
+  },
+  {
+   "cell_type": "markdown",
+   "source": [
+    "* * 调整线条风格"
+   ],
+   "metadata": {
+    "collapsed": false
+   },
+   "id": "4f2c7e9235f19c40"
+  },
+  {
+   "cell_type": "code",
+   "outputs": [
+    {
+     "data": {
+      "text/plain": "<Figure size 640x480 with 1 Axes>",
+      "image/png": ""
+     },
+     "metadata": {},
+     "output_type": "display_data"
+    }
+   ],
+   "source": [
+    " x = np.linspace(0, 10, 11)\n",
+    "offset = list(range(8))\n",
+    "linestyles = ['solid', 'dashed', 'dashdot', 'dotted', '-', '--', '-.', ':']\n",
+    "for offset, linestyle in zip(offset, linestyles):\n",
+    "    plt.plot(x, x + offset, linestyle=linestyle)"
+   ],
+   "metadata": {
+    "collapsed": false,
+    "ExecuteTime": {
+     "end_time": "2024-07-14T07:07:21.969801900Z",
+     "start_time": "2024-07-14T07:07:21.904523100Z"
+    }
+   },
+   "id": "ed14f0e0cab1b36b",
+   "execution_count": 5
+  },
+  {
+   "cell_type": "markdown",
+   "source": [
+    "* * 调整线宽"
+   ],
+   "metadata": {
+    "collapsed": false
+   },
+   "id": "31b0f5a17c86364d"
+  },
+  {
+   "cell_type": "code",
+   "outputs": [
+    {
+     "data": {
+      "text/plain": "<Figure size 640x480 with 1 Axes>",
+      "image/png": ""
+     },
+     "metadata": {},
+     "output_type": "display_data"
+    }
+   ],
+   "source": [
+    "x = np.linspace(0, 10, 11)\n",
+    "offset = list(range(0, 12, 3))\n",
+    "linewidths = (i * 2 for i in range(1, 5))\n",
+    "for offset, linewidth in zip(offset, linewidths):\n",
+    "    plt.plot(x, x + offset, linewidth=linewidth)"
+   ],
+   "metadata": {
+    "collapsed": false,
+    "ExecuteTime": {
+     "end_time": "2024-07-14T07:10:38.821908500Z",
+     "start_time": "2024-07-14T07:10:38.734008800Z"
+    }
+   },
+   "id": "4126a6615dd4f4f0",
+   "execution_count": 7
+  },
+  {
+   "cell_type": "markdown",
+   "source": [
+    "* * 调整数据点标记"
+   ],
+   "metadata": {
+    "collapsed": false
+   },
+   "id": "5dee5c468bc14aea"
+  },
+  {
+   "cell_type": "code",
+   "outputs": [
+    {
+     "data": {
+      "text/plain": "<Figure size 640x480 with 1 Axes>",
+      "image/png": ""
+     },
+     "metadata": {},
+     "output_type": "display_data"
+    }
+   ],
+   "source": [
+    "x = np.linspace(0, 10, 11)\n",
+    "offsets = list(range(0, 12, 3))\n",
+    "markers = [\"*\", '+', 'o', 's']\n",
+    "for offset, marker in zip(offsets, markers):\n",
+    "    plt.plot(x, x + offset, marker=marker)"
+   ],
+   "metadata": {
+    "collapsed": false,
+    "ExecuteTime": {
+     "end_time": "2024-07-14T07:12:17.632509900Z",
+     "start_time": "2024-07-14T07:12:17.573573700Z"
+    }
+   },
+   "id": "7af4d231e93e51b3",
+   "execution_count": 8
+  },
+  {
+   "cell_type": "code",
+   "outputs": [
+    {
+     "data": {
+      "text/plain": "<Figure size 640x480 with 1 Axes>",
+      "image/png": ""
+     },
+     "metadata": {},
+     "output_type": "display_data"
+    }
+   ],
+   "source": [
+    "x = np.linspace(0, 10, 11)\n",
+    "offsets = list(range(0, 12, 3))\n",
+    "markers = [\"*\", '+', 'o', 's']\n",
+    "for offset, marker in zip(offsets, markers):\n",
+    "    plt.plot(x, x + offset, marker=marker, markersize=10)"
+   ],
+   "metadata": {
+    "collapsed": false,
+    "ExecuteTime": {
+     "end_time": "2024-07-14T07:12:47.439056300Z",
+     "start_time": "2024-07-14T07:12:47.376700800Z"
+    }
+   },
+   "id": "a0b046e38271d59a",
+   "execution_count": 9
+  },
+  {
+   "cell_type": "markdown",
+   "source": [
+    "* * 颜色跟风格设置的简写"
+   ],
+   "metadata": {
+    "collapsed": false
+   },
+   "id": "76f4c9c476474421"
+  },
+  {
+   "cell_type": "code",
+   "outputs": [
+    {
+     "data": {
+      "text/plain": "<Figure size 640x480 with 1 Axes>",
+      "image/png": "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"
+     },
+     "metadata": {},
+     "output_type": "display_data"
+    }
+   ],
+   "source": [
+    "x = np.linspace(0, 10, 11)\n",
+    "offsets = list(range(0, 8, 2))\n",
+    "color_linestyles = ['g-', 'b--', 'k-.', 'r:']\n",
+    "for offset, color_linestyle in zip(offsets, color_linestyles):\n",
+    "    plt.plot(x, x + offset, color_linestyle)"
+   ],
+   "metadata": {
+    "collapsed": false,
+    "ExecuteTime": {
+     "end_time": "2024-07-14T07:15:28.010904Z",
+     "start_time": "2024-07-14T07:15:27.953917800Z"
+    }
+   },
+   "id": "df0705ada121f888",
+   "execution_count": 11
+  },
+  {
+   "cell_type": "code",
+   "outputs": [
+    {
+     "data": {
+      "text/plain": "<Figure size 640x480 with 1 Axes>",
+      "image/png": ""
+     },
+     "metadata": {},
+     "output_type": "display_data"
+    }
+   ],
+   "source": [
+    "x = np.linspace(0, 10, 11)\n",
+    "offsets = list(range(0, 8, 2))\n",
+    "color_marker_linestyles = ['g*-', 'b+--', 'ko-.', 'rs:']\n",
+    "for offset, color_marker_linestyle in zip(offsets, color_marker_linestyles):\n",
+    "    plt.plot(x, x + offset, color_marker_linestyle)"
+   ],
+   "metadata": {
+    "collapsed": false,
+    "ExecuteTime": {
+     "end_time": "2024-07-14T07:16:50.675613200Z",
+     "start_time": "2024-07-14T07:16:50.615646800Z"
+    }
+   },
+   "id": "baca77fe0d1e6c4d",
+   "execution_count": 12
+  },
+  {
+   "cell_type": "markdown",
+   "source": [
+    "* 【2】调整坐标轴\n",
+    "* * xlim，ylim"
+   ],
+   "metadata": {
+    "collapsed": false
+   },
+   "id": "d67464d24e274d08"
+  },
+  {
+   "cell_type": "code",
+   "outputs": [
+    {
+     "data": {
+      "text/plain": "(-1.5, 1.5)"
+     },
+     "execution_count": 13,
+     "metadata": {},
+     "output_type": "execute_result"
+    },
+    {
+     "data": {
+      "text/plain": "<Figure size 640x480 with 1 Axes>",
+      "image/png": ""
+     },
+     "metadata": {},
+     "output_type": "display_data"
+    }
+   ],
+   "source": [
+    "x = np.linspace(0, 2 * np.pi, 100)\n",
+    "plt.plot(x, np.sin(x))\n",
+    "plt.xlim(-1, 7)\n",
+    "plt.ylim(-1.5, 1.5)"
+   ],
+   "metadata": {
+    "collapsed": false,
+    "ExecuteTime": {
+     "end_time": "2024-07-14T07:19:16.408844800Z",
+     "start_time": "2024-07-14T07:19:16.336844900Z"
+    }
+   },
+   "id": "d70d898acfe9ec29",
+   "execution_count": 13
+  },
+  {
+   "cell_type": "markdown",
+   "source": [
+    "* * axis"
+   ],
+   "metadata": {
+    "collapsed": false
+   },
+   "id": "c1064d9175e9a97c"
+  },
+  {
+   "cell_type": "code",
+   "outputs": [
+    {
+     "data": {
+      "text/plain": "(-2.0, 8.0, -2.0, 2.0)"
+     },
+     "execution_count": 14,
+     "metadata": {},
+     "output_type": "execute_result"
+    },
+    {
+     "data": {
+      "text/plain": "<Figure size 640x480 with 1 Axes>",
+      "image/png": ""
+     },
+     "metadata": {},
+     "output_type": "display_data"
+    }
+   ],
+   "source": [
+    "x = np.linspace(0, 2 * np.pi, 100)\n",
+    "plt.plot(x, np.sin(x))\n",
+    "plt.axis([-2, 8, -2, 2])"
+   ],
+   "metadata": {
+    "collapsed": false,
+    "ExecuteTime": {
+     "end_time": "2024-07-14T07:20:08.234369Z",
+     "start_time": "2024-07-14T07:20:08.166632200Z"
+    }
+   },
+   "id": "e25b254a041ea679",
+   "execution_count": 14
+  },
+  {
+   "cell_type": "code",
+   "outputs": [
+    {
+     "data": {
+      "text/plain": "(-0.3141592653589793,\n 6.5973445725385655,\n -1.0998615404412626,\n 1.0998615404412626)"
+     },
+     "execution_count": 15,
+     "metadata": {},
+     "output_type": "execute_result"
+    },
+    {
+     "data": {
+      "text/plain": "<Figure size 640x480 with 1 Axes>",
+      "image/png": ""
+     },
+     "metadata": {},
+     "output_type": "display_data"
+    }
+   ],
+   "source": [
+    "x = np.linspace(0, 2 * np.pi, 100)\n",
+    "plt.plot(x, np.sin(x))\n",
+    "plt.axis(\"tight\")"
+   ],
+   "metadata": {
+    "collapsed": false,
+    "ExecuteTime": {
+     "end_time": "2024-07-14T07:20:33.687822800Z",
+     "start_time": "2024-07-14T07:20:33.617810900Z"
+    }
+   },
+   "id": "a1cdd5de5a84a290",
+   "execution_count": 15
+  },
+  {
+   "cell_type": "code",
+   "outputs": [
+    {
+     "data": {
+      "text/plain": "(-0.3141592653589793,\n 6.5973445725385655,\n -1.0998615404412626,\n 1.0998615404412626)"
+     },
+     "execution_count": 16,
+     "metadata": {},
+     "output_type": "execute_result"
+    },
+    {
+     "data": {
+      "text/plain": "<Figure size 640x480 with 1 Axes>",
+      "image/png": "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zSvs379fUVFRWrRokfr06aNrr71WEydOrBD/MK4wgVFQUHBGXEgq/ZonMs7H+PHjtX37dj355JNWj+J13nvvPU2aNEk7duyoEP/CMoPL5dLLL7+sl156SUFBQVaP43UyMzNL/35+9913NXLkSC1ZskTjxo2zejSv4HQ6lZGRoXnz5mns2LEaOXKkZs2apY8//tjq0S5ahTkHIzAw8Hch8evX/E+PczV+/HjNmDFD77zzjmJiYqwex+v8en6By+XSM888o2efffZ3YV/ZTJgwQW3atDnjKBj+T1RUlNauXavw8HDZbDbFxsbK4/Hob3/7m0aNGuX1990ob35+fsrPz9c///lPRUVFSTodZXPnztV9991n8XQXp8IERu3atXXixAmVlJSUXro0OztbQUFBCgsLs3g6+ILXXntNc+fO1fjx4zn8/xtHjx5VYmKievXqVfpYs2bNVFxcrPz8fEVERFg4nfW+/vprHT16tPT8r1//YbN06VJt3rzZytG8RrVq1c74umnTpnK5XMrNza30z5/IyEgFBgaWxoUkNW7cWIcOHbJwKnNUmLdIYmNj5efnp8TExNLHNm7cqLi4OO51gj81YcIEzZs3T2+//bb69u1r9The5cCBA3rssceUlZVV+tjWrVsVERFR6V8cJGnWrFlasmSJFi1apEWLFqlnz57q2bOnFi1aZPVoXmHFihWKj48/487ZO3bsULVq1Xj+SGrXrp1cLpf27t1b+tiePXvOCA5fVWFeeYODg9W/f3+NGTNGW7Zs0bJlyzR9+nQNGTLE6tHg5Xbv3q33339fDz74oDp27Kjs7OzSPzj9tkjr1q01evRo7dq1Sz/99JPGjx+vhx56yOrRvEJUVJQaNmxY+qdKlSqqUqWKGjZsaPVoXqF9+/YKDAzUCy+8oD179uinn37SuHHj9MADD1g9mldo0qSJrr76ao0aNUopKSlasWKFPvzwQ915551Wj3bRKtTNzgoKCjRmzBj95z//UWhoqO6//37dc889Vo/llVq0aKGZM2cqPj7e6lEs9+GHH+qf//znH35v586dl3ga75SVlaXXXntNCQkJCg4O1l133aXhw4fLZrNZPZrX+fUqnv/4xz8snsR7pKWl6e9//7sSExNVpUoV3XHHHXr00Ud5/vzi5MmTeu211/T9998rODhYgwYNqhDrU6ECAwAAeIcK8xYJAADwHgQGAAAwHYEBAABMR2AAAADTERgAAMB0BAYAADAdgQEAAExHYAAAANMRGAAAwHQEBgAAMB2BAQAATEdgAAAA0/1/4OzFewZl+LQAAAAASUVORK5CYII="
+     },
+     "metadata": {},
+     "output_type": "display_data"
+    }
+   ],
+   "source": [
+    "x = np.linspace(0, 2 * np.pi, 100)\n",
+    "plt.plot(x, np.sin(x))\n",
+    "plt.axis(\"equal\")"
+   ],
+   "metadata": {
+    "collapsed": false,
+    "ExecuteTime": {
+     "end_time": "2024-07-14T07:20:49.920958300Z",
+     "start_time": "2024-07-14T07:20:49.862494900Z"
+    }
+   },
+   "id": "37b10024b64899b0",
+   "execution_count": 16
+  },
+  {
+   "cell_type": "markdown",
+   "source": [
+    "* * 对数坐标"
+   ],
+   "metadata": {
+    "collapsed": false
+   },
+   "id": "5d01c852d9c677f1"
+  },
+  {
+   "cell_type": "code",
+   "outputs": [
+    {
+     "data": {
+      "text/plain": "<Figure size 640x480 with 1 Axes>",
+      "image/png": ""
+     },
+     "metadata": {},
+     "output_type": "display_data"
+    }
+   ],
+   "source": [
+    "x = np.logspace(0, 5, 100)\n",
+    "plt.plot(x, np.log(x))\n",
+    "plt.xscale(\"log\")"
+   ],
+   "metadata": {
+    "collapsed": false,
+    "ExecuteTime": {
+     "end_time": "2024-07-14T07:22:14.923994300Z",
+     "start_time": "2024-07-14T07:22:14.651508700Z"
+    }
+   },
+   "id": "157e08fdbc4f1540",
+   "execution_count": 17
+  },
+  {
+   "cell_type": "markdown",
+   "source": [
+    "* * 调整坐标轴刻度"
+   ],
+   "metadata": {
+    "collapsed": false
+   },
+   "id": "bf0e35b23a51d8c1"
+  },
+  {
+   "cell_type": "code",
+   "outputs": [
+    {
+     "data": {
+      "text/plain": "([<matplotlib.axis.XTick at 0x2d4fda92dc0>,\n  <matplotlib.axis.XTick at 0x2d4fda92c40>,\n  <matplotlib.axis.XTick at 0x2d4fdade700>,\n  <matplotlib.axis.XTick at 0x2d4fd9c0670>,\n  <matplotlib.axis.XTick at 0x2d4fd9dbf40>,\n  <matplotlib.axis.XTick at 0x2d4fd9db1c0>,\n  <matplotlib.axis.XTick at 0x2d4fd9db790>,\n  <matplotlib.axis.XTick at 0x2d4fd94faf0>,\n  <matplotlib.axis.XTick at 0x2d4fd9db370>,\n  <matplotlib.axis.XTick at 0x2d4fd9c0580>,\n  <matplotlib.axis.XTick at 0x2d4fd94f370>,\n  <matplotlib.axis.XTick at 0x2d4fd909d00>],\n [Text(0, 0, ''),\n  Text(0, 0, ''),\n  Text(0, 0, ''),\n  Text(0, 0, ''),\n  Text(0, 0, ''),\n  Text(0, 0, ''),\n  Text(0, 0, ''),\n  Text(0, 0, ''),\n  Text(0, 0, ''),\n  Text(0, 0, ''),\n  Text(0, 0, ''),\n  Text(0, 0, '')])"
+     },
+     "execution_count": 18,
+     "metadata": {},
+     "output_type": "execute_result"
+    },
+    {
+     "data": {
+      "text/plain": "<Figure size 640x480 with 1 Axes>",
+      "image/png": ""
+     },
+     "metadata": {},
+     "output_type": "display_data"
+    }
+   ],
+   "source": [
+    "x = np.linspace(0, 10, 100)\n",
+    "plt.plot(x, x ** 2)\n",
+    "plt.xticks(np.arange(0, 12, step=1))"
+   ],
+   "metadata": {
+    "collapsed": false,
+    "ExecuteTime": {
+     "end_time": "2024-07-14T07:24:20.122879800Z",
+     "start_time": "2024-07-14T07:24:20.060877400Z"
+    }
+   },
+   "id": "d4eec86c5a2cefab",
+   "execution_count": 18
+  },
+  {
+   "cell_type": "code",
+   "outputs": [
+    {
+     "data": {
+      "text/plain": "([<matplotlib.axis.YTick at 0x2d4feb943d0>,\n  <matplotlib.axis.YTick at 0x2d4feb94eb0>,\n  <matplotlib.axis.YTick at 0x2d4fd7c9ca0>,\n  <matplotlib.axis.YTick at 0x2d4fd9f9b80>,\n  <matplotlib.axis.YTick at 0x2d4fd9f9e50>,\n  <matplotlib.axis.YTick at 0x2d4fd9e6d30>,\n  <matplotlib.axis.YTick at 0x2d4fd9d4340>,\n  <matplotlib.axis.YTick at 0x2d4fd9d7820>,\n  <matplotlib.axis.YTick at 0x2d4fd9ce040>,\n  <matplotlib.axis.YTick at 0x2d4fd9ce700>,\n  <matplotlib.axis.YTick at 0x2d4fd9cee50>],\n [Text(0, 0, ''),\n  Text(0, 0, ''),\n  Text(0, 0, ''),\n  Text(0, 0, ''),\n  Text(0, 0, ''),\n  Text(0, 0, ''),\n  Text(0, 0, ''),\n  Text(0, 0, ''),\n  Text(0, 0, ''),\n  Text(0, 0, ''),\n  Text(0, 0, '')])"
+     },
+     "execution_count": 20,
+     "metadata": {},
+     "output_type": "execute_result"
+    },
+    {
+     "data": {
+      "text/plain": "<Figure size 640x480 with 1 Axes>",
+      "image/png": ""
+     },
+     "metadata": {},
+     "output_type": "display_data"
+    }
+   ],
+   "source": [
+    "x = np.linspace(0, 10, 100)\n",
+    "plt.plot(x, x ** 2)\n",
+    "plt.xticks(np.arange(0, 12, step=1))\n",
+    "plt.yticks(np.arange(0, 110, step=10))"
+   ],
+   "metadata": {
+    "collapsed": false,
+    "ExecuteTime": {
+     "end_time": "2024-07-14T07:25:35.982392800Z",
+     "start_time": "2024-07-14T07:25:35.898861200Z"
+    }
+   },
+   "id": "3110f686de26e66e",
+   "execution_count": 20
+  },
+  {
+   "cell_type": "markdown",
+   "source": [
+    "* * 调整刻度样式"
+   ],
+   "metadata": {
+    "collapsed": false
+   },
+   "id": "31482c8bc753c904"
+  },
+  {
+   "cell_type": "code",
+   "outputs": [
+    {
+     "data": {
+      "text/plain": "<Figure size 640x480 with 1 Axes>",
+      "image/png": "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"
+     },
+     "metadata": {},
+     "output_type": "display_data"
+    }
+   ],
+   "source": [
+    "x = np.linspace(0, 10, 100)\n",
+    "plt.plot(x, x ** 2)\n",
+    "plt.tick_params(axis=\"both\", labelsize=15)"
+   ],
+   "metadata": {
+    "collapsed": false,
+    "ExecuteTime": {
+     "end_time": "2024-07-14T07:27:39.255552400Z",
+     "start_time": "2024-07-14T07:27:39.194625500Z"
+    }
+   },
+   "id": "faeed42d6225bc51",
+   "execution_count": 21
+  },
+  {
+   "cell_type": "markdown",
+   "source": [
+    "* 【3】设置图形标签"
+   ],
+   "metadata": {
+    "collapsed": false
+   },
+   "id": "548e49619b2c935d"
+  },
+  {
+   "cell_type": "code",
+   "outputs": [
+    {
+     "data": {
+      "text/plain": "Text(0, 0.5, 'sin(x)')"
+     },
+     "execution_count": 22,
+     "metadata": {},
+     "output_type": "execute_result"
+    },
+    {
+     "data": {
+      "text/plain": "<Figure size 640x480 with 1 Axes>",
+      "image/png": ""
+     },
+     "metadata": {},
+     "output_type": "display_data"
+    }
+   ],
+   "source": [
+    "x = np.linspace(0, 2 * np.pi, 100)\n",
+    "plt.plot(x, np.sin(x))\n",
+    "plt.title(\"A Sine Curve\", fontsize=20)\n",
+    "plt.xlabel(\"x\", fontsize=15)\n",
+    "plt.ylabel(\"sin(x)\", fontsize=15)"
+   ],
+   "metadata": {
+    "collapsed": false,
+    "ExecuteTime": {
+     "end_time": "2024-07-14T07:29:30.447747Z",
+     "start_time": "2024-07-14T07:29:30.373745200Z"
+    }
+   },
+   "id": "ae37aab712e4aa35",
+   "execution_count": 22
+  },
+  {
+   "cell_type": "markdown",
+   "source": [
+    "* 【4】设置图例\n",
+    "* * 默认"
+   ],
+   "metadata": {
+    "collapsed": false
+   },
+   "id": "66bab2126f19d8ea"
+  },
+  {
+   "cell_type": "code",
+   "outputs": [
+    {
+     "data": {
+      "text/plain": "<matplotlib.legend.Legend at 0x2d4fd812d90>"
+     },
+     "execution_count": 23,
+     "metadata": {},
+     "output_type": "execute_result"
+    },
+    {
+     "data": {
+      "text/plain": "<Figure size 640x480 with 1 Axes>",
+      "image/png": ""
+     },
+     "metadata": {},
+     "output_type": "display_data"
+    }
+   ],
+   "source": [
+    "x = np.linspace(0, 2 * np.pi, 100)\n",
+    "plt.plot(x, np.sin(x), 'b-', label=\"sin(x)\")\n",
+    "plt.plot(x, np.cos(x), 'r--', label=\"cos(x)\")\n",
+    "plt.legend()"
+   ],
+   "metadata": {
+    "collapsed": false,
+    "ExecuteTime": {
+     "end_time": "2024-07-14T07:31:08.952092100Z",
+     "start_time": "2024-07-14T07:31:08.870092300Z"
+    }
+   },
+   "id": "50730a3c70d1f4d8",
+   "execution_count": 23
+  },
+  {
+   "cell_type": "markdown",
+   "source": [
+    "* * 修饰图例"
+   ],
+   "metadata": {
+    "collapsed": false
+   },
+   "id": "a26dbf7e2022dbb9"
+  },
+  {
+   "cell_type": "code",
+   "outputs": [
+    {
+     "data": {
+      "text/plain": "<matplotlib.legend.Legend at 0x2d4fd96fe80>"
+     },
+     "execution_count": 26,
+     "metadata": {},
+     "output_type": "execute_result"
+    },
+    {
+     "data": {
+      "text/plain": "<Figure size 640x480 with 1 Axes>",
+      "image/png": ""
+     },
+     "metadata": {},
+     "output_type": "display_data"
+    }
+   ],
+   "source": [
+    "x = np.linspace(0, 2 * np.pi, 100)\n",
+    "plt.plot(x, np.sin(x), 'b-', label=\"sin(x)\")\n",
+    "plt.plot(x, np.cos(x), 'r--', label=\"cos(x)\")\n",
+    "plt.legend()\n",
+    "plt.ylim(-1.5, 2)\n",
+    "plt.legend(loc=\"upper center\", frameon=True, fontsize=15)"
+   ],
+   "metadata": {
+    "collapsed": false,
+    "ExecuteTime": {
+     "end_time": "2024-07-14T07:32:58.288512800Z",
+     "start_time": "2024-07-14T07:32:58.214061900Z"
+    }
+   },
+   "id": "2c4d9742efc3d2f",
+   "execution_count": 26
+  },
+  {
+   "cell_type": "markdown",
+   "source": [
+    "* 【5】添加文字和箭头\n",
+    "* * 添加文字"
+   ],
+   "metadata": {
+    "collapsed": false
+   },
+   "id": "3f4f16d9b79ccba0"
+  },
+  {
+   "cell_type": "code",
+   "outputs": [
+    {
+     "data": {
+      "text/plain": "Text(3.5, 0.5, 'y=sin(x)')"
+     },
+     "execution_count": 27,
+     "metadata": {},
+     "output_type": "execute_result"
+    },
+    {
+     "data": {
+      "text/plain": "<Figure size 640x480 with 1 Axes>",
+      "image/png": ""
+     },
+     "metadata": {},
+     "output_type": "display_data"
+    }
+   ],
+   "source": [
+    "x = np.linspace(0, 2 * np.pi, 100)\n",
+    "plt.plot(x, np.sin(x), 'b-')\n",
+    "plt.text(3.5, 0.5, \"y=sin(x)\", fontsize=15)"
+   ],
+   "metadata": {
+    "collapsed": false,
+    "ExecuteTime": {
+     "end_time": "2024-07-14T07:34:42.781482Z",
+     "start_time": "2024-07-14T07:34:42.710474900Z"
+    }
+   },
+   "id": "e097fbe6c98a9522",
+   "execution_count": 27
+  },
+  {
+   "cell_type": "markdown",
+   "source": [
+    "* * 添加箭头"
+   ],
+   "metadata": {
+    "collapsed": false
+   },
+   "id": "126b340cd0144998"
+  },
+  {
+   "cell_type": "code",
+   "outputs": [
+    {
+     "data": {
+      "text/plain": "Text(4.5, 0, 'local min')"
+     },
+     "execution_count": 28,
+     "metadata": {},
+     "output_type": "execute_result"
+    },
+    {
+     "data": {
+      "text/plain": "<Figure size 640x480 with 1 Axes>",
+      "image/png": ""
+     },
+     "metadata": {},
+     "output_type": "display_data"
+    }
+   ],
+   "source": [
+    "x = np.linspace(0, 2 * np.pi, 100)\n",
+    "plt.plot(x, np.sin(x), 'b-')\n",
+    "plt.annotate('local min', xy=(1.5 * np.pi, -1), xytext=(4.5, 0),\n",
+    "             arrowprops=dict(facecolor='black', shrink=0.1))"
+   ],
+   "metadata": {
+    "collapsed": false,
+    "ExecuteTime": {
+     "end_time": "2024-07-14T07:37:15.084393100Z",
+     "start_time": "2024-07-14T07:37:14.995393300Z"
+    }
+   },
+   "id": "ea1539826db6fcb9",
+   "execution_count": 28
+  },
+  {
+   "cell_type": "markdown",
+   "source": [
+    "### 1.2散点图\n",
+    "* 【1】简单散点图"
+   ],
+   "metadata": {
+    "collapsed": false
+   },
+   "id": "3bc2fbedcb1af9cf"
+  },
+  {
+   "cell_type": "code",
+   "outputs": [
+    {
+     "data": {
+      "text/plain": "<matplotlib.collections.PathCollection at 0x2d4feca7220>"
+     },
+     "execution_count": 29,
+     "metadata": {},
+     "output_type": "execute_result"
+    },
+    {
+     "data": {
+      "text/plain": "<Figure size 640x480 with 1 Axes>",
+      "image/png": ""
+     },
+     "metadata": {},
+     "output_type": "display_data"
+    }
+   ],
+   "source": [
+    "x = np.linspace(0, 2 * np.pi, 20)\n",
+    "plt.scatter(x, np.sin(x), marker='o', s=30, c='r')"
+   ],
+   "metadata": {
+    "collapsed": false,
+    "ExecuteTime": {
+     "end_time": "2024-07-14T07:39:32.851644700Z",
+     "start_time": "2024-07-14T07:39:32.768789700Z"
+    }
+   },
+   "id": "5c13f6d68e575b12",
+   "execution_count": 29
+  },
+  {
+   "cell_type": "markdown",
+   "source": [
+    "* 【2】颜色配置"
+   ],
+   "metadata": {
+    "collapsed": false
+   },
+   "id": "c4a7dfe237c3de69"
+  },
+  {
+   "cell_type": "code",
+   "outputs": [
+    {
+     "name": "stderr",
+     "output_type": "stream",
+     "text": [
+      "C:\\Users\\Lenovo\\AppData\\Local\\Temp\\ipykernel_13076\\3482902726.py:4: MatplotlibDeprecationWarning: Auto-removal of grids by pcolor() and pcolormesh() is deprecated since 3.5 and will be removed two minor releases later; please call grid(False) first.\n",
+      "  plt.colorbar()\n"
+     ]
+    },
+    {
+     "data": {
+      "text/plain": "<matplotlib.colorbar.Colorbar at 0x2d4fee19730>"
+     },
+     "execution_count": 32,
+     "metadata": {},
+     "output_type": "execute_result"
+    },
+    {
+     "data": {
+      "text/plain": "<Figure size 640x480 with 2 Axes>",
+      "image/png": ""
+     },
+     "metadata": {},
+     "output_type": "display_data"
+    }
+   ],
+   "source": [
+    " x = np.linspace(0, 10, 100)\n",
+    "y = x ** 2\n",
+    "plt.scatter(x, y, c=y, cmap=\"inferno\")\n",
+    "plt.colorbar()"
+   ],
+   "metadata": {
+    "collapsed": false,
+    "ExecuteTime": {
+     "end_time": "2024-07-14T07:43:05.233887Z",
+     "start_time": "2024-07-14T07:43:05.085700400Z"
+    }
+   },
+   "id": "799805124f384161",
+   "execution_count": 32
+  },
+  {
+   "cell_type": "markdown",
+   "source": [
+    "* 【3】根据数据控制点的大小"
+   ],
+   "metadata": {
+    "collapsed": false
+   },
+   "id": "ef118cefad8de0f6"
+  },
+  {
+   "cell_type": "code",
+   "outputs": [
+    {
+     "data": {
+      "text/plain": "<matplotlib.collections.PathCollection at 0x29bd0f05250>"
+     },
+     "execution_count": 8,
+     "metadata": {},
+     "output_type": "execute_result"
+    },
+    {
+     "data": {
+      "text/plain": "<Figure size 640x480 with 1 Axes>",
+      "image/png": ""
+     },
+     "metadata": {},
+     "output_type": "display_data"
+    }
+   ],
+   "source": [
+    "x, y, colors, size = (np.random.rand(100) for i in range(4))\n",
+    "plt.scatter(x, y, c=colors, s=size * 1000, cmap=\"viridis\")"
+   ],
+   "metadata": {
+    "collapsed": false,
+    "ExecuteTime": {
+     "end_time": "2024-07-14T11:38:25.463755600Z",
+     "start_time": "2024-07-14T11:38:25.359266300Z"
+    }
+   },
+   "id": "7631316132ee7eb7",
+   "execution_count": 8
+  },
+  {
+   "cell_type": "markdown",
+   "source": [
+    "* 【4】透明度"
+   ],
+   "metadata": {
+    "collapsed": false
+   },
+   "id": "78b3d3b2806f8f97"
+  },
+  {
+   "cell_type": "code",
+   "outputs": [
+    {
+     "data": {
+      "text/plain": "<matplotlib.colorbar.Colorbar at 0x29bd0d918b0>"
+     },
+     "execution_count": 7,
+     "metadata": {},
+     "output_type": "execute_result"
+    },
+    {
+     "data": {
+      "text/plain": "<Figure size 640x480 with 2 Axes>",
+      "image/png": ""
+     },
+     "metadata": {},
+     "output_type": "display_data"
+    }
+   ],
+   "source": [
+    "x, y, colors, size = (np.random.rand(100) for i in range(4))\n",
+    "plt.scatter(x, y, c=colors, s=size * 1000, cmap=\"viridis\", alpha=0.3)\n",
+    "plt.colorbar()"
+   ],
+   "metadata": {
+    "collapsed": false,
+    "ExecuteTime": {
+     "end_time": "2024-07-14T11:38:20.959615800Z",
+     "start_time": "2024-07-14T11:38:20.840864100Z"
+    }
+   },
+   "id": "5ed1a193d5c96412",
+   "execution_count": 7
+  },
+  {
+   "cell_type": "markdown",
+   "source": [
+    "### 1.3柱形图\n",
+    "* 【1】简单柱形图"
+   ],
+   "metadata": {
+    "collapsed": false
+   },
+   "id": "c8e53e7eb2ad2bb"
+  },
+  {
+   "cell_type": "code",
+   "outputs": [
+    {
+     "data": {
+      "text/plain": "<Figure size 640x480 with 1 Axes>",
+      "image/png": ""
+     },
+     "metadata": {},
+     "output_type": "display_data"
+    }
+   ],
+   "source": [
+    "x = np.arange(1, 6)\n",
+    "plt.bar(x, 2 * x, align='center', width=0.5, alpha=0.5, color='yellow', edgecolor='red')\n",
+    "plt.tick_params(axis='both', labelsize=13)"
+   ],
+   "metadata": {
+    "collapsed": false,
+    "ExecuteTime": {
+     "end_time": "2024-07-14T07:57:03.648196500Z",
+     "start_time": "2024-07-14T07:57:03.582225100Z"
+    }
+   },
+   "id": "dfddbc6cb970fdf6",
+   "execution_count": 43
+  },
+  {
+   "cell_type": "code",
+   "outputs": [
+    {
+     "data": {
+      "text/plain": "<Figure size 640x480 with 1 Axes>",
+      "image/png": ""
+     },
+     "metadata": {},
+     "output_type": "display_data"
+    }
+   ],
+   "source": [
+    "x = np.arange(1, 6)\n",
+    "plt.bar(x, 2 * x, align='center', width=0.5, alpha=0.5, color='yellow', edgecolor='red')\n",
+    "plt.xticks(x, ('G1', \"G2\", \"G3\", \"G4\", \"G5\"))\n",
+    "plt.tick_params(axis='both', labelsize=13)"
+   ],
+   "metadata": {
+    "collapsed": false,
+    "ExecuteTime": {
+     "end_time": "2024-07-14T07:57:40.732072700Z",
+     "start_time": "2024-07-14T07:57:40.655039800Z"
+    }
+   },
+   "id": "3b2b20d1f3cdec93",
+   "execution_count": 44
+  },
+  {
+   "cell_type": "code",
+   "outputs": [
+    {
+     "data": {
+      "text/plain": "<Figure size 640x480 with 1 Axes>",
+      "image/png": ""
+     },
+     "metadata": {},
+     "output_type": "display_data"
+    }
+   ],
+   "source": [
+    "x = ['G' + str(i) for i in range(5)]\n",
+    "y = 1 / (1 + np.exp(-np.arange(5)))\n",
+    "colors = ['red', 'yellow', 'green', 'blue', 'gray']\n",
+    "plt.bar(x, y, align='center', width=0.5, alpha=0.5, color=colors)\n",
+    "plt.tick_params(axis='both', labelsize=13)"
+   ],
+   "metadata": {
+    "collapsed": false,
+    "ExecuteTime": {
+     "end_time": "2024-07-14T08:00:41.874541800Z",
+     "start_time": "2024-07-14T08:00:41.808388900Z"
+    }
+   },
+   "id": "b53c6735583fa495",
+   "execution_count": 48
+  },
+  {
+   "cell_type": "markdown",
+   "source": [
+    "* 【2】累加柱形图"
+   ],
+   "metadata": {
+    "collapsed": false
+   },
+   "id": "2b0d9f91cd746257"
+  },
+  {
+   "cell_type": "code",
+   "outputs": [
+    {
+     "data": {
+      "text/plain": "<matplotlib.legend.Legend at 0x2d4ff695070>"
+     },
+     "execution_count": 49,
+     "metadata": {},
+     "output_type": "execute_result"
+    },
+    {
+     "data": {
+      "text/plain": "<Figure size 640x480 with 1 Axes>",
+      "image/png": ""
+     },
+     "metadata": {},
+     "output_type": "display_data"
+    }
+   ],
+   "source": [
+    "x = np.arange(5)\n",
+    "y1 = np.random.randint(20, 30, size=5)\n",
+    "y2 = np.random.randint(20, 30, size=5)\n",
+    "plt.bar(x, y1, width=0.5, label=\"man\")\n",
+    "plt.bar(x, y2, width=0.5, bottom=y1, label=\"women\")\n",
+    "plt.legend()"
+   ],
+   "metadata": {
+    "collapsed": false,
+    "ExecuteTime": {
+     "end_time": "2024-07-14T08:02:33.218190700Z",
+     "start_time": "2024-07-14T08:02:33.121188500Z"
+    }
+   },
+   "id": "a678f352ec5f088c",
+   "execution_count": 49
+  },
+  {
+   "cell_type": "markdown",
+   "source": [
+    "* 【3】并列柱形图"
+   ],
+   "metadata": {
+    "collapsed": false
+   },
+   "id": "9942ec1a9b3f8c16"
+  },
+  {
+   "cell_type": "code",
+   "outputs": [
+    {
+     "data": {
+      "text/plain": "<matplotlib.legend.Legend at 0x2d4ff80a250>"
+     },
+     "execution_count": 50,
+     "metadata": {},
+     "output_type": "execute_result"
+    },
+    {
+     "data": {
+      "text/plain": "<Figure size 640x480 with 1 Axes>",
+      "image/png": ""
+     },
+     "metadata": {},
+     "output_type": "display_data"
+    }
+   ],
+   "source": [
+    "x = np.arange(15)\n",
+    "y1 = x + 1\n",
+    "y2 = y1 + np.random.random(15)\n",
+    "plt.bar(x, y1, width=0.3, label=\"man\")\n",
+    "plt.bar(x + 0.3, y2, width=0.3, label=\"women\")\n",
+    "plt.legend()"
+   ],
+   "metadata": {
+    "collapsed": false,
+    "ExecuteTime": {
+     "end_time": "2024-07-14T08:04:29.130180900Z",
+     "start_time": "2024-07-14T08:04:29.001072700Z"
+    }
+   },
+   "id": "8393808132924dd9",
+   "execution_count": 50
+  },
+  {
+   "cell_type": "markdown",
+   "source": [
+    "* 【4】横向柱形图"
+   ],
+   "metadata": {
+    "collapsed": false
+   },
+   "id": "d759bd1e0c9bd118"
+  },
+  {
+   "cell_type": "code",
+   "outputs": [
+    {
+     "data": {
+      "text/plain": "<Figure size 640x480 with 1 Axes>",
+      "image/png": ""
+     },
+     "metadata": {},
+     "output_type": "display_data"
+    }
+   ],
+   "source": [
+    "x = ['G1', 'G2', 'G3', 'G4', 'G5']\n",
+    "y = 2 * np.arange(1, 6)\n",
+    "plt.barh(x, y, align='center', height=0.5, alpha=0.8, color='blue', edgecolor='red')\n",
+    "plt.tick_params(axis='both', labelsize=13)"
+   ],
+   "metadata": {
+    "collapsed": false,
+    "ExecuteTime": {
+     "end_time": "2024-07-14T08:10:42.211748100Z",
+     "start_time": "2024-07-14T08:10:42.135746300Z"
+    }
+   },
+   "id": "bedec3bb12fb2596",
+   "execution_count": 54
+  },
+  {
+   "cell_type": "markdown",
+   "source": [
+    "### 1.4多子图\n",
+    "* 【1】简单多子图"
+   ],
+   "metadata": {
+    "collapsed": false
+   },
+   "id": "912fcfc888b4da98"
+  },
+  {
+   "cell_type": "code",
+   "outputs": [
+    {
+     "data": {
+      "text/plain": "Text(0, 0.5, 'Undamped')"
+     },
+     "execution_count": 58,
+     "metadata": {},
+     "output_type": "execute_result"
+    },
+    {
+     "data": {
+      "text/plain": "<Figure size 640x480 with 2 Axes>",
+      "image/png": ""
+     },
+     "metadata": {},
+     "output_type": "display_data"
+    }
+   ],
+   "source": [
+    "def f(t):\n",
+    "    return np.exp(-t) * np.cos(2 * np.pi * t)\n",
+    "\n",
+    "\n",
+    "t1 = np.arange(0.0, 5.0, 0.1)\n",
+    "t2 = np.arange(0.0, 5.0, 0.02)\n",
+    "plt.subplot(211)\n",
+    "plt.plot(t1, f(t1), \"bo-\", markerfacecolor='r', markersize=5)\n",
+    "plt.title(\"A tale of 2 subplots\")\n",
+    "plt.ylabel(\"Damped oscillation\")\n",
+    "\n",
+    "plt.subplot(212)\n",
+    "plt.plot(t2, np.cos(2 * np.pi * t2), \"r--\")\n",
+    "plt.xlabel(\"time(s)\")\n",
+    "plt.ylabel(\"Undamped\")"
+   ],
+   "metadata": {
+    "collapsed": false,
+    "ExecuteTime": {
+     "end_time": "2024-07-14T08:16:31.784882Z",
+     "start_time": "2024-07-14T08:16:31.686298300Z"
+    }
+   },
+   "id": "c100573784cddaa5",
+   "execution_count": 58
+  },
+  {
+   "cell_type": "markdown",
+   "source": [
+    "* 【2】多行多列子图"
+   ],
+   "metadata": {
+    "collapsed": false
+   },
+   "id": "48afc4f551d52acb"
+  },
+  {
+   "cell_type": "code",
+   "outputs": [
+    {
+     "data": {
+      "text/plain": "<matplotlib.collections.PathCollection at 0x2d483163ee0>"
+     },
+     "execution_count": 65,
+     "metadata": {},
+     "output_type": "execute_result"
+    },
+    {
+     "data": {
+      "text/plain": "<Figure size 640x480 with 6 Axes>",
+      "image/png": ""
+     },
+     "metadata": {},
+     "output_type": "display_data"
+    }
+   ],
+   "source": [
+    "x = np.random.random(10)\n",
+    "y = np.random.random(10)\n",
+    "plt.subplots_adjust(hspace=0.5, wspace=0.3)\n",
+    "\n",
+    "plt.subplot(321)\n",
+    "plt.scatter(x, y, s=80, c='b', marker='>')\n",
+    "plt.subplot(322)\n",
+    "plt.scatter(x, y, s=80, c='g', marker='*')\n",
+    "plt.subplot(323)\n",
+    "plt.scatter(x, y, s=80, c='r', marker='s')\n",
+    "plt.subplot(324)\n",
+    "plt.scatter(x, y, s=80, c='c', marker='p')\n",
+    "plt.subplot(325)\n",
+    "plt.scatter(x, y, s=80, c='m', marker='+')\n",
+    "plt.subplot(326)\n",
+    "plt.scatter(x, y, s=80, c='y', marker='H')"
+   ],
+   "metadata": {
+    "collapsed": false,
+    "ExecuteTime": {
+     "end_time": "2024-07-14T08:24:17.524252Z",
+     "start_time": "2024-07-14T08:24:17.359132700Z"
+    }
+   },
+   "id": "419ae6ecdb8f08c5",
+   "execution_count": 65
+  },
+  {
+   "cell_type": "markdown",
+   "source": [
+    "* 【3】不规则多子图"
+   ],
+   "metadata": {
+    "collapsed": false
+   },
+   "id": "923c9d7cfad2b84e"
+  },
+  {
+   "cell_type": "code",
+   "outputs": [
+    {
+     "data": {
+      "text/plain": "[<matplotlib.lines.Line2D at 0x2d4832458b0>]"
+     },
+     "execution_count": 66,
+     "metadata": {},
+     "output_type": "execute_result"
+    },
+    {
+     "data": {
+      "text/plain": "<Figure size 640x480 with 3 Axes>",
+      "image/png": ""
+     },
+     "metadata": {},
+     "output_type": "display_data"
+    }
+   ],
+   "source": [
+    "def f(x):\n",
+    "    return np.exp(-x) * np.cos(2 * np.pi * x)\n",
+    "\n",
+    "\n",
+    "x = np.arange(0.0, 3.0, 0.01)\n",
+    "grid = plt.GridSpec(2, 3, wspace=0.4, hspace=0.3)\n",
+    "\n",
+    "plt.subplot(grid[0, 0])\n",
+    "plt.plot(x, f(x))\n",
+    "\n",
+    "plt.subplot(grid[0, 1:])\n",
+    "plt.plot(x, f(x), 'r--', linewidth=2)\n",
+    "plt.subplot(grid[1, :])\n",
+    "plt.plot(x, f(x), 'g-', linewidth=3)"
+   ],
+   "metadata": {
+    "collapsed": false,
+    "ExecuteTime": {
+     "end_time": "2024-07-14T08:27:20.860933500Z",
+     "start_time": "2024-07-14T08:27:20.738730Z"
+    }
+   },
+   "id": "269ced8cd0c82e2f",
+   "execution_count": 66
+  },
+  {
+   "cell_type": "markdown",
+   "source": [
+    "### 1.5直方图\n",
+    "* 【1】简单频次直方图"
+   ],
+   "metadata": {
+    "collapsed": false
+   },
+   "id": "66e03224affad5d2"
+  },
+  {
+   "cell_type": "code",
+   "outputs": [
+    {
+     "data": {
+      "text/plain": "(array([  2.,   5.,   3.,  11.,  12.,  21.,  28.,  43.,  63.,  83., 121.,\n        145., 215., 245., 287., 323., 352., 479., 492., 570., 601., 607.,\n        601., 671., 580., 573., 492., 447., 363., 363., 294., 244., 181.,\n        130.,  81.,  77.,  61.,  34.,  37.,  21.,  19.,   9.,   5.,   3.,\n          0.,   2.,   1.,   2.,   0.,   1.]),\n array([ 47.87926785,  50.20544209,  52.53161633,  54.85779057,\n         57.18396481,  59.51013905,  61.8363133 ,  64.16248754,\n         66.48866178,  68.81483602,  71.14101026,  73.4671845 ,\n         75.79335874,  78.11953298,  80.44570722,  82.77188146,\n         85.0980557 ,  87.42422995,  89.75040419,  92.07657843,\n         94.40275267,  96.72892691,  99.05510115, 101.38127539,\n        103.70744963, 106.03362387, 108.35979811, 110.68597236,\n        113.0121466 , 115.33832084, 117.66449508, 119.99066932,\n        122.31684356, 124.6430178 , 126.96919204, 129.29536628,\n        131.62154052, 133.94771476, 136.27388901, 138.60006325,\n        140.92623749, 143.25241173, 145.57858597, 147.90476021,\n        150.23093445, 152.55710869, 154.88328293, 157.20945717,\n        159.53563142, 161.86180566, 164.1879799 ]),\n <BarContainer object of 50 artists>)"
+     },
+     "execution_count": 68,
+     "metadata": {},
+     "output_type": "execute_result"
+    },
+    {
+     "data": {
+      "text/plain": "<Figure size 640x480 with 1 Axes>",
+      "image/png": ""
+     },
+     "metadata": {},
+     "output_type": "display_data"
+    }
+   ],
+   "source": [
+    "mu, sigma = 100, 15\n",
+    "x = mu + sigma * np.random.randn(10000)\n",
+    "plt.hist(x, bins=50, facecolor='g', alpha=0.75)"
+   ],
+   "metadata": {
+    "collapsed": false,
+    "ExecuteTime": {
+     "end_time": "2024-07-14T08:29:51.520358400Z",
+     "start_time": "2024-07-14T08:29:51.424339200Z"
+    }
+   },
+   "id": "dbdfb687c5c00e02",
+   "execution_count": 68
+  },
+  {
+   "cell_type": "markdown",
+   "source": [
+    "* 【2】概率密度"
+   ],
+   "metadata": {
+    "collapsed": false
+   },
+   "id": "66318fad765ccc5e"
+  },
+  {
+   "cell_type": "code",
+   "outputs": [
+    {
+     "data": {
+      "text/plain": "(0.0, 0.03)"
+     },
+     "execution_count": 71,
+     "metadata": {},
+     "output_type": "execute_result"
+    },
+    {
+     "data": {
+      "text/plain": "<Figure size 640x480 with 1 Axes>",
+      "image/png": "iVBORw0KGgoAAAANSUhEUgAAAkoAAAHACAYAAABd4Ee6AAAAOXRFWHRTb2Z0d2FyZQBNYXRwbG90bGliIHZlcnNpb24zLjUuMSwgaHR0cHM6Ly9tYXRwbG90bGliLm9yZy/YYfK9AAAACXBIWXMAAA9hAAAPYQGoP6dpAABIgUlEQVR4nO3deVhV1eL/8Q+DAorzwBX1qyVfDREBIdMiBxzSUvPicL9mjjlUTreboehVsCLU9NpVvE7lUJmWpZZGVla/23BzQkRNVDAzU1MwvKggCmf//jBOHmHrEY8exPfreXgeztpr773W8gAf195nbRfDMAwBAACgCFdnNwAAAKC0IigBAACYICgBAACYICgBAACYICgBAACYICgBAACYICgBAACYICgBAACYICgBuK1Y4xbAnYSgBMBq4sSJioiIMN0eERGhiRMnmr6+ni+++EITJky4qTaWBQcOHFDPnj3VrFkzPfroo8XWWbt2rZo0aaJffvnFpvzSpUtauXKl/vKXv6hly5YKDQ1VZGSkli5dqtzc3NvRfOCu4u7sBgC4cyUkJMjb29vu+suXL791jbmDzJ8/X8ePH9f8+fNVvXp1u/f773//q5EjR2r//v164oknNHr0aLm4uGjHjh1asGCB1q1bpyVLluhPf/rTLWw9cHchKAEosaZNmzq7CXekrKwsNW7cWG3btr2h/WJjY3Xw4EGtWrVK/v7+1vLw8HA9/vjj6tevn8aPH6+33npLLi4ujm42cFfi0huAErv60tvGjRvVo0cPNW/eXK1atdL48eN18uRJSdKAAQO0bds2bdu2TU2aNNHWrVslSadOnVJ0dLTatm2r5s2bq3fv3vriiy9sznPu3DlNnTpVrVu3VkhIiJ577jktX75cTZo0sdYZMGCAxo8fr7Fjxyo4OFhDhgyRJP3yyy+KiopSeHi4AgIC1Lp1a0VFRSkrK8umHwkJCXrllVf0wAMPKCQkRM8//7zOnz+vxYsXq02bNgoNDdWYMWNs9ivO9frTpEkTbdu2Tdu3b1eTJk20du1au8b6p59+UmJiokaOHGkTkgrdc889GjdunLZv364tW7bYdUwA10dQAlBEfn5+sV/XkpSUpKioKHXu3FlLlixRdHS0tmzZoueff16SFBMTo6ZNm6pp06Z69913FRAQoMzMTPXu3Vs7duzQc889p3nz5qlu3boaNWqUPvroI+uxn332WX3yyScaM2aM5syZo/Pnz2v27NlF2vDJJ5+oYsWKWrBggYYNG6bc3FwNHDhQhw4dUkxMjN544w0NHDhQH3/8sebMmWOz79KlS3XixAnNmTNHzzzzjDZu3KhevXrp22+/1UsvvaS//e1v+uKLLzR37lzTMbCnP++++67NOLRr186uf5Mvv/xSktSxY0fTOo8++qhcXFyKBE0AJcelNwA2jh07poCAgBveLykpSZ6enhoxYoTKly8vSapatar27NkjwzDk5+dnvZ8pODhYkrRgwQL99ttv+vTTT1W3bl1JUtu2bTV48GDNnDlT3bp109atW7V161bNmzdPnTt3liS1adNG3bp106FDh2zaUK5cOU2bNs16/tTUVP3pT3/SjBkzVL9+fUlSq1atlJKSom3bttns6+3trTlz5sjd3V0PPvig1q1bp5MnT2rNmjWqVKmSJOmbb77Rzp07Tcdg2bJl1+1PcHBwkXGwx/HjxyVJ9erVM61TpUoVValSpcgN4ABKjqAEwEatWrW0YMGCYrc988wzpvvdf//9mjNnjrp166ZHHnlEbdu2VXh4+DXvw9m2bZtCQkKsoaJQjx49FB0drR9//FFbtmxRuXLlbGZSXF1d9eijj2revHk2+917773WkCRJ/v7+euedd2SxWPTTTz/pyJEjSk9P148//lhkhqx58+Zyd//jV2LNmjVVoUIFa0iSLge/gwcP3lR//Pz8TPd3BFdXV1ksllt6DuBuQlACYKN8+fIKDAw03WYmJCREixcv1vLly7Vs2TItXrxYNWvW1NNPP60BAwYUu89///tf60zPlWrWrClJys7OVlZWlqpWrSpXV9s7BWrUqFFkv4oVKxYpW7ZsmRYuXKgzZ86oZs2aatasmby8vHT27FmbesV9eq9ChQqm/S1pf0rK19dX0uV7rho1alRsnXPnzunMmTPWugBuHvcoAXCYhx9+WG+88Ya2b9+uhQsXqnHjxnr55Ze1e/fuYutXqVJFGRkZRcoLy6pVqyYfHx9lZWUVmSU5ffr0dduzYcMGTZ8+XcOHD9f333+v7777TosWLVLDhg1vvHN2sKc/JVW4vtWnn35qU37o0CHr+kmff/65LBaL2rRpU+LzALBFUALgEDNmzFCvXr1kGIa8vLzUvn176+KShffXXD0rdP/99ys5OVnHjh2zKf/o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fhiL2+sBAABMEJQAAABMEJQAAABMEJQAAABMEJQAAABMEJQAAABMEJQAAABMEJQAAABMEJQAAABMEJQAAABMEJQAAABMEJQAAABMEJQAAABMEJQAAABMEJQAAABMEJQAAABMEJQAAABMEJQAAABMEJQAAABMEJQAAABMEJQAAABMEJQAAABMEJQAAABMEJQAAABMuDu7AQBwy7m4SJLcJIWa1TGM29UaAHcQZpQAAABMEJQAAABMEJQAAABMEJQAAABMEJQAAABMEJQAAABMEJQAAABMEJQAAABMEJQAAABMEJQAAABMEJQAAABM8Kw3AJCsz4O7Lp4JB9xVmFECAAAwQVACAAAwQVACAAAwQVACAAAwQVACAAAwwafeAJRe9nwSjU+hAbiFmFECAAAwQVACAAAwQVBCmbJ9+3Y9/fTTCg8PV5MmTbR58+YidVauXKmIiAgFBgaqT58+2r17d4nqOJs9fZ03b56aNGli89WlSxcntBYA7kwEJZQpOTk5atKkiWJiYordnpiYqPj4eI0aNUrr1q3Tfffdp6eeekqnT5++oTqlwfX6Wuh///d/9e2331q/3nnnndvUwutwcbn+FwA4GUEJt8WOHTsUEBCgvLw8a9kvv/yiJk2a6NixYw47T9u2bfXcc8+pU6dOxW5ftmyZ+vbtq169esnPz0/Tpk2Tp6enPvjggxuqcz27du3SoEGD9MADDxSZ0Tl37txN91O6fl8Lubm5qVatWtav6tWrO+T8AHA34FNvuC3279+ve++9Vx4eHtay1NRUValSRXXr1rWpu3DhQi1atOiax/v444/l6+t7Q224ePGifvjhB40cOdJa5urqqgcffFDJycl217me/fv3a8CAAXryySc1ZcoUnThxQuPHj5e/v7/69u0rb29vm/r29Pejjz6yt5tFHDlyROHh4fLw8FBwcLCef/75Gx67Uo2ZJwC3EEEJt8X+/fvVtGlTm7LU1FQ1adKkSN3/+7//U9euXa95vNq1a99wG7KyslRQUKAaNWrYlNeoUUM//vij3XWu5+WXX1bnzp01YcIESZKfn58ee+wx/fDDD3r00UeL1Le3v6dOnbLr/Fdq3ry54uPjdc899ygjI0Pz589X//79tWHDhiKBDQBQlFODUl5enqZNm6bPPvtMnp6eGjp0qIYOHVps3X379ikmJkYHDx60Xg5p1qyZJMkwDC1ZskSrV6/WmTNnFBgYqClTpsjPz8+675///Geb4wUEBGjt2rW3toOwSk1NVffu3W3K9u3bJ39//yJ1q1atqqpVq96mljlWZmamkpKS9NZbb9mUe3l5ycVk5sOe/hYUFJSoPW3btrV+f9999ykoKEjt27fXJ598oj59+pTomHc91nYC7ipODUozZ87U3r17tWLFCh0/flwTJkyQr69vkU/l5OTkaMSIEerevbumT5+uVatWaeTIkfr8889VoUIFrV69WkuXLlV8fLwaNmyo119/XcOHD1diYqK8vLyUnp4uf39/LVmyxHpMd3cm026XgoICpaWlFQlF+/bt0yOPPFKk/q269FatWjW5ubkVuSn79OnTqlmzpt11ruWHH36QxWLRfffdV6S8MNhf7VZfertS5cqV1bBhQ/38888OOR4AlHVOSws5OTlas2aNlixZooCAAAUEBCgtLU0rV64sEpQSExPl4eGhqKgoubi4aPLkyfr666+1adMmRUZGat26dRo6dKjat28vSYqNjVXLli21c+dOPfTQQzp06JAaNWqkWrVqOaOrd73Dhw8rLy/P5nJZcnKyTp48WeyM0q269Fa+fHkFBATo+++/V8eOHSVJFotF33//vZ588km761yLxWKRJOXm5lovbe3fv187duzQX//612L3uZWX3q52/vx5HT16lJ8FALCT04LS/v37lZ+fr5CQEGtZaGioFi5cKIvFIlfXPz6Ql5KSotDQUOulCxcXF7Vo0UK7du1SZGSkoqKiVK9ePWt9FxcXGYahs2fPSpIOHTpU7L0wuD32798vSXr77bc1YMAAHTlyRHFxcZIu3zx9tZu59Hb+/Hmb2ZJffvnFetO4r6+vhgwZogkTJqhZs2Zq3ry5VqxYodzcXEVGRlr3saeOmaCgIHl6emrmzJl6+umndfToUb344ot64oknFBwcXOw+Jb30dr2+StKMGTPUvn17+fr66tSpU5o3b55cXV3VrVu36/YFAODEoJSRkaFq1aqpfPny1rKaNWsqLy9PZ86csfkIc0ZGhvV+o0I1atRQWlqaJCksLMxm25o1a5Sfn6/Q0FBJl4OSxWJR9+7ddfbsWbVp00ZRUVHXvJnVYrGU+L4QXFY4fqmpqQoPD9fPP/+s7t27q1GjRho1apRefPFFvfnmm5oxY4bDzrl7924NHjzY+jo+Pl6S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o0etZampqXJ3d1eDBg3saisAALg7lSgode3aVRMmTNDOnTv18MMPa+3atfr00081f/58u8OHl5eXevbsqdjYWO3evVubN2/W0qVLNXDgQEmXZ5cuXLggSerSpYuys7MVFxen9PR0xcXFKTc3V127dr3uee699141aNBAU6ZM0cGDB7Vjxw5NmTJFffr0UZUqVUrSfQAAcJcoUVAaP368HnvsMWVlZenBBx9Ur169FBMTo127dik2Ntbu40RHRysgIECDBg3StGnTNGbMGHXu3FmSFB4ebl2jydvbW4sWLVJSUpIiIyOVkpKixYsX2yw2adpBV1ctWLBA3t7e6t+/v0aNGqXWrVtr0qRJJek6AAC4i7gYBquMXSknJ0epqalq3LixKlWq5Ozm3NEKCgq0a9cuBQcHc939JjlkLO1ZdBB3rxv8U8DPt+Mwlo5x9uxZHTx4UP7+/nZNpNirxOsobd++XatXr9ahQ4dUrlw5NWrUSIMGDZK/v7/DGgcAAOBMJbr09vbbb2vo0KEqX768evfure7duys/P199+/bVxx9/7Og2AgAAOEWJZpSWLFmil156ST179rQpDwsL0z/+8Q899thjjmgbAACAU5VoRuncuXMKDAwsUh4WFmZdNgAAAOBOV6Kg9OSTT+rVV19Vdna2tSwvL08JCQnq27evwxoHAADgTHZfeouIiJDL75+aMQxDx48fV5s2bVS/fn25urrq559/Vl5eHjdzAwCAMsPuoDRmzJhb2Q4AAIBSx+6g9Oc//7lIWW5uro4cOSKLxaL/+Z//4SGyAACgTCnRp94uXbqkV199Ve+8844KCgpkGIbc3d3VvXt3TZs2TeXLl3d0OwEAAG67Et3MPWPGDH311VdasGCBtm/frm3btmn+/PnasWOH5syZ4+g2AgAAOEWJZpQ2btyof/7zn3rggQesZW3btpWHh4fGjx+vCRMmOKyBAAAAzlKiGSXDMFSjRo0i5dWrV9f58+dvulEAAAClQYmCUqtWrTRr1iydO3fOWpadna1//OMfNrNMAAAAd7ISXXqbNGmSBg4cqIcfflj33HOPJOnw4cOqX7++FixY4NAGArDD72ucAQAcq0RBqVKlStq4caO+/vpr/fjjj/Lw8NA999yjhx56SK6uJZqkAgAAKHVKFJS6deumhIQEdejQQR06dHB0mwAAAEqFEk3/uLq6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6FHVrVtX69ev18KFC3Xp0iVFRkbqmWeeYSxvgIeHh6ZOnaqXXnpJb775pgoKChQZGak+ffroiy++YByv44knnii2PCMjw3Tlfnu2343MxrJevXrWZVYk6fTp0/r44481ZswYSYxlcczGUpIWLlyopk2bKjw8vMi2az1x4m5kNo6Ff39mzZqlDz/8UNWqVdPYsWPVsWNHSY4Zx7s2KOXl5SkmJkZTp04tssDl9VYCh62cnBwdOXJEq1evVnx8vDIyMjR16lR5eXkxljfo0KFDat++vYYMGaK0tDS99NJLat26NeN4E643doxtyVy4cEFjxoxRzZo1rf97Zyztl56ertWrV+ujjz4qdvu1njiBP+Tk5GjdunV69NFHtXDhQm3dulVjx47Vu+++q8DAQIeM410blBISEtSsWTM9/PDDRbZdbyVw2HJ3d9e5c+c0e/Zs1a1bV5J0/PhxrVq1Sg0aNGAs7fT999/r/fff17///W95enoqMDBQJ0+e1IIFC1S/fn3GsYQ8PDx05swZmzJ7Vva/euFb/OH8+fN69tln9dNPP+mdd96xPuWAsbSPYRj6+9//rrFjx1qfPXq1az1xAn9wc3NT1apVFRsbK1dXVwUEBGjHjh167733FBgY6JBxvGuD0scff6zMzEyFhIRI+uOxJp9++qm6det2zZXAYatWrVry8PCwhiRJuueee3TixAm1bNmSsbTT3r171aBBA5vw07RpUy1cuFBhYWGMYwn5+PgoPT3dpsyelf39/f1vWxvvJOfOndOwYcP0888/a8WKFWrYsKF1G2Npn+PHjys5OVkHDhzQjBkzJF2ejYuJiVFiYqJef/31az5xAn+oXbu2XFxcbBaqvueee3TgwAFJ135yh73u2pu533rrLW3YsEHr16/X+vXrFRERoYiICK1fv/66K4HDVlBQkPLy8nT48GFr2Y8//qi6desyljegdu3aOnLkiM3/fn788UfVq1ePcbwJQUFB+uGHH6wL2EqXP4BgtrJ/bm6u9u3bx9gWw2KxaPTo0frll1/01ltv6X//939ttjOW9vHx8dFnn31m/fuzfv161a5dW2PHjlVcXJykaz9xAn8ICgpSWlqaCgoKrGWHDh2y/sfdEeN41walunXrqkGDBtavihUrqmLFimrQoMF1VwKHrXvvvVft2rVTdHS09u/fr2+++UaLFy9Wv379GMsbEBERoXLlyunvf/+7Dh8+rC+//FILFy7UgAEDGMeb0LJlS9WpU0fR0dFKS0vT4sWLtXv3bvXu3VuS1KtXL+3cuVOLFy9WWlqaoqOjVa9ePT3wwANObnnp8/7772vr1q16+eWXVblyZWVkZCgjI8N6aZOxtI+7u7vN358GDRpYnzNa+HzS6z1xApd169ZNFotF06ZN05EjR7Ry5Up988036tu3ryQHjePNrm1QVkyYMMFmrYXrrQQOW9nZ2cYLL7xgBAcHG61btzbmzZtnXfOHsbRfWlqaMXjwYKNFixZGx44djWXLljGOJXD1ejU//fST0b9/f6NZs2bGY489Znz33Xc29f/f//t/RufOnY3mzZsbgwYNumvXqinOlWM5dOhQo3HjxkW+rlw7ibE0Z7bgpGEYRvv27Yusi3atJ07cza4ex7S0NOvPd+fOnY1PP/3Upv7NjqOLYfw+lw8AAAAbd+2lNwAAgOshKAEAAJggKAEAAJggKAEAAJggKAEAAJggKAEAAJggKAEAAJggKAEo1S5duqR58+apQ4cOatasmdq1a6f4+HidO3futpz/6NGj+ve//31bzgWg9CEoASjVZs2apc8++0wvv/yyNm3apPj4eH333XcaP378bTn/pEmTtHv37ttyLgClD0EJQKm2bt06jRs3Tq1bt1a9evXUunVrxcbG6quvvtKpU6ec3TwAZRxBCUCp5uLioi1btshisVjLQkJC9PHHH6tatWqKiIjQ+++/r169eql58+YaOnSojh07pjFjxigoKEiPP/640tLSrPuuWbNGXbp0UbNmzfTAAw9o2rRp1iePT5w4URMnTlSPHj3UunVrPf/889q2bZsSEhI0YMAASdKbb76p9u3bKzAwUJGRkdqxY8ftHRAAtxXPegNQqs2fP19z585VnTp11LZtWz344IMKDw9XxYoVJUkRERG6ePGiZs6cqcqVK2vYsGGyWCx67rnnFBYWpilTpqhatWpasGCBtm3bpuHDh+vVV19V06ZNtXfvXr3wwguaPXu2OnfurIkTJ+rDDz/U/PnzVbNmTd1zzz0aPny4QkJCNHLkSB0/flx9+/ZVQkKC/Pz89OabbyoxMVFff/21XF35fydQFrk7uwEAcC2jRo1S/fr19c477+i9997T6tWrVbFiRU2ePFm9evWSJEVGRurBBx+UJLVq1UoZGRnq16+fJKlHjx5asWKFJKlChQqKi4tT586dJUn16tXTsmXLlJaWZi0LDAxURESE9fzlypVThQoVVLVqVW3fvl0uLi7y9fVVvXr19Ne//lXt27eXxWIhKAFlFEEJQKnXo0cP9ejRQ1lZWfr222/19ttva/LkyWrSpIkkqX79+ta6np6eqlu3rs3rS5cuSZKaNWsmT09PzZ07V+np6Tpw4ICOHDmi8PBwa/0r971aeHi4GjdurO7du6tp06bq0KGD+vTpI3d3fpUCZRX/BQJQau3fv1/Tp0+3vq5WrZq6d++ut956S3/605+0ZcsWSZKbm5vNfmazO998840iIyOVmZmphx9+WHPnzlWLFi1s6nh4eJi2x8vLS2vWrNGKFSvUsmVLrV27VpGRkTp58mRJuwiglCMoASi1CgoKtGzZMu3bt8+mvHz58vL09FT16tVv6Hhr1qxRr1699OKLL6pPnz5q1KiRfv75Z9l7q2ZycrIWLVqkVq1aKTo6Wps2bVJeXp6SkpJuqB0A7hzMFwMotQICAtSuXTs9++yzev755xUSEqLMzEytW7dOFy9eVOfOnZWQkGD38apWrark5GQdOHBArq6uWrRokTIyMnTx4kXTfSpUqKCffvpJp0+flqenp/VG79atW2v79u3KycmxXgIEUPYwowSgVHvttdf0+OOPKyEhQV27dtXIkSN17tw5vf322/L29r6hY40ePVo1atTQX/7yFw0ZMkQeHh7q16+fUlNTTffp06ePvvnmGw0bNkz+/v6Ki4vT66+/rq5du2rhwoV69dVX1ahRo5vtJoBSiuUBAAAATDCjBAAAYIKgBAAAYIKgBAAAYIKgBAAAYIKgBAAAYIKgBAAAYIKgBAAAYIKgBAAAYIKgBAAAYIKgBAAAYIKgBAAAYIKgBAAAYOL/A+69fjjMjisIAAAAAElFTkSuQmCC"
+     },
+     "metadata": {},
+     "output_type": "display_data"
+    }
+   ],
+   "source": [
+    "mu, sigma = 100, 15\n",
+    "x = mu + sigma * np.random.randn(10000)\n",
+    "plt.hist(x, bins=50, color='r', density=True)\n",
+    "plt.xlabel(\"Smarts\")\n",
+    "plt.ylabel(\"Probability\")\n",
+    "plt.title(\"Histogram of IQ\")\n",
+    "plt.text(60, .025, r\"$\\mu=100,\\sigma=15$\")\n",
+    "plt.xlim(40, 160)\n",
+    "plt.ylim(0, 0.03)"
+   ],
+   "metadata": {
+    "collapsed": false,
+    "ExecuteTime": {
+     "end_time": "2024-07-14T08:33:46.512370200Z",
+     "start_time": "2024-07-14T08:33:46.397183600Z"
+    }
+   },
+   "id": "757463552ee8617a",
+   "execution_count": 71
+  },
+  {
+   "cell_type": "code",
+   "outputs": [
+    {
+     "data": {
+      "text/plain": "(0.0, 0.03)"
+     },
+     "execution_count": 72,
+     "metadata": {},
+     "output_type": "execute_result"
+    },
+    {
+     "data": {
+      "text/plain": "<Figure size 640x480 with 1 Axes>",
+      "image/png": "iVBORw0KGgoAAAANSUhEUgAAAkoAAAHACAYAAABd4Ee6AAAAOXRFWHRTb2Z0d2FyZQBNYXRwbG90bGliIHZlcnNpb24zLjUuMSwgaHR0cHM6Ly9tYXRwbG90bGliLm9yZy/YYfK9AAAACXBIWXMAAA9hAAAPYQGoP6dpAABQf0lEQVR4nO3deVyU5f7/8TeLskiuKIWKmRwJERGh0iK30rTUPKidr+VS5lK5dDoZih63ilzSFrPjVpqlaVlqZWb7r+2kKSJqgoCVmJpCYS4gCnP//hid0wi3jDgwLK/n48Ej5p7rnvu6Pw3y5rrvuS43wzAMAQAAoAh3V3cAAACgoiIoAQAAmCAoAQAAmCAoAQAAmCAoAQAAmCAoAQAAmCAoAQAAmCAoAQAAmCAoAShXzHELoDIhKAGwmThxorp27Wr6fNeuXTVx4kTTxyX5/PPPNWHChCvqY1Wwb98+9e3bV61bt9add95ZbJt169YpJCREv/76q932c+fOadWqVfrHP/6hG2+8UVFRUYqNjdWyZcuUl5dXHt0HqhVPV3cAQOW1YMEC+fn5Odz+tddeK7vOVCIvv/yyDh8+rJdffln169d3eL8///xTo0aNUmpqqu69916NGTNGbm5u2r59uxYuXKj169dr6dKluvrqq8uw90D1QlACUGqtWrVydRcqpZycHLVs2VKdOnW6rP2mT5+utLQ0rV69WqGhobbtMTExuvvuuzVw4ECNHz9eb7zxhtzc3JzdbaBa4tIbgFK7+NLbxo0b1adPH7Vp00bt27fX+PHjdfToUUnS4MGD9cMPP+iHH35QSEiItm7dKkk6duyY4uPj1alTJ7Vp00b9+/fX559/bnecU6dOaerUqerQoYMiIyP12GOP6bXXXlNISIitzeDBgzV+/HiNGzdObdu21QMPPCBJ+vXXXxUXF6eYmBiFhYWpQ4cOiouLU05Ojt15LFiwQM8884xuuukmRUZG6vHHH9fp06e1ZMkSdezYUVFRURo7dqzdfsUp6XxCQkL0ww8/aNu2bQoJCdG6descqvUvv/yiTZs2adSoUXYh6YLmzZvr0Ucf1bZt27RlyxaHXhNAyQhKAIooKCgo9utSEhMTFRcXp+7du2vp0qWKj4/Xli1b9Pjjj0uSpk2bplatWqlVq1Z66623FBYWpuzsbPXv31/bt2/XY489ppdeekmNGzfW6NGj9f7779te+5FHHtFHH32ksWPH6vnnn9fp06c1b968In346KOPVKtWLS1cuFDDhw9XXl6ehgwZov3792vatGl69dVXNWTIEH344Yd6/vnn7fZdtmyZjhw5oueff14PP/ywNm7cqH79+unbb7/VU089pX/961/6/PPPNX/+fNMaOHI+b731ll0dOnfu7ND/ky+++EKSdPvtt5u2ufPOO+Xm5lYkaAIoPS69AbBz6NAhhYWFXfZ+iYmJ8vb21siRI1WzZk1JUt26dbV7924ZhqHg4GDb/Uxt27aVJC1cuFB//PGHPv74YzVu3FiS1KlTJ91///2aM2eOevXqpa1bt2rr1q166aWX1L17d0lSx44d1atXL+3fv9+uDzVq1NCMGTNsx09JSdHVV1+t2bNnq2nTppKk9u3bKzk5WT/88IPdvn5+fnr++efl6empm2++WevXr9fRo0e1du1aXXXVVZKkb775Rjt27DCtwfLly0s8n7Zt2xapgyMOHz4sSWrSpIlpmzp16qhOnTpFbgAHUHoEJQB2GjZsqIULFxb73MMPP2y63w033KDnn39evXr10h133KFOnTopJibmkvfh/PDDD4qMjLSFigv69Omj+Ph4/fTTT9qyZYtq1KhhN5Li7u6uO++8Uy+99JLdftddd50tJElSaGio3nzzTVksFv3yyy86cOCAMjIy9NNPPxUZIWvTpo08Pf/3T6K/v798fX1tIUmyBr+0tLQrOp/g4GDT/Z3B3d1dFoulTI8BVCcEJQB2atasqfDwcNPnzERGRmrJkiV67bXXtHz5ci1ZskT+/v566KGHNHjw4GL3+fPPP20jPX/l7+8vSTpx4oRycnJUt25dubvb3ynQoEGDIvvVqlWryLbly5dr0aJFOn78uPz9/dW6dWv5+Pjo5MmTdu2K+/Ser6+v6fmW9nxKKzAwUJL1nqsWLVoU2+bUqVM6fvy4rS2AK8c9SgCc5tZbb9Wrr76qbdu2adGiRWrZsqWefvpp7dq1q9j2derUUVZWVpHtF7bVq1dPAQEBysnJKTJK8vvvv5fYnw8++ECzZs3SiBEj9P333+u7777T4sWLde21117+yTnAkfMprQvzW3388cd22/fv32+bP+nTTz+VxWJRx44dS30cAPYISgCcYvbs2erXr58Mw5CPj4+6dOlim1zywv01F48K3XDDDUpKStKhQ4fstr///vtq2LChmjVrphtvvFEFBQW2m5kl6+zen332WYl9SkxMVO3atTV8+HDbfEWnT59WYmJimVyecuR8Suvaa69V7969tXTpUu3du9e2febMmerUqZNee+01zZs3T2FhYerSpUupjwPAHpfeADhF+/bttXz5ck2cOFF9+vTRuXPn9Morr6hu3bpq3769JKl27dpKSkrS999/r1atWumBBx7Q+++/r/vvv19jxoxR3bp1tWHDBm3ZskXPPPOM3N3ddcMNN+iWW27R5MmTlZ2drcDAQL3zzjvat29fiXMFtWnTRqtXr9asWbPUpUsXHTt2TK+++qqys7NVp04dp9fAkfO5EtOmTdNvv/2m++67T/fee69uvvlmPfDAA5o7d65mzpwpSXr++eeZQwlwIkaUADhFp06dNHfuXKWnp2vMmDH617/+JR8fH73++uuqW7euJOm+++5TjRo1NGLECH399ddq2LChVq9erbCwMD399NN69NFHdeTIEf3nP/9Rv379bK/9/PPPq2vXrpo3b54effRR1axZUwMHDizxHqK///3vGj16tD766CONGDFC8+fPV3R0tJ588kkdP368yKfmrpSj51NaV111lV577TXFxcVp+/btevTRRzV27FhZLBaNHTtWt99+u4YPH17s1AkASsfNYIVKABXYoUOHtHPnTt12223y9va2bR83bpwOHjyo9evXu7B3Fc8333yjn376SUOHDnV1V4AqgaAEoEI7cuSIunfvrttuu039+/eXh4eHvvnmGy1btkwzZ87U3//+d1d3EUAVRlACUOFt2bJFL7/8slJSUlRQUKAWLVrogQceUK9evVzdNQBVnEuDUn5+vmbMmKFPPvlE3t7eGjZsmIYNG1Zs271792ratGlKS0tTcHCwZsyYodatW0uSCgsL9fzzz2v9+vXKzc1Vx44dNWXKFNvcJYZhaN68eXrnnXdksVjUv39/jR8//opvrAQAAFWbS5PCnDlztGfPHq1YsULTpk3TggULtHnz5iLtcnNzNXLkSEVHR2vdunWKjIzUqFGjlJubK0lasmSJNm3apBdeeEFr167Vn3/+qbi4ONv+y5cv18aNG7VgwQLNnz9fH3zwgZYvX15u5wkAAConlwWl3NxcrV27VpMnT1ZYWJi6deum4cOHa9WqVUXabtq0SV5eXoqLi1OLFi00efJk1apVyxaqCgsLFR8frxtuuEHBwcEaPHiwEhMTbfu//vrrGjdunKKjo20rmhd3HAAAgL9yWVBKTU1VQUGBIiMjbduioqKUnJxcZCK45ORkRUVF2eYGcXNzU7t27bRz505J0pgxY9StWzdJ1tl6165dqxtvvFGSdPToUR05ckQ33HCD3XEOHTqkY8eOleUpAgCASs5lE05mZWWpXr16dmtH+fv7Kz8/X8ePH7fNonuh7cULSTZo0EDp6el22+bPn6+XX35ZderU0erVq237SlKjRo3sjiNJv/32m912SSooKNCff/4pLy8v7mECAKCSsFgsys/PV506dewWuL5SLgtKeXl5RRbYvPD47NmzDrW9uN3dd9+tLl266JVXXtGwYcP04Ycf6syZM3avfanjSNZFLX/55ZfSnRQAAHCpa6+9tthFs0vLZUHJy8urSFC58Pivk8pdqu3F7S6sozRnzhx17NhRn3zyiW0k6uzZs/Ly8rI7jo+PT7H9kqQmTZpc9srhsGexWJSRkaHg4GBG564QtXQO6ug81NJ5qKVz5Obm6tdff7X9HncWlwWlCyuCFxQU2IbIsrKy5O3trdq1axdpm52dbbctOzvbdtnsyy+/VKtWrRQQECDJGnaaNm2qnJwc27asrCw1adLE9r1kXW7gYhfepL6+vrrqqqucdbrVUmFhoSTJz89PHh4eLu5N5UYtnYM6Og+1dB5q6VzODpsui66hoaHy9PS03ZAtWVf6Dg8PL3KSERERSkpK0oUpnwzD0I4dOxQRESHJumr5hg0bbO1PnTqlX375RS1atFBAQIACAwPtPgWXmJiowMDAIvcnAQAA/JXLgpKPj4/69u2r6dOna9euXfrss8+0bNkyDRkyRJJ11OfC/UU9evTQiRMnlJCQoIyMDCUkJCgvL089e/aUZF1o89VXX9VXX32l9PR0PfHEEwoKClLHjh0lSQMHDtTcuXO1detWbd26VfPmzbMdBwAAwIzLLr1JUnx8vKZPn66hQ4fKz89PY8eOVffu3SVJMTExmjlzpmJjY+Xn56fFixdr2rRpevvttxUSEqIlS5bY7iG67777lJeXp+nTp+uPP/7QLbfcooULF9pGph588EH9/vvvGjNmjDw8PNS/f3/df//9rjptAABQSbDW20Vyc3OVkpKili1bco/SFSosLNTOnTvVtm1brrtfIWrpHNTReail81BL5zh58qTS0tIUGhrq1A9jcXs9AACACYISAACACYISAACACYISAACACYISAACACYISAACACYISAACACYISAACACYISAACACYISAACACYISAACACYISAACACU9XdwAAXC4zU8rOLrmdv78UFFT2/QFQYRCUAFRvmZlSaKiUm1tyW19fKSWFsARUIwQlANVbdrY1JK1caQ1MZlJSpEGDrO0JSkC1QVACAMkaktq1c3UvAFQw3MwNAABggqAEAABggqAEAABggqAEAABggqAEAABggqAEAABggqAEAABggqAEAABggqAEAABggqAEAABggiVMAFQcmZnWtdRK4u/PemsAygVBCUDFkJlpXW8tN7fktr6+1kVqCUsAyhhBCUDFkJ1tDUkrV1oDk5mUFGnQIGt7ghKAMkZQAlCxhIZK7dq5uhcAIImgBKCySkkpuQ33MgG4QgQlAJWLv7/1HqVBg0puy71MAK4QQQlA5RIUZA0/JX06jnuZADgBQQlA5RMURPgBUC6YcBIAAMAEQQkAAMAEQQkAAMAEQQkAAMAEQQkAAMAEQQkAAMAEQQkAAMAE8ygBqNr+utRJYaF80tIki0Xy8Cj6PABchKAEoGoqZqkTD0mtimvr62ttDwAXISgBqJqKWeqksLBQ+9LSFNKypTwujChJLJ4LwBRBCUDVdfFSJ4WFynN3l9q2/d+lNwC4BG7mRpWybds2PfTQQ4qJiVFISIg+++yzIm1WrVqlrl27Kjw8XAMGDNCuXbtK1cbVHDnXl156SSEhIXZfPXr0cEFvAaByIiihSsnNzVVISIimTZtW7PObNm3SzJkzNXr0aK1fv17XX3+9HnzwQf3++++X1aYiKOlcL/jb3/6mb7/91vb15ptvllMPAaDyIyihXGzfvl1hYWHKz8+3bfv1118VEhKiQ4cOOe04nTp10mOPPaZu3boV+/zy5ct1zz33qF+/fgoODtaMGTPk7e2td99997LalGTnzp0aOnSobrrppiIjOqdOnbri85RKPtcLPDw81LBhQ9tX/fr1nXJ8AKgOuEcJ5SI1NVXXXXedvLy8bNtSUlJUp04dNW7c2K7tokWLtHjx4ku+3ocffqjAwMDL6sPZs2f1448/atSoUbZt7u7uuvnmm5WUlORwm5KkpqZq8ODBGjRokKZMmaIjR45o/PjxCg0N1T333CM/Pz+79o6c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S9PDDz+sW2+9VS+88IJq1Khh2zcgIECBgYFKTEy0O05gYKDp/UkAAACSC4OSj4+P+vbtq+nTp2vXrl367LPPtGzZMg0ZMkSSddTnzJkzkqQePXroxIkTSkhIUEZGhhISEpSXl6eePXtKkqZOnaprrrlG8fHxysnJUVZWlt3+AwcO1Ny5c7V161Zt3bpV8+bNsx0HAADAjMsuvUlSfHy8pk+frqFDh8rPz09jx45V9+7dJUkxMTGaOXOmYmNj5efnp8WLF2vatGl6++23FRISoiVLlsjX11dZWVlKSkqSJHXu3Nnu9S/s/+CDD+r333/XmDFj5OHhof79++v+++8v57MFAACVjUuDko+Pj2bPnq3Zs2cXeW7fvn12j9u0aaP169cXadewYcMibS/m4eGh+Ph4xcfHX1mHAQBAtVLxPmsKAABQQRCUAAAATBCUAAAATBCUAAAATBCUAAAATBCUAAAATBCUAAAATBCUAAAATLh0wkkAFVRmpnTRQtRFpKSUT18AwIUISgDsZWZKoaFSbm7JbX19JX//su8TALgIQQmAvexsa0haudIamC7F318KCiqffgGACxCUABQvNFRq187VvcAFjlzqJLgCTkdQAoCKzN/feolz0KCS2/r6WgMVYQlwGoISAFRkQUHW8OPIzfWDBlnbEZQApyEoAUBFFxRE+AFchHmUAAAATBCUAAAATBCUAAAATBCUAAAATBCUAAAATBCUAAAATBCUAAAATBCUAAAATBCUAAAATBCUAAAATBCUAAAATJQqKHXp0kVz587V3r17nd0fAACACqNUQWnixIk6dOiQ7rvvPvXo0UPz58/X/v37nd03AAAAl/IszU533HGH7rjjDp05c0ZffvmlPvnkE917770KCAhQr169dOedd6pJkybO7isAAEC5uqJ7lLy9vXXHHXfonnvuUa9evXTgwAG99tpr6tWrl4YNG6aff/7ZWf0EAAAod6UKShaLRf/97381depUxcTE6J///Kfy8/O1aNEiffvtt/r2229Vr149Pfzww87uLwAAQLkp1aW3Dh066OzZs+rcubOefPJJdezYUTVr1rQ97+fnp27duik5OdlpHQUAAChvpQpK//73v3XbbbfJ19e3yHN//PGH6tevrx49eqhHjx5X3EEATpaZKWVnmz+fklJ+fQGACq5UQSkuLk7fffddkaB06NAh9erVS0lJSU7pHAAny8yUQkOl3NxLt/P1lfz9y6dPAFCBORyUNmzYoHXr1kmSDMPQ6NGjVaNGDbs2x44dU8OGDZ3bQwDOk51tDUkrV1oDkxl/fykoqPz6BQAVlMNBqVu3bvr1118lST/88IPatm2rWrVq2bXx9fVVt27dnNtDAM4XGiq1a+fqXgBAhedwUKpVq5bGjBkjSWrcuLHuuusuuxu4AQAAqprLuvR25513qmbNmnJzc9OmTZtM2/bt29cZfQMAAHAph4PS/Pnz1alTJ9WsWVPz5883befm5kZQAgAAVYLDQemLL74o9nsAAICqyuGgtG3bNofaubm5KTo6utQdAgAAqCgcDkqDBw92qJ2bm5tSmLAOAABUAQ4HpdTU1LLsBwAAQIXjcFA6fPiwrrnmGrm5uenw4cOXbBsYGHjFHQMAAHA1h4NS165d9d1336lBgwbq2rWr3NzcZBiG7fkLj7n0BgAAqgqHg9Lnn3+u+vXr274HAFRAjvyhyhI1gMMcDkqNGzcu8v3PP/+s/fv3q0aNGrruuuvUtGlT5/cQAFAyf3/rYsaDBpXc1tfXGqgIS0CJHA5Kf3XkyBHFxcVp27ZtqlOnjgzD0MmTJ9W1a1clJCSobt26Tu4mAOCSgoKs4Sc7+9LtUlKsYSo7m6AEOKBUQenf//63PDw89Pnnn9tGl3755RdNmjRJU6dOveTM3QCAMhIURPgBnKxUQWnbtm1at26d3eW4a6+9VlOnTtX//d//Oa1zAAAAruRemp1atGihtLS0ItsPHjxoF55Kkp+fr0mTJik6OloxMTFatmyZadu9e/dqwIABioiIUL9+/bRnz55i2y1cuFATJ04ssm9ISIjdV2xsrMP9BAAA1ZPDI0obNmywfd++fXtNnjxZe/fuVXh4uDw8PLRv3z699tpreuCBBxw++Jw5c7Rnzx6tWLFChw8f1oQJExQYGKgePXrYtcvNzdXIkSPVu3dvzZo1S6tXr9aoUaP06aefytfX19Zu48aNeumll9SnTx+7/TMyMhQaGqqlS5f+78Q9SzWYBgAAqhGH08LF9x3Vq1dPmzZt0qZNm2zbrrrqKr377rt65JFHSny93NxcrV27VkuXLlVYWJjCwsKUnp6uVatWFQlKmzZtkpeXl+Li4uTm5qbJkyfr66+/1ubNmxUbG6uCggI99dRTWr9+fbGfvNu/f79atGihhg0bOnq6AAAAjgelL774wqkHTk1NVUFBgSIjI23boqKitGjRIlksFrm7/++qYHJysqKiouTm5ibJOrllu3bttHPnTsXGxio3N1f79u3T22+/rddee63Isfbv36+QkBCn9h8AAFR9pb7+9Mcff+jnn3+WxWKRJBmGobNnz2rv3r0aOXJkiftnZWWpXr16qlmzpm2bv7+/8vPzdfz4cdvklhfaBgcH2+3foEEDpaenS5Jq166tNWvWmB5r//79slgs6t27t06ePKmOHTsqLi5Ofn5+pvtYLBYVFhaWeB4wd6F+1PHKOa2WhYXyuPA61fD/C+9JOe09QC2dh1o6x4U84mylCkpvv/22nnzySRUUFNgtZeLm5qY2bdo4FJTy8vLsQpIk2+OzZ8861PbidsU5d+6cDh48qCZNmuiZZ57RiRMnNHPmTD3xxBNauHCh6X4ZGRklvjYcs3v3bld3ocq40lr6pKWplaR9aWnKcy/VZzmqhOr8nnT2e6A619LZqGXFVKqgtGjRIj300EMaOXKkunbtqrVr1+r06dOKi4tTt27dHHoNLy+vIkHnwmNvb2+H2l7crjg1atTQli1b5OXlpRo1akiSZs2apX79+uno0aMKCAgodr/g4OBLjjihZIWFhdq9e7fthn+UntNqef4vrpCWLaW2bZ3TuUqE96Sc9h6gls5DLZ3j1KlTZTLIUaqgdOzYMfXt21c1a9ZUWFiYdu7cqZ49e2rSpEmaPHmyhg8fXuJrBAQEKCcnRwUFBbZPoGVlZcnb21u1a9cu0jb7otlms7Oz1ahRI4f6e3HgadGihSRdMii5u7vzhnUSDw8PaukkV1zL8/t6eHjYvq+OqvV70snvgWpdSyejllfGvYxGyUv1qvXr19cff/whSbruuuuUcn4RxoCAAB09etSh1wgNDZWnp6d27txp25aYmKjw8PAiJxsREaGkpCTbJT7DMLRjxw5FRESUeJyMjAxFRkbq4MGDtm0pKSny9PRUs2bNHOorAAConkoVlHr27KkJEyZox44duvXWW7Vu3Tp9/PHHevnllx0OHz4+Purbt6+mT5+uXbt26bPPPtOyZcs0ZMgQSdbRpTNnzkiSevTooRMnTighIUEZGRlKSEhQXl6eevbsWeJxrrvuOjVr1kxTpkxRWlqatm/frilTpmjAgAGqU6dOaU4fAABUE6UKSuPHj9ddd92lnJwc3XzzzerXr5+mTZumnTt3avr06Q6/Tnx8vMLCwjR06FDNmDFDY8eOVffu3SVJMTExtjma/Pz8tHjxYiUmJio2NlbJyclasmSJ3WSTpifo7q6FCxfKz89P9913n0aPHq0OHTpo0qRJpTl1AABQjbgZF65nQZJ1IsyUlBS1bNlSV111lau7U6kVFhZq586datu2Ldfdr5DTarljhxQVJSUmSu3aOa+DlQTvSTntPUAtnYdaOsfJkyeVlpam0NBQhwZSHFXqeZS2bdumNWvWaP/+/apRo4ZatGihoUOHKjQ01GmdAwAAcKVSXXpbuXKlhg0bppo1a6p///7q3bu3CgoKdM899+jDDz90dh8BAABcolQjSkuXLtVTTz2lvn372m2Pjo7Wc889p7vuussZfQMAAHCpUo0onTp1SuHh4UW2R0dH26YNAAAAqOxKFZQGDRqkZ599VidOnLBty8/P14IFC3TPPfc4rXMAAACu5PClt65du8rNzU2SdcLHw4cPq2PHjmratKnc3d2VmZmp/Px8buYGAABVhsNBaezYsWXZDwAAgArH4aD097//vci2vLw8HThwQBaLRUFBQSwiCwAAqpRSfert3LlzevbZZ/Xmm2+qsLBQhmHI09NTvXv31owZM1SzZk1n9xMA4Ezn1+i8JH9/KSio7PsCVGClCkqzZ8/WV199pYULFyoyMlIWi0VJSUl6+umn9fzzz2vChAnO7icAwBn8/SVfX2nQoJLb+vpaAxVhCdVYqYLSxo0b9eKLL+qmm26ybevUqZO8vLw0fvx4ghIAVFRBQdbwk5196XYpKdYwlZ1NUEK1VqqgZBiGGjRoUGR7/fr1dfr06SvuFACgDAUFEX4AB5VqHqX27dtr7ty5OnXqlG3biRMn9Nxzz9mNMgEAAFRmpRpRmjRpkoYMGaJbb71VzZs3lyT9/PPPatq0qRYuXOjUDgIAALhKqYLSVVddpY0bN+rrr7/WTz/9JC8vLzVv3ly33HKL3N1LNUgFAABQ4ZQqKPXq1UsLFizQbbfdpttuu83ZfQIAAKgQSjX84+7urnPnzjm7LwAAABVKqUaUOnfurAceeEBdunRR48aNi0wwOWbMGKd0DgAAwJVKFZT27dunsLAwHTt2TMeOHbN77sLCuQAAAJXdZQWl9957T59++qn8/f112223qVevXmXVLwAAAJdz+B6lFStWaNKkSTpz5ozy8vIUHx+v5557riz7BgAA4FIOjyitWbNGCQkJ6tu3ryTpk08+UXx8vB577DEutwEVQWamY8tSAAAc5nBQOnjwoDp06GB73LVrV+Xl5enYsWMKCAgok84BcFBmphQaKuXmltzW19e6MCoAoEQOB6WCggJ5ev6vuaenp7y8vHT27Nky6RiAy5CdbQ1JK1daA9Ol+PuzzhcAOKhUn3oDUEGFhkrt2rm6F6hKzC7XFhbKJy1Nql9fOr+UFVAVXVZQ+uijj+Tn52d7bLFY9Omnn6p+/fp27S7cxwTACTIzpaNHrb+ULBbJw6NoG+49grP5+1sv0w4aVOzTHpJaSTJ8fa3vP0YpUUU5HJQCAwO1bNkyu20NGjTQypUr7ba5ubkRlABnOX/vkUdurlqV1JZ7j+BMQUHWAGTyAYHCwkJlfvyxmk+ZYm1DUEIV5XBQ+uKLL8qyHwCKc/7eI8vrryvV3V0hLVvKo7gRJYl7j+B8QUHm76nCQuWlpZVvfwAX4B4loBIwrr9eee7uUtu2xV96AwCUiVItigsAAFAdEJQAAABMEJQAAABMEJQAAABMEJQAAABMEJQAAABMEJQAAABMEJQAAABMEJQAAABMEJQAAABMEJQAAABMEJQAAABMEJQAAABMEJQAAABMEJQAAABMEJQAAABMEJQAAABMEJQAAABMEJQAAABMEJQAAABMuDQo5efna9KkSYqOjlZMTIyWLVtm2nbv3r0aMGCAIiIi1K9fP+3Zs6fYdgsXLtTEiRPtthmGoblz56p9+/a68cYbNWfOHFksFqeeCwAAqHpcGpTmzJmjPXv2aMWKFZo2bZoWLFigzZs3F2mXm5urkSNHKjo6WuvWrVNkZKRGjRql3Nxcu3YbN27USy+9VGT/5cuXa+PGjVqwYIHmz5+vDz74QMuXLy+z8wIAAFWDy4JSbm6u1q5dq8mTJyssLEzdunXT8OHDtWrVqiJtN23aJC8vL8XFxalFixaaPHmyatWqZQtVBQUFmjZtmiZNmqSmTZsW2f/111/XuHHjFB0drfbt22v8+PHFHgcAAOCvXBaUUlNTVVBQoMjISNu2qKgoJScnF7kslpycrKioKLm5uUmS3Nzc1K5dO+3cuVOSNXTt27dPb7/9tt3rSdLRo0d15MgR3XDDDXbHOXTokI4dO1ZGZwcAAKoCT1cdOCsrS/Xq1VPNmjVt2/z9/ZWfn6/jx4+rfv36dm2Dg4Pt9m/QoIHS09MlSbVr19aaNWtMjyNJjRo1sjuOJP3222922//KYrGosLCwFGeGCy7UjzpegcJCecj6fpS7O7W8QrwnneevNSwsLJSoaanxvnSOsrr32GVBKS8vzy4kSbI9Pnv2rENtL25XnDNnzti99qWO81cZGRklvjYcs3v3bld3odLySUtTK0npGRnS9ddTSyehjs7hc/6/+9LSlOfOh6ivFO/LisllQcnLy6tIULnw2Nvb26G2F7crzl9DkZeXl91xfHx8TPcLDg6Wn59fia8Pc4WFhdq9e7fCw8Pl4eHh6u5UTuf/QvpbcLB2SdTyCvGedJ7CwkJlpKZKkkJatpTatnVthyox3pfOcerUqTIZ5HBZUAoICFBOTo4KCgrk6WntRlZWlry9vVW7du0ibbOzs+22ZWdnm142u3jfC6/dpEkT2/eS1LBhQ9P93N3decM6iYeHB7UsrfN1cz//1zq1dA7q6FweHh629ypKj/fllXEvo1FNl42VhoaGytPT03ZDtiQlJiYqPDy8yMlGREQoKSlJhmFIss6LtGPHDkVERJR4nICAAAUGBioxMdHuOIGBgQ4FLQAAUH25LCj5+Piob9++mj59unbt2qXPPvtMy5Yt05AhQyRZR30u3F/Uo0cPnThxQgkJCcrIyFBCQoLy8vLUs2dPh441cOBAzZ07V1u3btXWrVs1b94823EAAADMuPTuu/j4eIWFhWno0KGaMWOGxo4dq+7du0uSYmJitGnTJkmSn5+fFi9erMTERMXGxio5OVlLliyRr6+vQ8d58MEHdeedd2rMmDF69NFHdffdd+v+++8vq9MCAABVhMvuUZKso0qzZ8/W7Nmzizy3b98+u8dt2rTR+vXrS3zNWbNmFdnm4eGh+Ph4xcfHl76zAACg2uHznAAAACYISgAAACYISgAAACYISgAAACYISgAAACYISgAAACZcOj0AUK1lZkoXLc1TREpK+fQFAFAsghLgCpmZUmiolJtbcltfX8nfX/rjj7LvFwDADkEJcIXsbGtIWrnSGpguxd9fatyYoAQALkBQAlwpNFRq167kdoWFZd8XAEAR3MwNAABgghElAMCVceRDB/7+UlBQ2fcFcDKCEgCgVArq1pXh6yu3QYNKbuzraw1UhCVUMgQlAECpnLv6aln27JFHTs6lG6akSIMGWT/EQFBCJUNQAgCUXlCQ1Ly5q3sBlBlu5gYAADBBUAIAADBBUAIAADBBUAIAADBBUAIAADBBUAIAADBBUAIAADBBUAIAADBBUAIAADBBUAIAADDBEiYAgPKRklJyG39/1oNDhUJQAgCULX9/ydfXujBuSXx9rYGKsIQKgqAEAChbQUHW8JOdfel2KSnWMJWdTVBChUFQApwtM9OxXwhAdRIURPhBpURQApwpM1MKDZVyc0tu6+trvSQBAKiwCEqAM2VnW0PSypXWwHQp3LQKABUeQQkoC6GhUrt2ru4FAOAKMY8SAACACYISAACACYISAACACYISAACACYISAACACYISAACACYISAACACYISAACACYISAACACYISAACACZYwARyVmWldy+1SUlLKpy8AgHJBUAIckZlpXb8tN7fktr6+1gVvAQCVHkEJcER2tjUkrVxpDUyX4u8vBQWVT7+AqsiRkVl+zlBOCErA5QgNldq1c3UvgKrJ3986IjtoUMltfX2tgYqwhDJGUAIAVAxBQdbw48i9gIMGWdsRlFDGCEoAgIojKIjwgwqF6QEAAABMEJQAAABMuDQo5efna9KkSYqOjlZMTIyWLVtm2nbv3r0aMGCAIiIi1K9fP+3Zs8fu+Y0bN+r2229XRESERo8erT/++MNu35CQELuv2NjYMjsvAABQNbg0KM2ZM0d79uzRihUrNG3aNC1YsECbN28u0i43N1cjR45UdHS01q1bp8jISI0aNUq55+e02bVrlyZPnqwxY8borbfe0okTJxQfH2/bPyMjQ6Ghofr2229tX6+++mq5nScAAKicXHYzd25urtauXaulS5cqLCxMYWFhSk9P16pVq9SjRw+7tps2bZKXl5fi4uLk5uamyZMn6+uvv9bmzZsVGxurlStXqmfPnurbt68kawDr0qWLDh48qKZNm2r//v1q0aKFGjZs6IIzBQAAlZXLRpRSU1NVUFCgyMhI27aoqCglJyfLYrHYtU1OTlZUVJTc3NwkSW5ubmrXrp127txpez46OtrW/pprrlFgYKCSk5MlSfv379e1115bticEAACqHJeNKGVlZalevXqqWbOmbZu/v7/y8/N1/Phx1a9f365tcHCw3f4NGjRQenq6JOnYsWNq1KhRked/++03SdagZLFY1Lt3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coejqu3N3G+88YY++OADbdiwQRs2bFDXrl3VtWtXbdiwocSZwGEvIiJC+fn5+vnnn23bfvrpJzVu3JhaXoZGjRrpwIEDdn/9/PTTT2rSpAl1vAIRERH68ccfbRPYStYPIJjN7J+Xl6e9e/dS22JYLBaNGTNGv/76q9544w397W9/s3ueWjomICBAn3zyie33z4YNG9SoUSONGzdOCQkJki694gT+JyIiQunp6SosLLRt279/v+0Pd2fUsdoGpcaNG6tZs2a2r1q1aqlWrVpq1qxZiTOBw951112nzp07Kz4+Xqmpqfrmm2+0ZMkSDRw4kFpehq5du6pGjRr697//rZ9//llffPGFFi1apMGDB1PHK3DjjTfqmmuuUXx8vNLT07VkyRLt2rVL/fv3lyT169dPO3bs0JIlS5Senq74+Hg1adJEN910k4t7XvG888472rp1q55++mnVrl1bWVlZysrKsl3apJaO8fT0tPv906xZM9s6oxfWJy1pxQlY9erVSxaLRTNmzNCBAwe0atUqffPNN7rnnnskOamOVzq3QVUxYcIEu7kWSpoJHPZOnDhhPPHEE0bbtm2NDh06GC+99JJtzh9q6bj09HTj/vvvN9q1a2fcfvvtxvLly6ljKVw8X80vv/xi3HfffUbr1q2Nu+66y/juu+/s2v+///f/jO7duxtt2rQxhg4dWm3nqinOX2s5bNgwo2XLlkW+/jp3ErU0ZzbhpGEYRpcuXYrMi3apFSeqs4vrmJ6ebvv57t69u/Hxxx/btb/SOroZxvmxfAAAANiptpfeAAAASkJQAgAAMEFQAgAAMEFQAgAAMEFQAgAAMEFQAgAAMEFQAgAAMEFQAlChnTt3Ti+99JJuu+02tW7dWp07d9bMmTN16tSpcjn+wYMH9dVXX5XLsQBUPAQlABXa3Llz9cknn+jpp5/W5s2bNXPmTH333XcaP358uRx/0qRJ2rVrV7kcC0DFQ1ACUKGtX79ejz76qDp06KAmTZqoQ4cOmj59ur788ksdO3bM1d0DUMURlABUaG5ubtqyZYssFottW2RkpD788EPVq1dPXbt21TvvvKN+/fqpTZs2GjZsmA4dOqSxY8cqIiJCd999t9LT0237rl27Vj169FDr1q110003acaMGbaVxydOnKiJEyeqT58+6tChgx5//HH98MMPWrBggQYPHixJev3119WlSxeFh4crNjZW27dvL9+CAChXrPUGoEJ7+eWXNX/+fF1zzTXq1KmTbr75ZsXExKhWrVqSpK5du+rs2bOaM2eOateureHDh8tiseixxx5TdHS0pkyZonr16mnhwoX64YcfNGLECD377LNq1aqV9uzZoyeeeELz5s1T9+7dNXHiRL333nt6+eWX5e/vr+bNm2vEiBGKjIzUqFGjdPjwYd1zzz1asGCBgoOD9frrr2vTpk36+uuv5e7O351AVeTp6g4AwKWMHj1aTZs21Ztvvqm3335ba9asUa1atTR58mT169dPkhQbG6ubb75ZktS+fXtlZWVp4MCBkqQ+ffpoxYoVkiRfX18lJCSoe/fukqQmTZpo+fLlSk9Pt20LDw9X165dbcevUaOGfH19VbduXW3btk1ubm4KDAxUkyZN9M9//lNdunSRxWIhKAFVFEEJQIXXp08f9enTRzk5Ofr222+1cuVKTZ48WSEhIZKkpk2b2tp6e3urcePGdo/PnTsnSWrdurW8vb01f/58ZWRkaN++fTpw4IBiYmJs7f+678ViYmLUsmVL9e7dW61atdJtt92mAQMGyNOTf0qBqoo/gQBUWKmpqZo1a5btcb169dS7d2+98cYbuvrqq7VlyxZJkoeHh91+ZqM733zzjWJjY5Wdna1bb71V8+fPV7t27ezaeHl5mfbHx8dHa9eu1YoVK3TjjTdq3bp1io2N1dGjR0t7igAqOIISgAqrsLBQy5cv1969e+2216xZU97e3qpfv/5lvd7atWvVr18/PfnkkxowYIBatGihzMxMOXqrZlJSkhYvXqz27dsrPj5emzdvVn5+vhITEy+rHwAqD8aLAVRYYWFh6ty5sx555BE9/vjjioyMVHZ2ttavX6+zZ8+qe/fuWrBggcOvV7duXSUlJWnfvn1yd3fX4sWLlZWVpbNnz5ru4+vrq19++UW///67vL29bTd6d+jQQdu2bVNubq7tEiCAqocRJQAV2gsvvKC7775bCxYsUM+ePTVq1CidOnVKK1eulJ+f32W91pgxY9SgQQP94x//0AMPPCAvLy8NHDhQKSkppvsMGDBA33zzjYYPH67Q0FAlJCTolVdeUc+ePbVo0SI9++yzatGixZWeJoAKiukBAAAATDCiBAAAYIKgBAAAYIKgBAAAYIKgBAAAYIKgBAAAYIKgBAAAYIKgBAAAYIKgBAAAYIKgBAAAYIKgBAAAYIKgBAAAYIKgBAAAYOL/A06mEnuLoqJnAAAAAElFTkSuQmCC"
+     },
+     "metadata": {},
+     "output_type": "display_data"
+    }
+   ],
+   "source": [
+    "mu, sigma = 100, 15\n",
+    "x = mu + sigma * np.random.randn(10000)\n",
+    "plt.hist(x, bins=50, color='r', density=True, histtype='step')\n",
+    "plt.xlabel(\"Smarts\")\n",
+    "plt.ylabel(\"Probability\")\n",
+    "plt.title(\"Histogram of IQ\")\n",
+    "plt.text(60, .025, r\"$\\mu=100,\\sigma=15$\")\n",
+    "plt.xlim(40, 160)\n",
+    "plt.ylim(0, 0.03)"
+   ],
+   "metadata": {
+    "collapsed": false,
+    "ExecuteTime": {
+     "end_time": "2024-07-14T08:34:03.470482600Z",
+     "start_time": "2024-07-14T08:34:03.376478600Z"
+    }
+   },
+   "id": "52021ce32766ec43",
+   "execution_count": 72
+  },
+  {
+   "cell_type": "markdown",
+   "source": [
+    "* 【3】累次概率分布"
+   ],
+   "metadata": {
+    "collapsed": false
+   },
+   "id": "aa57a4f0a589ef11"
+  },
+  {
+   "cell_type": "code",
+   "outputs": [
+    {
+     "data": {
+      "text/plain": "(0.0, 1.1)"
+     },
+     "execution_count": 73,
+     "metadata": {},
+     "output_type": "execute_result"
+    },
+    {
+     "data": {
+      "text/plain": "<Figure size 640x480 with 1 Axes>",
+      "image/png": ""
+     },
+     "metadata": {},
+     "output_type": "display_data"
+    }
+   ],
+   "source": [
+    "mu, sigma = 100, 15\n",
+    "x = mu + sigma * np.random.randn(10000)\n",
+    "plt.hist(x, bins=50, color='r', density=True, cumulative=True)\n",
+    "plt.xlabel(\"Smarts\")\n",
+    "plt.ylabel(\"Probability\")\n",
+    "plt.title(\"Histogram of IQ\")\n",
+    "plt.text(60, 0.8, r\"$\\mu=100,\\sigma=15$\")\n",
+    "plt.xlim(50, 165)\n",
+    "plt.ylim(0, 1.1)"
+   ],
+   "metadata": {
+    "collapsed": false,
+    "ExecuteTime": {
+     "end_time": "2024-07-14T08:36:11.971146Z",
+     "start_time": "2024-07-14T08:36:11.788717900Z"
+    }
+   },
+   "id": "858ca4e1323929c8",
+   "execution_count": 73
+  },
+  {
+   "cell_type": "markdown",
+   "source": [
+    "### 1.6误差图\n",
+    "* 【1】基本误差图"
+   ],
+   "metadata": {
+    "collapsed": false
+   },
+   "id": "a454a6f90a940763"
+  },
+  {
+   "cell_type": "code",
+   "outputs": [
+    {
+     "data": {
+      "text/plain": "<ErrorbarContainer object of 3 artists>"
+     },
+     "execution_count": 74,
+     "metadata": {},
+     "output_type": "execute_result"
+    },
+    {
+     "data": {
+      "text/plain": "<Figure size 640x480 with 1 Axes>",
+      "image/png": "iVBORw0KGgoAAAANSUhEUgAAAhgAAAGYCAYAAAAA3JtVAAAAOXRFWHRTb2Z0d2FyZQBNYXRwbG90bGliIHZlcnNpb24zLjUuMSwgaHR0cHM6Ly9tYXRwbG90bGliLm9yZy/YYfK9AAAACXBIWXMAAA9hAAAPYQGoP6dpAAAmNElEQVR4nO3dfXBU1cHH8V+yqWETGisSMMAzYCmxiIHIIi8K2lKtVByqM22n1adorZBppZk6OkXAR4LQoUDVGQbFUGSKhUFH0f5R69iqM07lsTiF5kUthBe1VALGKhGSkDSbff64T5INbJLd5Nz372dmZzZ3b849Obl797fnnnNvViKRSAgAAMCgbLcrAAAAgoeAAQAAjCNgAAAA4wgYAADAOAIGAAAwjoABAACMI2AAAADjCBgAAMC4HLc23N7ersbGRuXm5io7m5wDAIAfdHR0qLW1VRdeeKFycnqPEa4FjMbGRn3wwQdubR4AAAzCuHHjdPHFF/f6umsBIzc3V5JVwWg0aqzceDyuuro6FRcXKxKJGCsXPdHOzqGtnUE7O4N2doad7dzS0qIPPvig63O8N64FjM7TItFoVHl5ecbKjcfjkqS8vDx2XhvRzs6hrZ1BOzuDdnaGE+3c3/AGBj8AAADjCBgAAMA4AgYAADCOgAEAAIwjYAAAAOMIGAAAwDgCBgAAMI6AAQAAjCNgAAAA4wgYAADAOAIGAAAwjoABAACMI2AAAADjCBgAANc1NUlZWdajqcnt2sAEAgYAADCOgAEAAIwjYAAAAOMIGAAAwDgCBgAAMI6AAQAAjCNgAAAA4wgYAADAOAIGAAAwjoABAACMI2AAAADjCBgAAMA4AgYAADCOgAEAAIwjYAAAAOMIGAAAwDgCBgAAMI6AAQAAjCNgAAAA4wgYAADAOAIGAAAwjoABAACMI2AMQlOTlJVlPZqa3K4NAADeQcAAAADGETAAAIBxBAwAAGAcAQMAABhHwAAAAMYRMAAAgHEEDAAAYBwBAwDgKSdOuF0DmGA8YJw8eVLl5eWaPn265syZo7Vr16q1tdX0ZgAAAUXACIYck4UlEgmVl5eroKBAO3fuVGNjo5YvX67s7GwtXbrU5KYAAICHGQ0YR48eVVVVlfbs2aPhw4dLksrLy7Vu3ToCBgDgPPX11qOlpXtZVZUUjVrPi4qsB/zH6CmSwsJCbd26tStcdDpz5ozJzQAAAqKyUorFpNmzu5ctWWIti8Ws1+FPRnswCgoKNGfOnK6fOzo6tGPHDs2cObPX34nH44rH48bq0FmWyTJ735YkRbq258AmPcPJdg472toZtLMzzm3nu++W5s+3ejCuu846nm7c2KGZMxOSrN4L/iWZs3N/TrdMowHjXBs2bNB7772n559/vtd16urqbNl2bW2tLeUma2nJlnSlJKmmpkbRaIft2/QaJ9oZFtraGbSzM5LbOTtbys7uPp7m5dUpO9u6RfXJk9YDA+Pm/mxbwNiwYYO2b9+uxx57TMXFxb2uV1xcrLy8PGPbjcfjqq2tVUlJiSKRiLFyU0m+RfvkyZOVn2/vti680Pp7Ghvjtm4rHU62c9jR1s6gnZ3RWzsnH08nTJig0lLn6xYkdu7Pzc3NaXUO2BIwVq9erV27dmnDhg268cYb+1w3EonY8ma2q9ye2zh3e8HYViacaGdYaGtn0M7OOLedk5t89GjvHOP8zo79Od3yjAeMTZs26ZlnntGjjz6qefPmmS4eABBwl1zidg1ggtGAceTIET3xxBNavHixYrGYGhoaul4rLCw0uSkAAOBhRgPGa6+9png8rs2bN2vz5s09Xjt48KDJTQEAAA8zGjAWL16sxYsXmywSAAD4EDc7AwAAxhEwAACAcQQMAABgHAEDAAAYR8AAAADGETAAAIBxBAwAAGAcAQMAABhHwAAAAMYRMAAAA9bUJGVlWY/kW64DBAxDTpxwuwb+xkEKAIKFgGEIAQMAgG4EDAAAYJzRu6mGRX299Whp6V5WVSVFo9bzoiLrAQBAWNGDMQCVlVIsJs2e3b1syRJrWSxmvQ4AQJjRgzEAZWXSggVWD0ZnyNi0SZo1y3ru9d6LpiZp6FDr+ZkzUn6+u/UBAAQPAWMAOk+BJM92KC2Vpk51rUoAAHgKp0gAAIBxBAxDLrnE7RoAAOAdBAxDCBgAAHQjYAAAAOMIGAAAwDgCBgAAMI6AgZS4+RgAYDAIGAFDMAAAeAEBw4e4cyuAweLLCOxGwPAhAgaAoMnPlxIJ68HtC4KBgAEAAIzjXiQ2G+yNxbg1PADAj+jB8DhuDQ8A8CN6MDzO77eGl7g9PACEEQHD47g1PAC3mPpykFxOY6OZusH7OEUCAACMI2D4EHduBdAbrm9hDm05OAQMHyJgAAC8joDhAaRkAEDQEDAAAIBxBAwAAGAcAQMAABhHwIBvMFYFAPyDgAEAMII7PSMZAQOew0EK8Cfeu0hGwIDncJACAP/jXiQAgIzV11uPlpbuZVVVUjRqPe+8jxLCi4ABV3GQAvypslJatarnsiVLup+vXClVVDhaJXgMAQOu4iAF+FNZmbRggfXlYPZsa9mmTdKsWdZzvhiAgBFyJ05I48e7t30OUoA/dfYuJk8ZLy2Vpk51rUrwGAJGyLkdMDhIAUAwMYsEAGAEd3pGMnowBiE/X0ok3K5F+vwyoJKDFOBPvHeRjB6MEKmslGKx7rEOkjWgMhazHpWV7tUtGQcpAPA/ejBChAGVAACnEDBChAGVAACncIoEAAAYR8AIuXTGO3BvEABApggYAZZOMCBgAADsQMAIMIIBgHRwrIAdGOSJHvxyrQwA5rh9RV8Ek209GG1tbbr55pu1d+9euzaBJPX10v79VhjoVFVlLdu/33o9HX65VgYAwNts6cFobW3Vfffdp0OHDtlRvG/Z+S3B1F1JuVYGEGz0UsIpxgPG4cOHdd999ynhp2toO8TOgGEqGHCtDCDYTH0ZAfpjPGC8/fbbmjFjhu69916VlpaaLh698Esw4Fwv4K6BfhnhvYtMGQ8Yt912W0brx+NxxeNxY9vvLMtkmQPRsxsyIknav79DF1xg9ewkd0NaVY38//O4UlU9nXVMlpW8TmHh+etk0s7JZX30UVzjxtlX7yDyyj4ddEFp5/7eJyNGWA/ry4i1XklJXFOmnFuGPe/djz7yTzv7+Zhj5/6cbpmuzyKpq6uzpdza2lpbyk1XZWWRfvObUT2WlZd3j6ldtOi4ysqskZctLdmSrpQk1dTUKBrtOK+8dNY5d71PP31PVVVtAyoreZ2PP67R6dOpt5dOOyeXdejQIeXnN/W5zmDbIKjc3qfDwu/tPJBjRTrvS1Pv3f/936MqLfVHOwfhmONmO7seMIqLi5WXl2esvHg8rtraWpWUlCgSiRgrN1MPPSQtWhRXS4t03XVWPTZu7NDMmZ09GCNVVDRSUs/TGpMnT1Z+fuoy29s7U+PkXrebXNbcuZenLCud7fW3Tjrt3NmL05H0nmxuLlZHx/m9OCbqFFRe2aeDLijtnPw+GTFicq+nNZLXmzNnQo/17Hzvjh8/XlKNL9o53bb0Ijv35+bm5rQ6B1wPGJFIxJadzK5y0zVmjPVI3kGnTs3WVVedv25yNa16D3y76ZRlap3u11K/uHXr+YPJkntxkgeTmaxTULm9T4eF39s5ueoNDREVF/e/3ujRPd9Ppt67qWas1NZGNGxYVB0dEY0ZE/H0jJV029LL7Nif0y3P9YCBnoI0kIopr4A/mXrvppqxYgWVyyUxYyXoCBgOSve+H0EJGH6Z2QIEgcnrW5h676YKKhs3dmjYsAMqLr5MY8Z4s6eIa4WYwb1IHJROwID9mpqkrCzr0XT+mDXAl7x4Fd6iIiuUJF+xYMqUhL761RZNnerdD2kvtqUf2dqDcfDgQTuL970wpmRCFmAPu09Jhum9y+ldMzhF4qIwXlHP1EEqSKeSABPsPiVp6r17ySXS6dNmyrILp3fNIGC4iJQ8cAQMwJ/8EDBgBgHDRaRkAHYK02kNu9GWmSNgwPPCOFYFMIEPRXNoy8wxi8Rj2InPx4huAPAfejA8hoBxPsaqAOjU1CQNHWo9P3NGobllgB8RMOB5mYxV4eADAN7AKRIAAGAcAQO+xKkkeAVXhgVS4xQJfImAAXhDfr6USLhdC3gRAQOewEEKAIKFUyQAAMA4AgYAAD7hpzE/BAwA8AA/fXAA6SBgAAAA4xjkGUIMqAQA2I0eDACBwqkGwBsIGAAAwDgCBgAAMI6AAQAAjCNgAAAA4wgYAIBAYaCvNxAwAACAcVwHAylxrQwAwGAQMAKGYAAA8AICBgCEEF9GYDfGYAAAAOMIGAAAwDgChs06uyETCet5kLS0ZCsnJ8JUMAChxZTY3hEwEGonTrhdAwBhEMYgQsCA7bzci0PAAHrn5fcuvI9ZJAAAWyXPWInH3a0LnEPAQGjU11uPlpbuZVVVUjRqPS8qsh4AgMHjFAlCo7JSisWk2bO7ly1ZYi2LxazXAb/jtIY5tOXg0IOB0CgrkxYssHowOkPGpk3SrFnWc3ovAMAcAoYHcEU9Z3SeAkkewV1aKk2d6lqVPK2pSRo61Hp+5gzf4ABkhlMkAABfYhaYtxEwEFjpHHwuucT+esCcMF5LAL0jYHgbAQOBRcAAAPcwBgO+wVgVeN2JE9L48W7XIpiYZu4/BAwEAgcfeAEBwz6VldKqVT2XLVnS/XzlSqmiwtEqoR8EDAQCBx8g2Jhm7j8EDAQCBx84jV4zZzHN3H8IGL3gGgD+wsEHTqPXDKZl+rnT2yk5q5yIpJgaG+MqKDBe1bQwiwRA6KQz3bW/dcrKpH37pDff7F62aZO1bN8+6/WBYvplesI+C8zr+wk9GAissB98YC87e80YLJoe3uPeRsBAYHHwARAUfhzzQ8AAEFhO9wQMJNT68YMDzvPjmB/GYAA+wWWyM+f0OeqBBIzKSikW6579JFkfHLGY9aisNFc/+JedY37sQg8GALiIKdZIhx9nyhEwAASCX081+PGDIwi4FIH9OEUCIBA41YCw8fpAdnowAARCkE419PbBwbfuzAV5yi8BAwAcEKRTDV7/4PCTIAcMr+MUCQAAMI4eDACBRU9AuPh1oG9Q0YMBILAIGOHCQF9voQcDABAIQRroGwTGezBaW1u1fPlyTZs2TbNnz9a2bdtMb2JQuBqiPbx+Vz8AwVdUZA3qLS3tXtY50HfqVAKG04z3YKxfv17vvPOOtm/fruPHj2vp0qUaNWqU5s2bZ3pT8BBGagMIO46DPRntwWhubtZzzz2nFStWaNKkSbrhhht09913a+fOnSY3AwBAWpwch5NuT25YenyNBowDBw6ovb1dV155ZdeyWCym6upqdXR0mNwUXFRfL+3fLx08GO1aVlVlLdu/33odALzAiwN9wxIwjJ4iaWho0EUXXaQLLriga9nw4cPV2tqqU6dOadiwYef9TjweVzweN1aHzrJ6K9NaHEnadm/lpLdeGG3enKXVqyOSvtq1LPm2wf/zPx1auTLhfMWU3v/Nb//bnvu0c/X2YjuZ+v+mWufcY4fTx4og7rup9HeM7v/3Jbv2gUz0nBJrlbN/f4cuuMA69p07JdbJetu9n6T7vzMaMFpaWnqEC0ldP7e1taX8nbq6OpNV6FJbW5tyeUtLtiSrh6WmpkbRaOqelXTXC6NrrsnRjh1f0Nmz2br7bitk/OIX/9TkyWckScOH/0dVVe2u1C2d/5tf/7fvvvuunKy3F9vJ1P+3r3U6jx1OHyuCvO+m0tsxuj9O7APpqKws0m9+M6rHsvLy7pMCixYdV1lZvT75JEeffGIdLzu/lL300kc6dqz7eDl8eLttf9u7777r2n6SlUgkjH3VfPnll7VmzRrt2bOna9mRI0d00003ae/evfrSl77Utby5uVn/+Mc/VFxcrLy8PFNVUDweV21trUpKShSJRM57valJuvBCa3ljY7zXa/mnu15YxeNxvf32u5ozx9qJ33gjrmuucblSSu//5rf/bec+/eUvl2jYMCuwO1FvL7aTqf9vqnXOPXY4fawI4r6bSn/H6P7YuQ9kIrkH47rrrHI2buzQzJk9ezBWrcrS6tW9j0ZI7vG142/79NM2FRRk3s59aW5uVl1dnSZOnNjn57fRHoyRI0fqs88+U3t7u3JyrKIbGho0ZMgQFRQUpPydSCQyoJ2sP72Vm7zIWqe3309vPVi80kbp/N/8+r9N3p+dqLcX28nU/7evdTqPHU4fK4K876Yy0GO/E/tAOsaMsR7JlzuYOjVbV13Vc72f/ES65Za+rs2R3bVt+/42sztKuuUZDRgTJ05UTk6OqqqqNG3aNEnSvn37VFJSouxsLhoaZF4cSOUVQbgDJtPvgIEJ0k34MmX0Uz8ajeqWW25RRUWFampq9Oqrr2rbtm1auHChyc3Ag/wUMPLzpUTCevjxw94NXhz17sU6Idz8dBx0gvELbS1btkwVFRW64447NHToUP3sZz/TN7/5TdObARBy9KrAa9INGGEJIsYDRjQa1bp167Ru3TrTRQNwAHekBOxFwAAQSpWV0qpVPZclX+dk5UqposLRKhF6AB8iYADowYt3pPRi6AHQt0AFDGu0fkRSTI2NcfUyMxZAH7w46t2LoScTQZhJBGQqUAEDQDB5MfQA6BsXp0gD0+EQdmEZlAZ4hanPHTc/vwgYaSBgIOy8GDBM1Smd9zfHAO8Iy3VsCBiAx4Tl4AMCBuB1jME4B9PhAABOMvW5k6qc6uqsrgHGTn9+ETDOwXQ4ILj6OpDH49Knn+aovl76+OP0D/advWbAQJn63ElVTvIt5J3+/CJgnMPv0+EQDlwme2D6PpBHtGhRofbsydLq1b2tw5cMmGfqcydVORs3duiaa7IzKscUAsY5mA4HPyBgDExfB/J4PK5PP23QpEkj+7m9titVR4CZ+txJVc6UKQnXPr8IGABCo68DeTwuVVW1q6hIGjOGLxlhQmC3BwEjDV6coofwqK+XDhyI9vjAY+AxYI4XA0ZvnzuZjvlx8/OLaappIGDATVu2ZOm///tyXXddpGvZkiVSLGY9KitdrFwApPP+duIYkOkUa6bOBpupfc7Nzy96MACPW7w4ocsue0//9V+XdYUMxgSY45WAkSkvfuv2Ay5F4BwCBuBxRUXSV7/aogkTupcxJgAYGC5F4BwCBoBACeJ1KfjWbQ6XInAOAQPwocF22XP7cH/hW7c5XIrAOQQMwIe8OCYA9uFbN/wo1AGDQVIA/IBv3fYisNsj1NNUmeYFACBg2CPUPRgA4Fd8KPYuiAN9/Sg0AYNR2ACChIABrwvNKZLKSuuqh50DpCSuhojBa2qSsrKsR/L5cQAIu9D0YDAKGwAA54QmYDAKGwAA54TmFAkAAHBOqAMGg6QGJxrtUHt7PO27P4Kp0QDCg4ABOIiAAQRL55RYvmidLzRjMAAAcEsYr81BwABswrVXLNxYDQinUJ8iAezEtVcywzVFgGChBwOwCddeARBmgQ0YJ05IBQVu1wJhxrVXkAp3cUZYBPYUCaP1AXgRxyaERWB7MAAv8tPU6DCOegdgTiACRqrR+tXVWV0j18MyWh/e56eA4UV+Cz3MJEKYBeIUSarR+uXl2YzWB+AqZhIhzALRg5FqtP7GjR265horP/ENAYAbmEmEMAtEwEg1Wn/KlASj9eEbXIwqmJhJhDALxCkSAADgLYENGAymA+BFHJsQFgQMAHAQxyaERSDGYNjBb9PhAAD+ZupzJz9fam+Pq6qqSvn5pYMvcIAIGABCJ50DOV8ygMEJ7CkSAADgHgIGAAAwjoABAACMI2AAPtE5JiCRMHshLu7uCcAOBAwg5AgYAOzALBIAQOgwS8h+BAwgRLh9OACncIoECBFuH+5vdo3DAexADwYQItw+HIBTCBiAISdOSOPHu12LvnH7cABO4RQJYAizMQCgGwEDCDnu7gnADpwiAQYgSLMxCBgA7GBLD0YikdBdd92lF154wY7iB4VR2DCB2RgA0DfjAaOjo0Nr1qzRnj17TBcNeEZZmbRvn/Tmm93LNm2ylu3bZ70OAGFm9BTJyZMndf/99+tf//qXCgoKTBYNeAqzMQCgb0Z7MN59910VFRVp9+7d+uIXv2iyaAABwEwbIDyM9mDMnTtXc+fOzeh34vG44vG4ke1bxUSSyjVSLFLo/J+Z+t/5VfI+V1iYep9LZ7/sax072trJ90rytj76KK5x49Jbz+lriti5T3Ns6saxwxn27s/plZlRwDh79qxOnjyZ8rXCwkLl5eVlUpwkqa6uLuPf6U1LS7akKyVZvSnRaIexspFabW2t21VwVfI+9/HHNTp9+vx9LnmdmpqalPtlOuuYbOt0tmfHtg4dOqT8/KZ+1/vLXw7p9OnU69nNjn3ayfb2i7AfO5ziZjtnFDCqq6u1cOHClK89/vjjuv766zOuQHFx8YCCSSrJ58MnTZqkgoKIkXJxvng8rtraWpWUlCgSCW87J+9zkydPTjkzabDr2NHW6dRpsDqn8nYkfZY2Nxero8O6heW5U3mT6zRhwgSVlpqvU1/s3KedaG+/4NjhDDvbubm5Oa3OgYwCxowZM3Tw4MEBVyqVSCRi7I9PLsZkuehd2Nv5/H3OznXsfK8YKbaHrVulVat6Lisv7x72tXKlVFGR+poitbURDR1qPXf6miJ27NNOtLffhP3Y4RR79uf0yuNCW4DNOq+9Ejbp3litsvL8ILJkSffzziACwF8IGEAvmprU9S36zBkuzJapdKfycodXIJgIGABcxTVFgGCyLWC8/vrrdhUNoA9e7nnhvidAeHA3VcBjgnwxqnQDBkEE8D8CBuAxQQ4Y6SJgAP4XqICRny+1t8f1t7/t81S3MIBw4y7OCCMGeQIuSnUNiKoqKRq1nhcVSSNGuFI1ABiUQPVgAH5TWSnFYt3TMyXrGhCxmPWorHSvbgAwGPRgAC7iGhAAgoqAAbgonWtAcNNJAH7EKRIAAGAcAQPwGKZoAggCAgbgMQQMAEFAwAAAAMYRMAAAgHEEDAAD1tQkZWVZj+SZMABAwAAAAMYRMAAAgHEEDAAAYBwBAwAAGMelwoEQ6rx9OADYhR4MAABgHAEDAAAYR8AAAADGETAAAIBxDPIEBoHBkgCQGj0YAADAOAIGAAAwjoABAACMI2AAAADjCBgAAMA4AgaQhhMn3K4BAPgLAQNIAwEDADJDwAACzAvBqPNaIYmE9RxAOHChLeAc9fXWo6Wle1lVlRSNWs+LiqyHH5w4IY0f73Yt0sNFy4BgoQcDOEdlpRSLSbNndy9bssRaFotZrwMA+kYPBnCOsjJpwQKrB6MzZGzaJM2aZT33au9FkHpeAPgfAQM4R+cHcVNT97LSUmnqVNeqlJbKSmnVqp7Llizpfr5ypVRR4WiVAIQYAQMICL/2vAAIJgIGkIZLLnG7Bv3za88LgGBikCeQBj8EDADwEgIGEGAEIwBu4RQJ4AF2XQOCgAHALfRgAAAA4wgYAADAOAIGAAAwjoABwAgv3FgNgHcQMAAYQcAAkIyAAQAAjGOaKoCMcWM1AP2hBwNAxrilPYD+0IMBIGPcWA1AfwgYADLGjdUA9IdTJAAAwDgCBgAjuO8JgGQEDABGEDAAJCNgAAAA4wgYAADAOAIGAAAwjoABAACMMxowPv/8c61YsUJXX321Zs6cqQceeECff/65yU0AAAAfMBowVq5cqQMHDmjLli166qmndOTIET344IMmNwEAAHzA2JU8m5ub9corr2jXrl264oorJEnLly/X7bffrtbWVuXm5praFAAA8DhjPRjZ2dl68sknNXHixB7L4/G4mpKvJwwAAALPWA/GkCFDdO211/ZY9vTTT+uyyy7TsGHDev29eDyueDxuqhpdZZksE+cLQztbf1rk/5/H5dafmmlbO1lvr7SRCWHYp72AdnaGne2cbpkZBYyzZ8/q5MmTKV8rLCxUXl5e1887duzQyy+/rK1bt/ZZZl1dXSZVSFttba0t5aKnILdzS0u2pCslSTU1NYpGO1ytT7pt7WS9vdZGJgR5n/YS2tkZbrZzRgGjurpaCxcuTPna448/ruuvv16StHPnTq1Zs0bLli3T7M57OfeiuLi4RzAZrHg8rtraWpWUlCgSiRgrFz2FoZ2Tz+xNnjxZ+fnu1CPTtnay3l5pIxPCsE97Ae3sDDvbubm5Oa3OgYwCxowZM3Tw4ME+13nqqae0fv16/eIXv9Add9zRb5mRSMSWncyuctFTkNs5+c+y/k736tJdh/4r4WS9vdZGJgR5n/YS2tkZdrRzuuUZG4MhSS+++KLWr1+vZcuW6c477zRZNAAA8BFjAePUqVN6+OGHdeutt2r+/PlqaGjoem3YsGEkVQAAQsRYwNizZ4+am5v14osv6sUXX+zx2muvvaYxY8aY2hTgiPx8KZFwuxYA4E/GAsb8+fM1f/58U8UBAAAfMzoGA4D76HkB4AXcTRUAABhHwAAAAMYRMAAAgHEEDAAAYBwBAwAAGEfAAAAAxhEwAACAcQQMAABgHAEDAAAYR8AAAADGETAAAIBxBAwAAGAcNzsDMGDcWA1Ab+jBAAAAxhEwAACAcQQMAABgHAEDAAAYR8AAAADGETAAAIBxBAwAAGAcAQMAABhHwAAAAMYRMAAAgHEEDAAAYBwBAwAAGEfAAAAAxhEwAACAcQQMAABgXI5bG+7o6JAktbS0GC03Ho9LkpqbmxWJRIyWjW60s3Noa2fQzs6gnZ1hZzt3fm53fo73JiuRSCSMbjlN//73v/XBBx+4sWkAADBI48aN08UXX9zr664FjPb2djU2Nio3N1fZ2ZypAQDADzo6OtTa2qoLL7xQOTm9nwhxLWAAAIDgousAAAAYR8AAAADGBSpgtLa2avny5Zo2bZpmz56tbdu2uV2lQDp58qTKy8s1ffp0zZkzR2vXrlVra6vb1Qq0xYsX64EHHnC7GoHV1tamVatW6aqrrtLVV1+tRx99VJw9Nq++vl5lZWWaOnWq5s6dq9/+9rduVylQ2tradPPNN2vv3r1dy44dO6Y777xTpaWluummm/Tmm286Vh/XpqnaYf369XrnnXe0fft2HT9+XEuXLtWoUaM0b948t6sWGIlEQuXl5SooKNDOnTvV2Nio5cuXKzs7W0uXLnW7eoH00ksv6Y033tCtt97qdlUCa82aNdq7d6+eeuopNTU16d5779WoUaP0/e9/3+2qBcrPf/5zjRo1Si+88IIOHz6s+++/X6NHj9YNN9zgdtV8r7W1Vffdd58OHTrUtSyRSOiee+5RcXGxdu/erVdffVVLlizRH//4R40aNcr2OgWmB6O5uVnPPfecVqxYoUmTJumGG27Q3XffrZ07d7pdtUA5evSoqqqqtHbtWk2YMEHTpk1TeXm5/vCHP7hdtUA6deqU1q9fr5KSErerElinTp3S7t27tXr1ak2ePFmzZs3SXXfdperqarerFiiNjY2qqqrST37yE40bN07XX3+95syZo7feesvtqvne4cOH9b3vfU///Oc/eyz/61//qmPHjunhhx/W+PHjVVZWptLSUu3evduRegUmYBw4cEDt7e268soru5bFYjFVV1f3ezEQpK+wsFBbt27V8OHDeyw/c+aMSzUKtnXr1unb3/62vvKVr7hdlcDat2+fhg4dqunTp3ctW7x4sdauXetirYJnyJAhikajeuGFF/Sf//xHR48e1f79+zVx4kS3q+Z7b7/9tmbMmKFnn322x/Lq6mpdfvnlysvL61oWi8VUVVXlSL0CEzAaGhp00UUX6YILLuhaNnz4cLW2turUqVPuVSxgCgoKNGfOnK6fOzo6tGPHDs2cOdPFWgXTW2+9pb/97W/66U9/6nZVAu3YsWMaPXq0fv/732vevHn6xje+occff5wvJobl5ubqoYce0rPPPqspU6boW9/6lq699lp997vfdbtqvnfbbbdp+fLlikajPZY3NDRoxIgRPZZdfPHFOnHihCP1CswYjJaWlh7hQlLXz21tbW5UKRQ2bNig9957T88//7zbVQmU1tZWrVy5Ug899JCGDBnidnUCrbm5WR9++KGeeeYZrV27Vg0NDXrooYcUjUZ11113uV29QDly5Ii+/vWv60c/+pEOHTqk1atXa9asWVqwYIHbVQuk3j4XnfpMDEzAyM3NPa/ROn/mAG2PDRs2aPv27XrsscdUXFzsdnUCZdOmTbriiit69BbBHjk5OTpz5oweeeQRjR49WpJ0/Phx7dq1i4Bh0FtvvaXnn39eb7zxhoYMGaKSkhKdPHlSmzdvJmDYJDc397we/La2Nsc+EwMTMEaOHKnPPvtM7e3tXZcubWho0JAhQ1RQUOBy7YJn9erV2rVrlzZs2KAbb7zR7eoEzksvvaRPPvmka0xRZ1h+5ZVX9Pe//93NqgVOYWGhcnNzu8KFJF166aWqr693sVbB884772js2LE9Ptwuv/xyPfnkky7WKthGjhypw4cP91j2ySefnHfaxC6BCRgTJ05UTk6OqqqqNG3aNEnW4K2SkhLudWLYpk2b9Mwzz+jRRx9lCrBNfve736m9vb3r51//+teSpPvvv9+tKgXWlClT1Nraqvfff1+XXnqpJGu2VHLgwOCNGDFCH374odra2rq67Y8ePaoxY8a4XLPgmjJlirZs2aKzZ892Bbt9+/YpFos5sv3AfPJGo1HdcsstqqioUE1NjV599VVt27ZNCxcudLtqgXLkyBE98cQTWrRokWKxmBoaGroeMGf06NEaO3Zs1yM/P1/5+fkaO3as21ULnC9/+cv62te+pmXLlunAgQP6y1/+oi1btugHP/iB21ULlLlz5+oLX/iCHnzwQb3//vt6/fXX9eSTT+qHP/yh21ULrOnTp6uoqEjLli3ToUOHtGXLFtXU1Og73/mOI9sP1M3OWlpaVFFRoT/96U8aOnSofvzjH+vOO+90u1qBsmXLFj3yyCMpXzt48KDDtQmPzqt4/upXv3K5JsF0+vRprV69Wn/+858VjUZ122236Z577lFWVpbbVQuUw4cP65e//KVqamo0bNgw3X777brjjjtoZ4Muu+wyPf3005oxY4Yk6cMPP9SKFStUXV2tsWPHavny5br66qsdqUugAgYAAPCGwJwiAQAA3kHAAAAAxhEwAACAcQQMAABgHAEDAAAYR8AAAADGETAAAIBxBAwAAGAcAQMAABhHwAAAAMYRMAAAgHEEDAAAYNz/ARHismX3mdNEAAAAAElFTkSuQmCC"
+     },
+     "metadata": {},
+     "output_type": "display_data"
+    }
+   ],
+   "source": [
+    "x = np.linspace(0, 10, 50)\n",
+    "dy = 0.5\n",
+    "y = np.sin(x) + dy * np.random.randn(50)\n",
+    "plt.errorbar(x, y, yerr=dy, fmt='+b')"
+   ],
+   "metadata": {
+    "collapsed": false,
+    "ExecuteTime": {
+     "end_time": "2024-07-14T08:39:05.747989200Z",
+     "start_time": "2024-07-14T08:39:05.667989400Z"
+    }
+   },
+   "id": "62536ff69951d35f",
+   "execution_count": 74
+  },
+  {
+   "cell_type": "markdown",
+   "source": [
+    "* 【2】柱形图误差图"
+   ],
+   "metadata": {
+    "collapsed": false
+   },
+   "id": "89a3d29ecac6b473"
+  },
+  {
+   "cell_type": "code",
+   "outputs": [
+    {
+     "data": {
+      "text/plain": "<matplotlib.legend.Legend at 0x2d4832b0dc0>"
+     },
+     "execution_count": 75,
+     "metadata": {},
+     "output_type": "execute_result"
+    },
+    {
+     "data": {
+      "text/plain": "<Figure size 640x480 with 1 Axes>",
+      "image/png": ""
+     },
+     "metadata": {},
+     "output_type": "display_data"
+    }
+   ],
+   "source": [
+    "menMeans = (20, 35, 30, 35, 27)\n",
+    "womenMeans = (25, 32, 34, 20, 25)\n",
+    "menStd = (2, 3, 4, 1, 2)\n",
+    "womenStd = (3, 5, 2, 3, 3)\n",
+    "ind = ['G1', 'G2', 'G3', 'G4', 'G5']\n",
+    "width = 0.35\n",
+    "p1 = plt.bar(ind, menMeans, width=width, label='Men', yerr=menStd)\n",
+    "p2 = plt.bar(ind, womenMeans, width=width, label='Women', yerr=womenStd)\n",
+    "\n",
+    "plt.ylabel(\"Scores\")\n",
+    "plt.title(\"Scores by group and gender\")\n",
+    "plt.yticks(np.arange(0, 81, 10))\n",
+    "plt.legend()"
+   ],
+   "metadata": {
+    "collapsed": false,
+    "ExecuteTime": {
+     "end_time": "2024-07-14T08:43:09.647281800Z",
+     "start_time": "2024-07-14T08:43:09.560953600Z"
+    }
+   },
+   "id": "3bb90be3b53c2b0",
+   "execution_count": 75
+  },
+  {
+   "cell_type": "markdown",
+   "source": [
+    "### 1.7面向对象的风格简介\n",
+    "* 【1】普通图"
+   ],
+   "metadata": {
+    "collapsed": false
+   },
+   "id": "8b5eba81ab7c830e"
+  },
+  {
+   "cell_type": "code",
+   "outputs": [
+    {
+     "data": {
+      "text/plain": "Text(0.5, 1.0, 'title')"
+     },
+     "execution_count": 77,
+     "metadata": {},
+     "output_type": "execute_result"
+    },
+    {
+     "data": {
+      "text/plain": "<Figure size 640x320 with 1 Axes>",
+      "image/png": ""
+     },
+     "metadata": {},
+     "output_type": "display_data"
+    }
+   ],
+   "source": [
+    "x = np.linspace(0, 5, 10)\n",
+    "y = x ** 2\n",
+    "\n",
+    "fig = plt.figure(figsize=(8, 4), dpi=80)\n",
+    "axes = fig.add_axes([0.1, 0.1, 0.8, 0.8])\n",
+    "\n",
+    "axes.plot(x, y, 'r')\n",
+    "axes.set_xlabel('x')\n",
+    "axes.set_ylabel('y')\n",
+    "axes.set_title('title')"
+   ],
+   "metadata": {
+    "collapsed": false,
+    "ExecuteTime": {
+     "end_time": "2024-07-14T08:49:00.641047800Z",
+     "start_time": "2024-07-14T08:49:00.543548400Z"
+    }
+   },
+   "id": "6f53fce27f845ef6",
+   "execution_count": 77
+  },
+  {
+   "cell_type": "markdown",
+   "source": [
+    "* 【2】画中画"
+   ],
+   "metadata": {
+    "collapsed": false
+   },
+   "id": "3f5f042ced178e8d"
+  },
+  {
+   "cell_type": "code",
+   "outputs": [
+    {
+     "data": {
+      "text/plain": "Text(0.5, 1.0, 'insert title')"
+     },
+     "execution_count": 79,
+     "metadata": {},
+     "output_type": "execute_result"
+    },
+    {
+     "data": {
+      "text/plain": "<Figure size 640x480 with 2 Axes>",
+      "image/png": ""
+     },
+     "metadata": {},
+     "output_type": "display_data"
+    }
+   ],
+   "source": [
+    "x = np.linspace(0, 5, 10)\n",
+    "y = x ** 2\n",
+    "\n",
+    "fig = plt.figure()\n",
+    "ax1 = fig.add_axes([0.1, 0.1, 0.8, 0.8])\n",
+    "ax2 = fig.add_axes([0.2, 0.5, 0.4, 0.3])\n",
+    "ax1.plot(x, y, 'r')\n",
+    "ax1.set_xlabel('x')\n",
+    "ax1.set_ylabel('y')\n",
+    "ax1.set_title('title')\n",
+    "ax2.plot(y, x, 'g')\n",
+    "ax2.set_xlabel('y')\n",
+    "ax2.set_ylabel('x')\n",
+    "ax2.set_title('insert title')"
+   ],
+   "metadata": {
+    "collapsed": false,
+    "ExecuteTime": {
+     "end_time": "2024-07-14T08:52:13.970286800Z",
+     "start_time": "2024-07-14T08:52:13.835422700Z"
+    }
+   },
+   "id": "6ce8324d944338cc",
+   "execution_count": 79
+  },
+  {
+   "cell_type": "markdown",
+   "source": [
+    "* 【3】多子图"
+   ],
+   "metadata": {
+    "collapsed": false
+   },
+   "id": "9230c3e662ddb8fc"
+  },
+  {
+   "cell_type": "code",
+   "outputs": [
+    {
+     "data": {
+      "text/plain": "Text(0.5, 1.0, 'Lower')"
+     },
+     "execution_count": 81,
+     "metadata": {},
+     "output_type": "execute_result"
+    },
+    {
+     "data": {
+      "text/plain": "<Figure size 640x480 with 3 Axes>",
+      "image/png": ""
+     },
+     "metadata": {},
+     "output_type": "display_data"
+    }
+   ],
+   "source": [
+    "def f(t):\n",
+    "    return np.exp(-t) * np.cos(2 * np.pi * t)\n",
+    "\n",
+    "\n",
+    "t1 = np.arange(0.0, 3.0, 0.01)\n",
+    "fig = plt.figure()\n",
+    "fig.subplots_adjust(hspace=0.4, wspace=0.4)\n",
+    "ax1 = plt.subplot(2, 2, 1)\n",
+    "ax1.plot(t1, f(t1))\n",
+    "ax1.set_title('Upper left')\n",
+    "\n",
+    "ax2 = plt.subplot(2, 2, 2)\n",
+    "ax2.plot(t1, f(t1))\n",
+    "ax2.set_title('Upper right')\n",
+    "ax3 = plt.subplot(2, 1, 2)\n",
+    "ax3.plot(t1, f(t1))\n",
+    "ax3.set_title('Lower')"
+   ],
+   "metadata": {
+    "collapsed": false,
+    "ExecuteTime": {
+     "end_time": "2024-07-14T08:56:29.222893700Z",
+     "start_time": "2024-07-14T08:56:29.075668Z"
+    }
+   },
+   "id": "72b85da1f042e563",
+   "execution_count": 81
+  },
+  {
+   "cell_type": "markdown",
+   "source": [
+    "### 1.8三维图形简介\n",
+    "* 【1】三维数据点与线"
+   ],
+   "metadata": {
+    "collapsed": false
+   },
+   "id": "de43cd0d8f753d8"
+  },
+  {
+   "cell_type": "code",
+   "outputs": [
+    {
+     "data": {
+      "text/plain": "<mpl_toolkits.mplot3d.art3d.Path3DCollection at 0x2d483c75b50>"
+     },
+     "execution_count": 84,
+     "metadata": {},
+     "output_type": "execute_result"
+    },
+    {
+     "data": {
+      "text/plain": "<Figure size 640x480 with 1 Axes>",
+      "image/png": ""
+     },
+     "metadata": {},
+     "output_type": "display_data"
+    }
+   ],
+   "source": [
+    "from mpl_toolkits import mplot3d\n",
+    "\n",
+    "ax = plt.axes(projection='3d')\n",
+    "zline = np.linspace(0, 15, 1000)\n",
+    "xline = np.sin(zline)\n",
+    "yline = np.cos(zline)\n",
+    "ax.plot3D(xline, yline, zline)\n",
+    "\n",
+    "zdata = 15 * np.random.random(100)\n",
+    "xdata = np.sin(zdata)\n",
+    "ydata = np.cos(zdata)\n",
+    "ax.scatter3D(xdata, ydata, c=zdata,cmap=\"spring\")"
+   ],
+   "metadata": {
+    "collapsed": false,
+    "ExecuteTime": {
+     "end_time": "2024-07-14T09:00:53.844063500Z",
+     "start_time": "2024-07-14T09:00:53.752246100Z"
+    }
+   },
+   "id": "5c8c90c6feed630b",
+   "execution_count": 84
+  },
+  {
+   "cell_type": "markdown",
+   "source": [
+    "* 【2】三维数据曲面图"
+   ],
+   "metadata": {
+    "collapsed": false
+   },
+   "id": "c15860196eb05c49"
+  },
+  {
+   "cell_type": "code",
+   "outputs": [
+    {
+     "data": {
+      "text/plain": "<mpl_toolkits.mplot3d.art3d.Poly3DCollection at 0x2d483d08160>"
+     },
+     "execution_count": 85,
+     "metadata": {},
+     "output_type": "execute_result"
+    },
+    {
+     "data": {
+      "text/plain": "<Figure size 640x480 with 1 Axes>",
+      "image/png": ""
+     },
+     "metadata": {},
+     "output_type": "display_data"
+    }
+   ],
+   "source": [
+    "def f(x,y):\n",
+    "    return np.sin(np.sqrt(x**2+y**2))\n",
+    "x=np.linspace(-6,6,30)\n",
+    "y=np.linspace(-6,6,30)\n",
+    "X,Y=np.meshgrid(x,y)\n",
+    "Z=f(X,Y)\n",
+    "\n",
+    "ax=plt.axes(projection='3d')\n",
+    "ax.plot_surface(X,Y,Z,cmap=\"viridis\")"
+   ],
+   "metadata": {
+    "collapsed": false,
+    "ExecuteTime": {
+     "end_time": "2024-07-14T09:02:56.441078300Z",
+     "start_time": "2024-07-14T09:02:56.309078400Z"
+    }
+   },
+   "id": "c367b71bc77be91e",
+   "execution_count": 85
+  }
+ ],
+ "metadata": {
+  "kernelspec": {
+   "display_name": "Python 3",
+   "language": "python",
+   "name": "python3"
+  },
+  "language_info": {
+   "codemirror_mode": {
+    "name": "ipython",
+    "version": 2
+   },
+   "file_extension": ".py",
+   "mimetype": "text/x-python",
+   "name": "python",
+   "nbconvert_exporter": "python",
+   "pygments_lexer": "ipython2",
+   "version": "2.7.6"
+  }
+ },
+ "nbformat": 4,
+ "nbformat_minor": 5
+}
Index: Sklearn库.ipynb
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Sklearn库.ipynb b/Sklearn库.ipynb
new file mode 100644
--- /dev/null	
+++ b/Sklearn库.ipynb	
@@ -0,0 +1,2548 @@
+{
+ "cells": [
+  {
+   "cell_type": "markdown",
+   "source": [
+    "**scikit-learn库是当今最流行的机器学习算法库之一**\n",
+    "**可用来解决分类与回归问题**\n",
+    "**以鸢尾花数据集为例，简单了解八大传统机器学习分类算法的sk-learn实现**"
+   ],
+   "metadata": {
+    "collapsed": false
+   },
+   "id": "507915c447b8a166"
+  },
+  {
+   "cell_type": "markdown",
+   "source": [
+    "## 1.鸢尾花数据集\n",
+    "* 【1】下载数据集"
+   ],
+   "metadata": {
+    "collapsed": false
+   },
+   "id": "1910d69a5a08fbd"
+  },
+  {
+   "cell_type": "code",
+   "outputs": [],
+   "source": [
+    "import seaborn as sns"
+   ],
+   "metadata": {
+    "collapsed": false,
+    "ExecuteTime": {
+     "end_time": "2024-07-14T11:36:14.203329500Z",
+     "start_time": "2024-07-14T11:36:14.188261200Z"
+    }
+   },
+   "id": "8d6bde1505c9bdde",
+   "execution_count": 2
+  },
+  {
+   "cell_type": "code",
+   "outputs": [],
+   "source": [
+    "iris=sns.load_dataset('iris')"
+   ],
+   "metadata": {
+    "collapsed": false,
+    "ExecuteTime": {
+     "end_time": "2024-07-14T11:38:17.543433600Z",
+     "start_time": "2024-07-14T11:38:02.731612500Z"
+    }
+   },
+   "id": "82ef3db004816b72",
+   "execution_count": 4
+  },
+  {
+   "cell_type": "markdown",
+   "source": [
+    "* 【2】数据集的查看"
+   ],
+   "metadata": {
+    "collapsed": false
+   },
+   "id": "4013ef961c9fea17"
+  },
+  {
+   "cell_type": "code",
+   "outputs": [
+    {
+     "data": {
+      "text/plain": "pandas.core.frame.DataFrame"
+     },
+     "execution_count": 5,
+     "metadata": {},
+     "output_type": "execute_result"
+    }
+   ],
+   "source": [
+    "type(iris)"
+   ],
+   "metadata": {
+    "collapsed": false,
+    "ExecuteTime": {
+     "end_time": "2024-07-14T11:39:00.946573700Z",
+     "start_time": "2024-07-14T11:39:00.936483100Z"
+    }
+   },
+   "id": "1e76b42c19728f8b",
+   "execution_count": 5
+  },
+  {
+   "cell_type": "code",
+   "outputs": [
+    {
+     "data": {
+      "text/plain": "(150, 5)"
+     },
+     "execution_count": 6,
+     "metadata": {},
+     "output_type": "execute_result"
+    }
+   ],
+   "source": [
+    "iris.shape"
+   ],
+   "metadata": {
+    "collapsed": false,
+    "ExecuteTime": {
+     "end_time": "2024-07-14T11:39:12.560782Z",
+     "start_time": "2024-07-14T11:39:12.556783Z"
+    }
+   },
+   "id": "df67009aa1cecf24",
+   "execution_count": 6
+  },
+  {
+   "cell_type": "code",
+   "outputs": [
+    {
+     "data": {
+      "text/plain": "   sepal_length  sepal_width  petal_length  petal_width species\n0           5.1          3.5           1.4          0.2  setosa\n1           4.9          3.0           1.4          0.2  setosa\n2           4.7          3.2           1.3          0.2  setosa\n3           4.6          3.1           1.5          0.2  setosa\n4           5.0          3.6           1.4          0.2  setosa",
+      "text/html": "<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>sepal_length</th>\n      <th>sepal_width</th>\n      <th>petal_length</th>\n      <th>petal_width</th>\n      <th>species</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>5.1</td>\n      <td>3.5</td>\n      <td>1.4</td>\n      <td>0.2</td>\n      <td>setosa</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>4.9</td>\n      <td>3.0</td>\n      <td>1.4</td>\n      <td>0.2</td>\n      <td>setosa</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>4.7</td>\n      <td>3.2</td>\n      <td>1.3</td>\n      <td>0.2</td>\n      <td>setosa</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>4.6</td>\n      <td>3.1</td>\n      <td>1.5</td>\n      <td>0.2</td>\n      <td>setosa</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>5.0</td>\n      <td>3.6</td>\n      <td>1.4</td>\n      <td>0.2</td>\n      <td>setosa</td>\n    </tr>\n  </tbody>\n</table>\n</div>"
+     },
+     "execution_count": 7,
+     "metadata": {},
+     "output_type": "execute_result"
+    }
+   ],
+   "source": [
+    "iris.head()"
+   ],
+   "metadata": {
+    "collapsed": false,
+    "ExecuteTime": {
+     "end_time": "2024-07-14T11:39:23.181635900Z",
+     "start_time": "2024-07-14T11:39:23.157211600Z"
+    }
+   },
+   "id": "f8e9fe4aed812f98",
+   "execution_count": 7
+  },
+  {
+   "cell_type": "code",
+   "outputs": [
+    {
+     "name": "stdout",
+     "output_type": "stream",
+     "text": [
+      "<class 'pandas.core.frame.DataFrame'>\n",
+      "RangeIndex: 150 entries, 0 to 149\n",
+      "Data columns (total 5 columns):\n",
+      " #   Column        Non-Null Count  Dtype  \n",
+      "---  ------        --------------  -----  \n",
+      " 0   sepal_length  150 non-null    float64\n",
+      " 1   sepal_width   150 non-null    float64\n",
+      " 2   petal_length  150 non-null    float64\n",
+      " 3   petal_width   150 non-null    float64\n",
+      " 4   species       150 non-null    object \n",
+      "dtypes: float64(4), object(1)\n",
+      "memory usage: 6.0+ KB\n"
+     ]
+    }
+   ],
+   "source": [
+    "iris.info()"
+   ],
+   "metadata": {
+    "collapsed": false,
+    "ExecuteTime": {
+     "end_time": "2024-07-14T11:39:39.603904200Z",
+     "start_time": "2024-07-14T11:39:39.579755100Z"
+    }
+   },
+   "id": "a1da59cbf36b915a",
+   "execution_count": 8
+  },
+  {
+   "cell_type": "code",
+   "outputs": [
+    {
+     "data": {
+      "text/plain": "       sepal_length  sepal_width  petal_length  petal_width\ncount    150.000000   150.000000    150.000000   150.000000\nmean       5.843333     3.057333      3.758000     1.199333\nstd        0.828066     0.435866      1.765298     0.762238\nmin        4.300000     2.000000      1.000000     0.100000\n25%        5.100000     2.800000      1.600000     0.300000\n50%        5.800000     3.000000      4.350000     1.300000\n75%        6.400000     3.300000      5.100000     1.800000\nmax        7.900000     4.400000      6.900000     2.500000",
+      "text/html": "<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>sepal_length</th>\n      <th>sepal_width</th>\n      <th>petal_length</th>\n      <th>petal_width</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>count</th>\n      <td>150.000000</td>\n      <td>150.000000</td>\n      <td>150.000000</td>\n      <td>150.000000</td>\n    </tr>\n    <tr>\n      <th>mean</th>\n      <td>5.843333</td>\n      <td>3.057333</td>\n      <td>3.758000</td>\n      <td>1.199333</td>\n    </tr>\n    <tr>\n      <th>std</th>\n      <td>0.828066</td>\n      <td>0.435866</td>\n      <td>1.765298</td>\n      <td>0.762238</td>\n    </tr>\n    <tr>\n      <th>min</th>\n      <td>4.300000</td>\n      <td>2.000000</td>\n      <td>1.000000</td>\n      <td>0.100000</td>\n    </tr>\n    <tr>\n      <th>25%</th>\n      <td>5.100000</td>\n      <td>2.800000</td>\n      <td>1.600000</td>\n      <td>0.300000</td>\n    </tr>\n    <tr>\n      <th>50%</th>\n      <td>5.800000</td>\n      <td>3.000000</td>\n      <td>4.350000</td>\n      <td>1.300000</td>\n    </tr>\n    <tr>\n      <th>75%</th>\n      <td>6.400000</td>\n      <td>3.300000</td>\n      <td>5.100000</td>\n      <td>1.800000</td>\n    </tr>\n    <tr>\n      <th>max</th>\n      <td>7.900000</td>\n      <td>4.400000</td>\n      <td>6.900000</td>\n      <td>2.500000</td>\n    </tr>\n  </tbody>\n</table>\n</div>"
+     },
+     "execution_count": 9,
+     "metadata": {},
+     "output_type": "execute_result"
+    }
+   ],
+   "source": [
+    "iris.describe()"
+   ],
+   "metadata": {
+    "collapsed": false,
+    "ExecuteTime": {
+     "end_time": "2024-07-14T11:40:13.472466500Z",
+     "start_time": "2024-07-14T11:40:13.455649100Z"
+    }
+   },
+   "id": "6208af2d70e945a4",
+   "execution_count": 9
+  },
+  {
+   "cell_type": "code",
+   "outputs": [
+    {
+     "data": {
+      "text/plain": "setosa        50\nversicolor    50\nvirginica     50\nName: species, dtype: int64"
+     },
+     "execution_count": 10,
+     "metadata": {},
+     "output_type": "execute_result"
+    }
+   ],
+   "source": [
+    "iris.species.value_counts()"
+   ],
+   "metadata": {
+    "collapsed": false,
+    "ExecuteTime": {
+     "end_time": "2024-07-14T11:40:44.122729400Z",
+     "start_time": "2024-07-14T11:40:44.116729Z"
+    }
+   },
+   "id": "32d33fd64b31f2ad",
+   "execution_count": 10
+  },
+  {
+   "cell_type": "code",
+   "outputs": [
+    {
+     "data": {
+      "text/plain": "<seaborn.axisgrid.PairGrid at 0x28a081dba30>"
+     },
+     "execution_count": 11,
+     "metadata": {},
+     "output_type": "execute_result"
+    },
+    {
+     "data": {
+      "text/plain": "<Figure size 1109.5x1000 with 20 Axes>",
+      "image/png": "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vjrL5yzOs2NJ9r3ZWcqxIUSZ1CTKo7aMDBeK0jY6bBRXhLjjg+V8t76ketlx/bN4aMJBdE1ztGLOalq9ejXnn38+K1eubO2sJE3buCLaAUkCRZGRpNbOSfskyq/pRBkmV2crX3G+HVtnO9+9Ost5i/PsWJJ9fp2lHBtClElNojxq21smbYE3GK0VPAH4dn0Jd36wHG8w2ko5q83n8xGLxVo7G0nVNq4KQRAEQRAEQRAEQRBqKPFHawVP9vp2fQkl/uQEUKZMmcLxxx/P4YcfzoQJE5gzZw4Aq1at4uKLL2bUqFGMHTuWV199FdM0KSgo4MorrwRgxIgRLF26FMMweOGFFzj55JM57LDDmDhxIt999131Mb744gvOOOMMDjvsME477TSeeeaZ6rSff/6ZSy65hGOOOYbhw4dz3nnn8csvvyTlXBuizQdQPvnkE0aMGFHjb9iwYQwbNqy1syYIgiAIgiAIgiAISVMZrrtFh+8A6Y3x448/8u677/L++++zcOFCJk2axN13301RURGXXnopp556KvPnz+eZZ57h7bff5t1336V79+68+OKLACxdupQRI0bw9NNP89Zbb/Hkk0+ycOFCLr/8cq655hqWL19OOBzmtttu469//Ss//fQTjz32GC+++GJ12tVXX824ceP49ttvWbhwIT169OCRRx5p9nNtqDYfQBk/fjxLly6t/vv8889JS0vjwQcfbO2sCYIgCIIgCIIgCELSpNgtdaZ7DpDeGDabDa/Xy3vvvcfq1auZNGkSCxYs4LPPPqNv3778/ve/x2Kx0K9fP6644greeuutuPv54IMP+L//+z+GDh2KqqqcfvrpnHjiiUybNg0Au93OtGnTWLBgAX379uWnn37ioIMOwmKx8O6773LRRRcRjUYpKioiLS2NnTt3Nvu5NlS7GkTWNE1uu+02TjjhBM4+++zWzo4gNMnevqa6brS7QRqF5FPVqvi2phmtnBNBEARBEISGEfWY5pPltnJc/yy+jdON57j+WWS5m38mnhEjRjBlyhTeeOMNpk6dit1u5+KLL2b37t2sWrWKkSNHVq9rGAaKosTdT0lJCd27d6+xLD8/nzVr1mC323nnnXd45plnuPXWW/H7/YwbN4577rmH1NRUFi5cyJVXXkkwGKRfv36oqorZBn40tasAyscff8yGDRtq9I2qr6YOirR3ezG4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hrFjx/LYY4/hdDoBcLvd/Pvf/2b8+PGMGzeOv/zlL9x4442sXr2aV199lS+++IIvvviCq666yrO+H3/8kblz5zJs2DDmz5/PsWPHmr0NgnAx2ut1qqoq48aN45tvvvEMmzp1KosXL/b8fvbZZ3n44YdrfBnftWsX1157LUOHDuXGG2/0fLVzu93MmTMHgDlz5rB+/XoAbDYbf/7zn5kwYQKjR4/mpZdealJaBaGlnf3i/N577zF+/HgSExNZsmQJVqsVgP/9739ceeWVJCYmcs0117B161YA1qxZw9KlS9mxYwcjRowAxH1TEFpLe7tOxX1TEDo4TejStm3bpo0fP17LycnRVFXVVq5cqY0ePVrLyMjQEhMTtffff19zOBza8ePHtRkzZmgrV67UNE3TXn75Za1Pnz7aW2+9pTkcDu2HH37QBg4cqP3000+apmna5Zdfrj3//POaw+HQKisrtaefflqbOHGipmmalp6ervXp00dLT09vMH0///yz1qdPH03TNM1ms2lTpkzRnn/+ea2iokLLysrS5s+frz3//POapmnap59+qvXp00d77bXXNIfDoe3du1cbOnSotm7dOk3TNG3p0qXalClTtOPHj2uVlZXa888/r/Xp00f79NNPNU3TtEceeUR75JFHPOvu06ePdsMNN2h5eXlaeXm5dtddd2m/+tWvWmjPC0Ljtffr9LHHHtMef/xxTdM0LTk5WRsyZIg2atQoTVVVTdM0bebMmdrGjRurXc+FhYXaiBEjtKVLl2oOh0PbsWOHNnz4cO3WW2+tdf0vv/yy1rdvX23t2rWaqqratm3btL59+2q7du1qwT0tCE1z9jy99dZbtYKCAi03N1e77rrrtIceekjbvHmzlpiYqCUlJWkul0v79ttvtaFDh2rHjh3TNK3qnD57vmuauG8KQmtpj9epuG8KQsclSqB0cUajkZKSEj7++GMOHTrEddddx7Zt21i/fj0JCQnccsst6PV6evXqxa9//Ws++OADz7x9+/blzjvvRK/XM2HCBGbNmsVnn30GwNKlS1m0aBGappGZmYm/vz85OTnNSuvmzZtxOBz8/ve/x2g0EhkZye9+97tqaTKZTNx7773o9XqGDBlC3759SUlJAWDVqlXcfffd9OrVC4PBwOLFiwkLC6t3nXfeeSehoaGYTCamT59OWlpas7ZBEC5Ge79Op0+fzpYtWwDYunUrs2fPRlVVDh06RHJyMrm5uUyYMKHaPJs3b8ZsNvOb3/wGvV5PYmIi1157bb3r6d27N3PnzkWSJMaMGUNoaKi4JoV24U9/+hPBwcGEhYXx29/+lq+++or33nuPm266iZEjR6IoClOmTGHq1Kl8+OGHtS5D3DcFoXW1p+tU3DcFoePSeTsBgncNGzaMV155hffee49ly5ZhMplYsGABeXl5HDx40FNkEaqKHCqK4vkdHx9fbVmRkZEcPnwYgCNHjrBw4ULy8vJISEggODjYU63gYmVmZlJYWMjIkSM9wzRNw+l0UlBQAEBISAiSJHnG6/V6z3qzs7OJjo72jFMUhaioqHrXGRgYWG1Zbre7WdsgCBejvV+n48aNo7S0lOPHj/PDDz8wb948SktL+emnn9A0jUsvvRSTyVRtnpycHCIjI6tdr7GxsZ601eb86xHAYDCIa1JoF+Li4jz/j4yMxOFwcPLkSX755RdWrlzpGed2uxkzZkytyxD3TUFoXe3pOhX3TUHouEQApYvLysoiJCSE5cuX43A42LZtGw888AALFy5k9OjRLF++3DNtUVERNpvN8/vCiHtGRgaRkZHk5OTwu9/9jv/85z9MnToVgK+//poNGzY0K60RERHExsby1VdfeYZZrVYKCgoIDg5ucP6oqCiysrI8vzVNIzs7u1lpEoS20N6vU4PBwKWXXsqmTZvYuXMnzz77LKWlpWzcuJHy8nJuueWWGvNERESQmZmJqqrIclVhyNOnTzd53YLQHuTk5NCzZ0+g6hozm81ER0dz4403cvfdd3umy8rKqvFSdHZ+cd8UhNbVnq5Tcd8UhI5LVOHp4vbv389dd93FkSNHMBgMhISEAJCYmMiePXv4/PPPcblc5Obmcu+99/LPf/7TM++ePXv47LPPcLvdfP/992zatIlrr70Wm82G2+3GbDYDcOLECV599VUAT8N1F2PKlCnYbDaWLVuGw+GgtLSURx55hAcffLBaNL4uN9xwA2+99RYpKSk4HA5effVVcnNzPeMNBgNlZWUXnT5BaC0d4TqdMWMGK1asID4+nuDgYCZMmMCOHTs4dOgQkydPrjH91KlT0TSNV155BYfDwYEDB/jkk088441GI4CnkT9BaM9eeOEFrFYrOTk5vPzyy8ydO5dbbrmFd999l3379gFV1/E111zDunXrgKpz3Gq1ommauG8KQhtob9epuG8KQsckSqB0cbNmzeLUqVPcd999FBUVERISwqOPPsqoUaNYtmwZzz//PE899RSKojB58mQee+wxz7z9+/dn06ZNPPXUU4SGhvLcc895+qp/+OGHWbJkCeXl5URERHD99dfz3HPPcezYsRrFCRvL19eXFStW8M9//pNly5ahqiqjR4/m9ddfb9T8t99+O3l5edx4440oisLs2bOJiIhAr9cDMHv2bB588EEmT57M5s2bLyqNgtAaOsJ1OnnyZP74xz966mzHxMQQERFBfHw8vr6+Nab39/dn+fLl/PWvf+Xtt98mLi6OWbNmedpeCA0NZcaMGdxwww388Y9/vMg9JwhtIzY2ljlz5lBeXs6VV17JkiVLMBqN2O12Hn30UbKysggMDOSOO+5gwYIFQFVwY+XKlSQmJrJ582Zx3xSEVtberlNx3xSEjknSmlvBVuiSXnnlFZKSknjvvfe8nZRG27t3L9HR0YSGhgJVRZHHjBnDiy++yPjx472cOkFoeR3xOhWEjiQjI4Np06axadMmunfv7u3ktDhx3xQ6g85+nQqC0LZEFR6hy/jiiy94+OGHKSsrw+Vy8fbbbwMwdOhQ7yZMEARBENohcd8UBEEQhOpEFR7BawoKCpg+fXq90+zevbvF1rd48WKefPJJZsyYgcPhYODAgSxfvhyLxdJi6xCEzqatr1NBEOom7puC0P6J+6YgdG6iCo8gCIIgCIIgCIIgCEIDRBUeQRAEQRAEQRAEQRCEBogAiiAIgiAIgiAIgiAIQgNEAEUQBEEQBEEQBEEQBKEBIoAiCIIgCIIgCIIgCILQABFAEQRBEARBEARBEARBaIAIoAiCIAiCIAiCIAiCIDRABFAEQRAEQRAEQRAEQRAaIAIogiAIgiAIgiAIgiAIDfj/KDNM1xenFbEAAAAASUVORK5CYII="
+     },
+     "metadata": {},
+     "output_type": "display_data"
+    }
+   ],
+   "source": [
+    "sns.pairplot(iris, hue='species')"
+   ],
+   "metadata": {
+    "collapsed": false,
+    "ExecuteTime": {
+     "end_time": "2024-07-14T11:41:19.680314600Z",
+     "start_time": "2024-07-14T11:41:18.354978Z"
+    }
+   },
+   "id": "ce3f94c7bd42298c",
+   "execution_count": 11
+  },
+  {
+   "cell_type": "markdown",
+   "source": [
+    "* 【3】标签清洗"
+   ],
+   "metadata": {
+    "collapsed": false
+   },
+   "id": "900cf278ce7d15f8"
+  },
+  {
+   "cell_type": "code",
+   "outputs": [
+    {
+     "data": {
+      "text/plain": "   petal_length  petal_width species\n0           1.4          0.2  setosa\n1           1.4          0.2  setosa\n2           1.3          0.2  setosa\n3           1.5          0.2  setosa\n4           1.4          0.2  setosa",
+      "text/html": "<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>petal_length</th>\n      <th>petal_width</th>\n      <th>species</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>1.4</td>\n      <td>0.2</td>\n      <td>setosa</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>1.4</td>\n      <td>0.2</td>\n      <td>setosa</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>1.3</td>\n      <td>0.2</td>\n      <td>setosa</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>1.5</td>\n      <td>0.2</td>\n      <td>setosa</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>1.4</td>\n      <td>0.2</td>\n      <td>setosa</td>\n    </tr>\n  </tbody>\n</table>\n</div>"
+     },
+     "execution_count": 12,
+     "metadata": {},
+     "output_type": "execute_result"
+    }
+   ],
+   "source": [
+    "iris_simple=iris.drop(['sepal_length','sepal_width'],axis=1)\n",
+    "iris_simple.head()"
+   ],
+   "metadata": {
+    "collapsed": false,
+    "ExecuteTime": {
+     "end_time": "2024-07-14T11:44:57.677110700Z",
+     "start_time": "2024-07-14T11:44:57.664110400Z"
+    }
+   },
+   "id": "aa1bf0776d1e8cc",
+   "execution_count": 12
+  },
+  {
+   "cell_type": "markdown",
+   "source": [
+    "* 【4】标签编码"
+   ],
+   "metadata": {
+    "collapsed": false
+   },
+   "id": "93f4aac2868b99b8"
+  },
+  {
+   "cell_type": "code",
+   "outputs": [],
+   "source": [
+    "from sklearn.preprocessing import LabelEncoder\n",
+    "\n",
+    "encoder = LabelEncoder()\n",
+    "iris_simple[\"species\"]=encoder.fit_transform(iris_simple['species'])"
+   ],
+   "metadata": {
+    "collapsed": false,
+    "ExecuteTime": {
+     "end_time": "2024-07-14T11:47:17.089255800Z",
+     "start_time": "2024-07-14T11:47:16.446118Z"
+    }
+   },
+   "id": "95c83317b402f3c9",
+   "execution_count": 13
+  },
+  {
+   "cell_type": "code",
+   "outputs": [
+    {
+     "data": {
+      "text/plain": "     petal_length  petal_width  species\n0             1.4          0.2        0\n1             1.4          0.2        0\n2             1.3          0.2        0\n3             1.5          0.2        0\n4             1.4          0.2        0\n..            ...          ...      ...\n145           5.2          2.3        2\n146           5.0          1.9        2\n147           5.2          2.0        2\n148           5.4          2.3        2\n149           5.1          1.8        2\n\n[150 rows x 3 columns]",
+      "text/html": "<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>petal_length</th>\n      <th>petal_width</th>\n      <th>species</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>1.4</td>\n      <td>0.2</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>1.4</td>\n      <td>0.2</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>1.3</td>\n      <td>0.2</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>1.5</td>\n      <td>0.2</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>1.4</td>\n      <td>0.2</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>...</th>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n    </tr>\n    <tr>\n      <th>145</th>\n      <td>5.2</td>\n      <td>2.3</td>\n      <td>2</td>\n    </tr>\n    <tr>\n      <th>146</th>\n      <td>5.0</td>\n      <td>1.9</td>\n      <td>2</td>\n    </tr>\n    <tr>\n      <th>147</th>\n      <td>5.2</td>\n      <td>2.0</td>\n      <td>2</td>\n    </tr>\n    <tr>\n      <th>148</th>\n      <td>5.4</td>\n      <td>2.3</td>\n      <td>2</td>\n    </tr>\n    <tr>\n      <th>149</th>\n      <td>5.1</td>\n      <td>1.8</td>\n      <td>2</td>\n    </tr>\n  </tbody>\n</table>\n<p>150 rows × 3 columns</p>\n</div>"
+     },
+     "execution_count": 14,
+     "metadata": {},
+     "output_type": "execute_result"
+    }
+   ],
+   "source": [
+    "iris_simple"
+   ],
+   "metadata": {
+    "collapsed": false,
+    "ExecuteTime": {
+     "end_time": "2024-07-14T11:47:37.397885400Z",
+     "start_time": "2024-07-14T11:47:37.383376200Z"
+    }
+   },
+   "id": "dcd2cd841a3728e9",
+   "execution_count": 14
+  },
+  {
+   "cell_type": "markdown",
+   "source": [
+    "* 【5】数据集的标准化（本数据集特征比较接近，实际处理过程中未标准化"
+   ],
+   "metadata": {
+    "collapsed": false
+   },
+   "id": "bd88151e93753380"
+  },
+  {
+   "cell_type": "code",
+   "outputs": [],
+   "source": [
+    "from sklearn.preprocessing import StandardScaler\n",
+    "import pandas as pd"
+   ],
+   "metadata": {
+    "collapsed": false,
+    "ExecuteTime": {
+     "end_time": "2024-07-14T11:49:17.226647300Z",
+     "start_time": "2024-07-14T11:49:17.205138800Z"
+    }
+   },
+   "id": "ed797526fa030d5a",
+   "execution_count": 15
+  },
+  {
+   "cell_type": "code",
+   "outputs": [
+    {
+     "data": {
+      "text/plain": "       petal_length   petal_width\ncount  1.500000e+02  1.500000e+02\nmean  -4.263256e-16 -4.736952e-16\nstd    1.003350e+00  1.003350e+00\nmin   -1.567576e+00 -1.447076e+00\n25%   -1.226552e+00 -1.183812e+00\n50%    3.364776e-01  1.325097e-01\n75%    7.627583e-01  7.906707e-01\nmax    1.785832e+00  1.712096e+00",
+      "text/html": "<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>petal_length</th>\n      <th>petal_width</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>count</th>\n      <td>1.500000e+02</td>\n      <td>1.500000e+02</td>\n    </tr>\n    <tr>\n      <th>mean</th>\n      <td>-4.263256e-16</td>\n      <td>-4.736952e-16</td>\n    </tr>\n    <tr>\n      <th>std</th>\n      <td>1.003350e+00</td>\n      <td>1.003350e+00</td>\n    </tr>\n    <tr>\n      <th>min</th>\n      <td>-1.567576e+00</td>\n      <td>-1.447076e+00</td>\n    </tr>\n    <tr>\n      <th>25%</th>\n      <td>-1.226552e+00</td>\n      <td>-1.183812e+00</td>\n    </tr>\n    <tr>\n      <th>50%</th>\n      <td>3.364776e-01</td>\n      <td>1.325097e-01</td>\n    </tr>\n    <tr>\n      <th>75%</th>\n      <td>7.627583e-01</td>\n      <td>7.906707e-01</td>\n    </tr>\n    <tr>\n      <th>max</th>\n      <td>1.785832e+00</td>\n      <td>1.712096e+00</td>\n    </tr>\n  </tbody>\n</table>\n</div>"
+     },
+     "execution_count": 16,
+     "metadata": {},
+     "output_type": "execute_result"
+    }
+   ],
+   "source": [
+    "trans=StandardScaler()\n",
+    "_iris_simple=trans.fit_transform(iris_simple[['petal_length','petal_width']])\n",
+    "_iris_simple=pd.DataFrame(_iris_simple,columns=['petal_length','petal_width'])\n",
+    "_iris_simple.describe()"
+   ],
+   "metadata": {
+    "collapsed": false,
+    "ExecuteTime": {
+     "end_time": "2024-07-14T11:50:15.610223900Z",
+     "start_time": "2024-07-14T11:50:15.547248100Z"
+    }
+   },
+   "id": "e5cbded8deaf25d",
+   "execution_count": 16
+  },
+  {
+   "cell_type": "markdown",
+   "source": [
+    "* 【6】构建训练集和测试集（暂不考虑验证集）"
+   ],
+   "metadata": {
+    "collapsed": false
+   },
+   "id": "7ca2d51bba6d33f8"
+  },
+  {
+   "cell_type": "code",
+   "outputs": [
+    {
+     "data": {
+      "text/plain": "     petal_length  petal_width  species\n134           5.6          1.4        2\n86            4.7          1.5        1\n44            1.9          0.4        0\n21            1.5          0.4        0\n34            1.5          0.2        0",
+      "text/html": "<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>petal_length</th>\n      <th>petal_width</th>\n      <th>species</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>134</th>\n      <td>5.6</td>\n      <td>1.4</td>\n      <td>2</td>\n    </tr>\n    <tr>\n      <th>86</th>\n      <td>4.7</td>\n      <td>1.5</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>44</th>\n      <td>1.9</td>\n      <td>0.4</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>21</th>\n      <td>1.5</td>\n      <td>0.4</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>34</th>\n      <td>1.5</td>\n      <td>0.2</td>\n      <td>0</td>\n    </tr>\n  </tbody>\n</table>\n</div>"
+     },
+     "execution_count": 28,
+     "metadata": {},
+     "output_type": "execute_result"
+    }
+   ],
+   "source": [
+    "from sklearn.model_selection import train_test_split\n",
+    "train_set,test_set=train_test_split(iris_simple,test_size=0.2)\n",
+    "test_set.head()"
+   ],
+   "metadata": {
+    "collapsed": false,
+    "ExecuteTime": {
+     "end_time": "2024-07-14T11:55:27.200597400Z",
+     "start_time": "2024-07-14T11:55:27.183375100Z"
+    }
+   },
+   "id": "91dcb26c137e3edc",
+   "execution_count": 28
+  },
+  {
+   "cell_type": "code",
+   "outputs": [
+    {
+     "data": {
+      "text/plain": "     petal_length  petal_width\n139           5.4          2.1\n148           5.4          2.3\n90            4.4          1.2\n41            1.3          0.3\n31            1.5          0.4",
+      "text/html": "<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>petal_length</th>\n      <th>petal_width</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>139</th>\n      <td>5.4</td>\n      <td>2.1</td>\n    </tr>\n    <tr>\n      <th>148</th>\n      <td>5.4</td>\n      <td>2.3</td>\n    </tr>\n    <tr>\n      <th>90</th>\n      <td>4.4</td>\n      <td>1.2</td>\n    </tr>\n    <tr>\n      <th>41</th>\n      <td>1.3</td>\n      <td>0.3</td>\n    </tr>\n    <tr>\n      <th>31</th>\n      <td>1.5</td>\n      <td>0.4</td>\n    </tr>\n  </tbody>\n</table>\n</div>"
+     },
+     "execution_count": 31,
+     "metadata": {},
+     "output_type": "execute_result"
+    }
+   ],
+   "source": [
+    "iris_x_train=train_set[['petal_length','petal_width']]\n",
+    "iris_x_train.head()"
+   ],
+   "metadata": {
+    "collapsed": false,
+    "ExecuteTime": {
+     "end_time": "2024-07-14T11:56:25.200231Z",
+     "start_time": "2024-07-14T11:56:25.186229400Z"
+    }
+   },
+   "id": "55052874ca966dd",
+   "execution_count": 31
+  },
+  {
+   "cell_type": "code",
+   "outputs": [
+    {
+     "data": {
+      "text/plain": "139    2\n148    2\n90     1\n41     0\n31     0\nName: species, dtype: int32"
+     },
+     "execution_count": 32,
+     "metadata": {},
+     "output_type": "execute_result"
+    }
+   ],
+   "source": [
+    "iris_y_train=train_set['species'].copy()\n",
+    "iris_y_train.head()"
+   ],
+   "metadata": {
+    "collapsed": false,
+    "ExecuteTime": {
+     "end_time": "2024-07-14T11:56:53.846771400Z",
+     "start_time": "2024-07-14T11:56:53.758531900Z"
+    }
+   },
+   "id": "b3142621077c7556",
+   "execution_count": 32
+  },
+  {
+   "cell_type": "code",
+   "outputs": [
+    {
+     "data": {
+      "text/plain": "     petal_length  petal_width\n134           5.6          1.4\n86            4.7          1.5\n44            1.9          0.4\n21            1.5          0.4\n34            1.5          0.2",
+      "text/html": "<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>petal_length</th>\n      <th>petal_width</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>134</th>\n      <td>5.6</td>\n      <td>1.4</td>\n    </tr>\n    <tr>\n      <th>86</th>\n      <td>4.7</td>\n      <td>1.5</td>\n    </tr>\n    <tr>\n      <th>44</th>\n      <td>1.9</td>\n      <td>0.4</td>\n    </tr>\n    <tr>\n      <th>21</th>\n      <td>1.5</td>\n      <td>0.4</td>\n    </tr>\n    <tr>\n      <th>34</th>\n      <td>1.5</td>\n      <td>0.2</td>\n    </tr>\n  </tbody>\n</table>\n</div>"
+     },
+     "execution_count": 33,
+     "metadata": {},
+     "output_type": "execute_result"
+    }
+   ],
+   "source": [
+    "iris_x_test=test_set[['petal_length','petal_width']]\n",
+    "iris_x_test.head()"
+   ],
+   "metadata": {
+    "collapsed": false,
+    "ExecuteTime": {
+     "end_time": "2024-07-14T11:57:32.333668800Z",
+     "start_time": "2024-07-14T11:57:32.319162600Z"
+    }
+   },
+   "id": "356a2742ee242836",
+   "execution_count": 33
+  },
+  {
+   "cell_type": "code",
+   "outputs": [
+    {
+     "data": {
+      "text/plain": "134    2\n86     1\n44     0\n21     0\n34     0\nName: species, dtype: int32"
+     },
+     "execution_count": 34,
+     "metadata": {},
+     "output_type": "execute_result"
+    }
+   ],
+   "source": [
+    "iris_y_test=test_set['species'].copy()\n",
+    "iris_y_test.head()"
+   ],
+   "metadata": {
+    "collapsed": false,
+    "ExecuteTime": {
+     "end_time": "2024-07-14T11:58:11.683051700Z",
+     "start_time": "2024-07-14T11:58:11.663041600Z"
+    }
+   },
+   "id": "2c3a5437c6bfca8d",
+   "execution_count": 34
+  },
+  {
+   "cell_type": "markdown",
+   "source": [
+    "## 2.K近领算法\n",
+    "### 2.1基本思想\n",
+    "**与待预测点最近的训练数据集中的k个领居**\n",
+    "**把k个领居中最常见的类别预测为带预测点的类别**\n",
+    "### 2.2sklearn实现"
+   ],
+   "metadata": {
+    "collapsed": false
+   },
+   "id": "32076d1d824b61ee"
+  },
+  {
+   "cell_type": "code",
+   "outputs": [],
+   "source": [
+    "from sklearn.neighbors import KNeighborsClassifier"
+   ],
+   "metadata": {
+    "collapsed": false,
+    "ExecuteTime": {
+     "end_time": "2024-07-14T12:01:02.796370500Z",
+     "start_time": "2024-07-14T12:01:02.689859800Z"
+    }
+   },
+   "id": "195fad271db76c86",
+   "execution_count": 35
+  },
+  {
+   "cell_type": "markdown",
+   "source": [
+    "* 构建分类器对象"
+   ],
+   "metadata": {
+    "collapsed": false
+   },
+   "id": "3c21345fd327b413"
+  },
+  {
+   "cell_type": "code",
+   "outputs": [
+    {
+     "data": {
+      "text/plain": "KNeighborsClassifier()",
+      "text/html": "<style>#sk-container-id-1 {\n  /* Definition of color scheme common for light and dark mode */\n  --sklearn-color-text: black;\n  --sklearn-color-line: gray;\n  /* Definition of color scheme for unfitted estimators */\n  --sklearn-color-unfitted-level-0: #fff5e6;\n  --sklearn-color-unfitted-level-1: #f6e4d2;\n  --sklearn-color-unfitted-level-2: #ffe0b3;\n  --sklearn-color-unfitted-level-3: chocolate;\n  /* Definition of color scheme for fitted estimators */\n  --sklearn-color-fitted-level-0: #f0f8ff;\n  --sklearn-color-fitted-level-1: #d4ebff;\n  --sklearn-color-fitted-level-2: #b3dbfd;\n  --sklearn-color-fitted-level-3: cornflowerblue;\n\n  /* Specific color for light theme */\n  --sklearn-color-text-on-default-background: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, black)));\n  --sklearn-color-background: var(--sg-background-color, var(--theme-background, var(--jp-layout-color0, white)));\n  --sklearn-color-border-box: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, black)));\n  --sklearn-color-icon: #696969;\n\n  @media (prefers-color-scheme: dark) {\n    /* Redefinition of color scheme for dark theme */\n    --sklearn-color-text-on-default-background: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, white)));\n    --sklearn-color-background: var(--sg-background-color, var(--theme-background, var(--jp-layout-color0, #111)));\n    --sklearn-color-border-box: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, white)));\n    --sklearn-color-icon: #878787;\n  }\n}\n\n#sk-container-id-1 {\n  color: var(--sklearn-color-text);\n}\n\n#sk-container-id-1 pre {\n  padding: 0;\n}\n\n#sk-container-id-1 input.sk-hidden--visually {\n  border: 0;\n  clip: rect(1px 1px 1px 1px);\n  clip: rect(1px, 1px, 1px, 1px);\n  height: 1px;\n  margin: -1px;\n  overflow: hidden;\n  padding: 0;\n  position: absolute;\n  width: 1px;\n}\n\n#sk-container-id-1 div.sk-dashed-wrapped {\n  border: 1px dashed var(--sklearn-color-line);\n  margin: 0 0.4em 0.5em 0.4em;\n  box-sizing: border-box;\n  padding-bottom: 0.4em;\n  background-color: var(--sklearn-color-background);\n}\n\n#sk-container-id-1 div.sk-container {\n  /* jupyter's `normalize.less` sets `[hidden] { display: none; }`\n     but bootstrap.min.css set `[hidden] { display: none !important; }`\n     so we also need the `!important` here to be able to override the\n     default hidden behavior on the sphinx rendered scikit-learn.org.\n     See: https://github.com/scikit-learn/scikit-learn/issues/21755 */\n  display: inline-block !important;\n  position: relative;\n}\n\n#sk-container-id-1 div.sk-text-repr-fallback {\n  display: none;\n}\n\ndiv.sk-parallel-item,\ndiv.sk-serial,\ndiv.sk-item {\n  /* draw centered vertical line to link estimators */\n  background-image: linear-gradient(var(--sklearn-color-text-on-default-background), var(--sklearn-color-text-on-default-background));\n  background-size: 2px 100%;\n  background-repeat: no-repeat;\n  background-position: center center;\n}\n\n/* Parallel-specific style estimator block */\n\n#sk-container-id-1 div.sk-parallel-item::after {\n  content: \"\";\n  width: 100%;\n  border-bottom: 2px solid var(--sklearn-color-text-on-default-background);\n  flex-grow: 1;\n}\n\n#sk-container-id-1 div.sk-parallel {\n  display: flex;\n  align-items: stretch;\n  justify-content: center;\n  background-color: var(--sklearn-color-background);\n  position: relative;\n}\n\n#sk-container-id-1 div.sk-parallel-item {\n  display: flex;\n  flex-direction: column;\n}\n\n#sk-container-id-1 div.sk-parallel-item:first-child::after {\n  align-self: flex-end;\n  width: 50%;\n}\n\n#sk-container-id-1 div.sk-parallel-item:last-child::after {\n  align-self: flex-start;\n  width: 50%;\n}\n\n#sk-container-id-1 div.sk-parallel-item:only-child::after {\n  width: 0;\n}\n\n/* Serial-specific style estimator block */\n\n#sk-container-id-1 div.sk-serial {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  background-color: var(--sklearn-color-background);\n  padding-right: 1em;\n  padding-left: 1em;\n}\n\n\n/* Toggleable style: style used for estimator/Pipeline/ColumnTransformer box that is\nclickable and can be expanded/collapsed.\n- Pipeline and ColumnTransformer use this feature and define the default style\n- Estimators will overwrite some part of the style using the `sk-estimator` class\n*/\n\n/* Pipeline and ColumnTransformer style (default) */\n\n#sk-container-id-1 div.sk-toggleable {\n  /* Default theme specific background. It is overwritten whether we have a\n  specific estimator or a Pipeline/ColumnTransformer */\n  background-color: var(--sklearn-color-background);\n}\n\n/* Toggleable label */\n#sk-container-id-1 label.sk-toggleable__label {\n  cursor: pointer;\n  display: block;\n  width: 100%;\n  margin-bottom: 0;\n  padding: 0.5em;\n  box-sizing: border-box;\n  text-align: center;\n}\n\n#sk-container-id-1 label.sk-toggleable__label-arrow:before {\n  /* Arrow on the left of the label */\n  content: \"▸\";\n  float: left;\n  margin-right: 0.25em;\n  color: var(--sklearn-color-icon);\n}\n\n#sk-container-id-1 label.sk-toggleable__label-arrow:hover:before {\n  color: var(--sklearn-color-text);\n}\n\n/* Toggleable content - dropdown */\n\n#sk-container-id-1 div.sk-toggleable__content {\n  max-height: 0;\n  max-width: 0;\n  overflow: hidden;\n  text-align: left;\n  /* unfitted */\n  background-color: var(--sklearn-color-unfitted-level-0);\n}\n\n#sk-container-id-1 div.sk-toggleable__content.fitted {\n  /* fitted */\n  background-color: var(--sklearn-color-fitted-level-0);\n}\n\n#sk-container-id-1 div.sk-toggleable__content pre {\n  margin: 0.2em;\n  border-radius: 0.25em;\n  color: var(--sklearn-color-text);\n  /* unfitted */\n  background-color: var(--sklearn-color-unfitted-level-0);\n}\n\n#sk-container-id-1 div.sk-toggleable__content.fitted pre {\n  /* unfitted */\n  background-color: var(--sklearn-color-fitted-level-0);\n}\n\n#sk-container-id-1 input.sk-toggleable__control:checked~div.sk-toggleable__content {\n  /* Expand drop-down */\n  max-height: 200px;\n  max-width: 100%;\n  overflow: auto;\n}\n\n#sk-container-id-1 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {\n  content: \"▾\";\n}\n\n/* Pipeline/ColumnTransformer-specific style */\n\n#sk-container-id-1 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {\n  color: var(--sklearn-color-text);\n  background-color: var(--sklearn-color-unfitted-level-2);\n}\n\n#sk-container-id-1 div.sk-label.fitted input.sk-toggleable__control:checked~label.sk-toggleable__label {\n  background-color: var(--sklearn-color-fitted-level-2);\n}\n\n/* Estimator-specific style */\n\n/* Colorize estimator box */\n#sk-container-id-1 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {\n  /* unfitted */\n  background-color: var(--sklearn-color-unfitted-level-2);\n}\n\n#sk-container-id-1 div.sk-estimator.fitted input.sk-toggleable__control:checked~label.sk-toggleable__label {\n  /* fitted */\n  background-color: var(--sklearn-color-fitted-level-2);\n}\n\n#sk-container-id-1 div.sk-label label.sk-toggleable__label,\n#sk-container-id-1 div.sk-label label {\n  /* The background is the default theme color */\n  color: var(--sklearn-color-text-on-default-background);\n}\n\n/* On hover, darken the color of the background */\n#sk-container-id-1 div.sk-label:hover label.sk-toggleable__label {\n  color: var(--sklearn-color-text);\n  background-color: var(--sklearn-color-unfitted-level-2);\n}\n\n/* Label box, darken color on hover, fitted */\n#sk-container-id-1 div.sk-label.fitted:hover label.sk-toggleable__label.fitted {\n  color: var(--sklearn-color-text);\n  background-color: var(--sklearn-color-fitted-level-2);\n}\n\n/* Estimator label */\n\n#sk-container-id-1 div.sk-label label {\n  font-family: monospace;\n  font-weight: bold;\n  display: inline-block;\n  line-height: 1.2em;\n}\n\n#sk-container-id-1 div.sk-label-container {\n  text-align: center;\n}\n\n/* Estimator-specific */\n#sk-container-id-1 div.sk-estimator {\n  font-family: monospace;\n  border: 1px dotted var(--sklearn-color-border-box);\n  border-radius: 0.25em;\n  box-sizing: border-box;\n  margin-bottom: 0.5em;\n  /* unfitted */\n  background-color: var(--sklearn-color-unfitted-level-0);\n}\n\n#sk-container-id-1 div.sk-estimator.fitted {\n  /* fitted */\n  background-color: var(--sklearn-color-fitted-level-0);\n}\n\n/* on hover */\n#sk-container-id-1 div.sk-estimator:hover {\n  /* unfitted */\n  background-color: var(--sklearn-color-unfitted-level-2);\n}\n\n#sk-container-id-1 div.sk-estimator.fitted:hover {\n  /* fitted */\n  background-color: var(--sklearn-color-fitted-level-2);\n}\n\n/* Specification for estimator info (e.g. \"i\" and \"?\") */\n\n/* Common style for \"i\" and \"?\" */\n\n.sk-estimator-doc-link,\na:link.sk-estimator-doc-link,\na:visited.sk-estimator-doc-link {\n  float: right;\n  font-size: smaller;\n  line-height: 1em;\n  font-family: monospace;\n  background-color: var(--sklearn-color-background);\n  border-radius: 1em;\n  height: 1em;\n  width: 1em;\n  text-decoration: none !important;\n  margin-left: 1ex;\n  /* unfitted */\n  border: var(--sklearn-color-unfitted-level-1) 1pt solid;\n  color: var(--sklearn-color-unfitted-level-1);\n}\n\n.sk-estimator-doc-link.fitted,\na:link.sk-estimator-doc-link.fitted,\na:visited.sk-estimator-doc-link.fitted {\n  /* fitted */\n  border: var(--sklearn-color-fitted-level-1) 1pt solid;\n  color: var(--sklearn-color-fitted-level-1);\n}\n\n/* On hover */\ndiv.sk-estimator:hover .sk-estimator-doc-link:hover,\n.sk-estimator-doc-link:hover,\ndiv.sk-label-container:hover .sk-estimator-doc-link:hover,\n.sk-estimator-doc-link:hover {\n  /* unfitted */\n  background-color: var(--sklearn-color-unfitted-level-3);\n  color: var(--sklearn-color-background);\n  text-decoration: none;\n}\n\ndiv.sk-estimator.fitted:hover .sk-estimator-doc-link.fitted:hover,\n.sk-estimator-doc-link.fitted:hover,\ndiv.sk-label-container:hover .sk-estimator-doc-link.fitted:hover,\n.sk-estimator-doc-link.fitted:hover {\n  /* fitted */\n  background-color: var(--sklearn-color-fitted-level-3);\n  color: var(--sklearn-color-background);\n  text-decoration: none;\n}\n\n/* Span, style for the box shown on hovering the info icon */\n.sk-estimator-doc-link span {\n  display: none;\n  z-index: 9999;\n  position: relative;\n  font-weight: normal;\n  right: .2ex;\n  padding: .5ex;\n  margin: .5ex;\n  width: min-content;\n  min-width: 20ex;\n  max-width: 50ex;\n  color: var(--sklearn-color-text);\n  box-shadow: 2pt 2pt 4pt #999;\n  /* unfitted */\n  background: var(--sklearn-color-unfitted-level-0);\n  border: .5pt solid var(--sklearn-color-unfitted-level-3);\n}\n\n.sk-estimator-doc-link.fitted span {\n  /* fitted */\n  background: var(--sklearn-color-fitted-level-0);\n  border: var(--sklearn-color-fitted-level-3);\n}\n\n.sk-estimator-doc-link:hover span {\n  display: block;\n}\n\n/* \"?\"-specific style due to the `<a>` HTML tag */\n\n#sk-container-id-1 a.estimator_doc_link {\n  float: right;\n  font-size: 1rem;\n  line-height: 1em;\n  font-family: monospace;\n  background-color: var(--sklearn-color-background);\n  border-radius: 1rem;\n  height: 1rem;\n  width: 1rem;\n  text-decoration: none;\n  /* unfitted */\n  color: var(--sklearn-color-unfitted-level-1);\n  border: var(--sklearn-color-unfitted-level-1) 1pt solid;\n}\n\n#sk-container-id-1 a.estimator_doc_link.fitted {\n  /* fitted */\n  border: var(--sklearn-color-fitted-level-1) 1pt solid;\n  color: var(--sklearn-color-fitted-level-1);\n}\n\n/* On hover */\n#sk-container-id-1 a.estimator_doc_link:hover {\n  /* unfitted */\n  background-color: var(--sklearn-color-unfitted-level-3);\n  color: var(--sklearn-color-background);\n  text-decoration: none;\n}\n\n#sk-container-id-1 a.estimator_doc_link.fitted:hover {\n  /* fitted */\n  background-color: var(--sklearn-color-fitted-level-3);\n}\n</style><div id=\"sk-container-id-1\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>KNeighborsClassifier()</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item\"><div class=\"sk-estimator  sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-1\" type=\"checkbox\" checked><label for=\"sk-estimator-id-1\" class=\"sk-toggleable__label  sk-toggleable__label-arrow \">&nbsp;&nbsp;KNeighborsClassifier<a class=\"sk-estimator-doc-link \" rel=\"noreferrer\" target=\"_blank\" href=\"https://scikit-learn.org/1.4/modules/generated/sklearn.neighbors.KNeighborsClassifier.html\">?<span>Documentation for KNeighborsClassifier</span></a><span class=\"sk-estimator-doc-link \">i<span>Not fitted</span></span></label><div class=\"sk-toggleable__content \"><pre>KNeighborsClassifier()</pre></div> </div></div></div></div>"
+     },
+     "execution_count": 36,
+     "metadata": {},
+     "output_type": "execute_result"
+    }
+   ],
+   "source": [
+    "clf = KNeighborsClassifier()\n",
+    "clf"
+   ],
+   "metadata": {
+    "collapsed": false,
+    "ExecuteTime": {
+     "end_time": "2024-07-14T12:01:34.013513100Z",
+     "start_time": "2024-07-14T12:01:33.918435900Z"
+    }
+   },
+   "id": "448047ef11381b11",
+   "execution_count": 36
+  },
+  {
+   "cell_type": "markdown",
+   "source": [
+    "* 训练"
+   ],
+   "metadata": {
+    "collapsed": false
+   },
+   "id": "cace329f8e697439"
+  },
+  {
+   "cell_type": "code",
+   "outputs": [
+    {
+     "data": {
+      "text/plain": "KNeighborsClassifier()",
+      "text/html": "<style>#sk-container-id-3 {\n  /* Definition of color scheme common for light and dark mode */\n  --sklearn-color-text: black;\n  --sklearn-color-line: gray;\n  /* Definition of color scheme for unfitted estimators */\n  --sklearn-color-unfitted-level-0: #fff5e6;\n  --sklearn-color-unfitted-level-1: #f6e4d2;\n  --sklearn-color-unfitted-level-2: #ffe0b3;\n  --sklearn-color-unfitted-level-3: chocolate;\n  /* Definition of color scheme for fitted estimators */\n  --sklearn-color-fitted-level-0: #f0f8ff;\n  --sklearn-color-fitted-level-1: #d4ebff;\n  --sklearn-color-fitted-level-2: #b3dbfd;\n  --sklearn-color-fitted-level-3: cornflowerblue;\n\n  /* Specific color for light theme */\n  --sklearn-color-text-on-default-background: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, black)));\n  --sklearn-color-background: var(--sg-background-color, var(--theme-background, var(--jp-layout-color0, white)));\n  --sklearn-color-border-box: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, black)));\n  --sklearn-color-icon: #696969;\n\n  @media (prefers-color-scheme: dark) {\n    /* Redefinition of color scheme for dark theme */\n    --sklearn-color-text-on-default-background: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, white)));\n    --sklearn-color-background: var(--sg-background-color, var(--theme-background, var(--jp-layout-color0, #111)));\n    --sklearn-color-border-box: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, white)));\n    --sklearn-color-icon: #878787;\n  }\n}\n\n#sk-container-id-3 {\n  color: var(--sklearn-color-text);\n}\n\n#sk-container-id-3 pre {\n  padding: 0;\n}\n\n#sk-container-id-3 input.sk-hidden--visually {\n  border: 0;\n  clip: rect(1px 1px 1px 1px);\n  clip: rect(1px, 1px, 1px, 1px);\n  height: 1px;\n  margin: -1px;\n  overflow: hidden;\n  padding: 0;\n  position: absolute;\n  width: 1px;\n}\n\n#sk-container-id-3 div.sk-dashed-wrapped {\n  border: 1px dashed var(--sklearn-color-line);\n  margin: 0 0.4em 0.5em 0.4em;\n  box-sizing: border-box;\n  padding-bottom: 0.4em;\n  background-color: var(--sklearn-color-background);\n}\n\n#sk-container-id-3 div.sk-container {\n  /* jupyter's `normalize.less` sets `[hidden] { display: none; }`\n     but bootstrap.min.css set `[hidden] { display: none !important; }`\n     so we also need the `!important` here to be able to override the\n     default hidden behavior on the sphinx rendered scikit-learn.org.\n     See: https://github.com/scikit-learn/scikit-learn/issues/21755 */\n  display: inline-block !important;\n  position: relative;\n}\n\n#sk-container-id-3 div.sk-text-repr-fallback {\n  display: none;\n}\n\ndiv.sk-parallel-item,\ndiv.sk-serial,\ndiv.sk-item {\n  /* draw centered vertical line to link estimators */\n  background-image: linear-gradient(var(--sklearn-color-text-on-default-background), var(--sklearn-color-text-on-default-background));\n  background-size: 2px 100%;\n  background-repeat: no-repeat;\n  background-position: center center;\n}\n\n/* Parallel-specific style estimator block */\n\n#sk-container-id-3 div.sk-parallel-item::after {\n  content: \"\";\n  width: 100%;\n  border-bottom: 2px solid var(--sklearn-color-text-on-default-background);\n  flex-grow: 1;\n}\n\n#sk-container-id-3 div.sk-parallel {\n  display: flex;\n  align-items: stretch;\n  justify-content: center;\n  background-color: var(--sklearn-color-background);\n  position: relative;\n}\n\n#sk-container-id-3 div.sk-parallel-item {\n  display: flex;\n  flex-direction: column;\n}\n\n#sk-container-id-3 div.sk-parallel-item:first-child::after {\n  align-self: flex-end;\n  width: 50%;\n}\n\n#sk-container-id-3 div.sk-parallel-item:last-child::after {\n  align-self: flex-start;\n  width: 50%;\n}\n\n#sk-container-id-3 div.sk-parallel-item:only-child::after {\n  width: 0;\n}\n\n/* Serial-specific style estimator block */\n\n#sk-container-id-3 div.sk-serial {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  background-color: var(--sklearn-color-background);\n  padding-right: 1em;\n  padding-left: 1em;\n}\n\n\n/* Toggleable style: style used for estimator/Pipeline/ColumnTransformer box that is\nclickable and can be expanded/collapsed.\n- Pipeline and ColumnTransformer use this feature and define the default style\n- Estimators will overwrite some part of the style using the `sk-estimator` class\n*/\n\n/* Pipeline and ColumnTransformer style (default) */\n\n#sk-container-id-3 div.sk-toggleable {\n  /* Default theme specific background. It is overwritten whether we have a\n  specific estimator or a Pipeline/ColumnTransformer */\n  background-color: var(--sklearn-color-background);\n}\n\n/* Toggleable label */\n#sk-container-id-3 label.sk-toggleable__label {\n  cursor: pointer;\n  display: block;\n  width: 100%;\n  margin-bottom: 0;\n  padding: 0.5em;\n  box-sizing: border-box;\n  text-align: center;\n}\n\n#sk-container-id-3 label.sk-toggleable__label-arrow:before {\n  /* Arrow on the left of the label */\n  content: \"▸\";\n  float: left;\n  margin-right: 0.25em;\n  color: var(--sklearn-color-icon);\n}\n\n#sk-container-id-3 label.sk-toggleable__label-arrow:hover:before {\n  color: var(--sklearn-color-text);\n}\n\n/* Toggleable content - dropdown */\n\n#sk-container-id-3 div.sk-toggleable__content {\n  max-height: 0;\n  max-width: 0;\n  overflow: hidden;\n  text-align: left;\n  /* unfitted */\n  background-color: var(--sklearn-color-unfitted-level-0);\n}\n\n#sk-container-id-3 div.sk-toggleable__content.fitted {\n  /* fitted */\n  background-color: var(--sklearn-color-fitted-level-0);\n}\n\n#sk-container-id-3 div.sk-toggleable__content pre {\n  margin: 0.2em;\n  border-radius: 0.25em;\n  color: var(--sklearn-color-text);\n  /* unfitted */\n  background-color: var(--sklearn-color-unfitted-level-0);\n}\n\n#sk-container-id-3 div.sk-toggleable__content.fitted pre {\n  /* unfitted */\n  background-color: var(--sklearn-color-fitted-level-0);\n}\n\n#sk-container-id-3 input.sk-toggleable__control:checked~div.sk-toggleable__content {\n  /* Expand drop-down */\n  max-height: 200px;\n  max-width: 100%;\n  overflow: auto;\n}\n\n#sk-container-id-3 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {\n  content: \"▾\";\n}\n\n/* Pipeline/ColumnTransformer-specific style */\n\n#sk-container-id-3 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {\n  color: var(--sklearn-color-text);\n  background-color: var(--sklearn-color-unfitted-level-2);\n}\n\n#sk-container-id-3 div.sk-label.fitted input.sk-toggleable__control:checked~label.sk-toggleable__label {\n  background-color: var(--sklearn-color-fitted-level-2);\n}\n\n/* Estimator-specific style */\n\n/* Colorize estimator box */\n#sk-container-id-3 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {\n  /* unfitted */\n  background-color: var(--sklearn-color-unfitted-level-2);\n}\n\n#sk-container-id-3 div.sk-estimator.fitted input.sk-toggleable__control:checked~label.sk-toggleable__label {\n  /* fitted */\n  background-color: var(--sklearn-color-fitted-level-2);\n}\n\n#sk-container-id-3 div.sk-label label.sk-toggleable__label,\n#sk-container-id-3 div.sk-label label {\n  /* The background is the default theme color */\n  color: var(--sklearn-color-text-on-default-background);\n}\n\n/* On hover, darken the color of the background */\n#sk-container-id-3 div.sk-label:hover label.sk-toggleable__label {\n  color: var(--sklearn-color-text);\n  background-color: var(--sklearn-color-unfitted-level-2);\n}\n\n/* Label box, darken color on hover, fitted */\n#sk-container-id-3 div.sk-label.fitted:hover label.sk-toggleable__label.fitted {\n  color: var(--sklearn-color-text);\n  background-color: var(--sklearn-color-fitted-level-2);\n}\n\n/* Estimator label */\n\n#sk-container-id-3 div.sk-label label {\n  font-family: monospace;\n  font-weight: bold;\n  display: inline-block;\n  line-height: 1.2em;\n}\n\n#sk-container-id-3 div.sk-label-container {\n  text-align: center;\n}\n\n/* Estimator-specific */\n#sk-container-id-3 div.sk-estimator {\n  font-family: monospace;\n  border: 1px dotted var(--sklearn-color-border-box);\n  border-radius: 0.25em;\n  box-sizing: border-box;\n  margin-bottom: 0.5em;\n  /* unfitted */\n  background-color: var(--sklearn-color-unfitted-level-0);\n}\n\n#sk-container-id-3 div.sk-estimator.fitted {\n  /* fitted */\n  background-color: var(--sklearn-color-fitted-level-0);\n}\n\n/* on hover */\n#sk-container-id-3 div.sk-estimator:hover {\n  /* unfitted */\n  background-color: var(--sklearn-color-unfitted-level-2);\n}\n\n#sk-container-id-3 div.sk-estimator.fitted:hover {\n  /* fitted */\n  background-color: var(--sklearn-color-fitted-level-2);\n}\n\n/* Specification for estimator info (e.g. \"i\" and \"?\") */\n\n/* Common style for \"i\" and \"?\" */\n\n.sk-estimator-doc-link,\na:link.sk-estimator-doc-link,\na:visited.sk-estimator-doc-link {\n  float: right;\n  font-size: smaller;\n  line-height: 1em;\n  font-family: monospace;\n  background-color: var(--sklearn-color-background);\n  border-radius: 1em;\n  height: 1em;\n  width: 1em;\n  text-decoration: none !important;\n  margin-left: 1ex;\n  /* unfitted */\n  border: var(--sklearn-color-unfitted-level-1) 1pt solid;\n  color: var(--sklearn-color-unfitted-level-1);\n}\n\n.sk-estimator-doc-link.fitted,\na:link.sk-estimator-doc-link.fitted,\na:visited.sk-estimator-doc-link.fitted {\n  /* fitted */\n  border: var(--sklearn-color-fitted-level-1) 1pt solid;\n  color: var(--sklearn-color-fitted-level-1);\n}\n\n/* On hover */\ndiv.sk-estimator:hover .sk-estimator-doc-link:hover,\n.sk-estimator-doc-link:hover,\ndiv.sk-label-container:hover .sk-estimator-doc-link:hover,\n.sk-estimator-doc-link:hover {\n  /* unfitted */\n  background-color: var(--sklearn-color-unfitted-level-3);\n  color: var(--sklearn-color-background);\n  text-decoration: none;\n}\n\ndiv.sk-estimator.fitted:hover .sk-estimator-doc-link.fitted:hover,\n.sk-estimator-doc-link.fitted:hover,\ndiv.sk-label-container:hover .sk-estimator-doc-link.fitted:hover,\n.sk-estimator-doc-link.fitted:hover {\n  /* fitted */\n  background-color: var(--sklearn-color-fitted-level-3);\n  color: var(--sklearn-color-background);\n  text-decoration: none;\n}\n\n/* Span, style for the box shown on hovering the info icon */\n.sk-estimator-doc-link span {\n  display: none;\n  z-index: 9999;\n  position: relative;\n  font-weight: normal;\n  right: .2ex;\n  padding: .5ex;\n  margin: .5ex;\n  width: min-content;\n  min-width: 20ex;\n  max-width: 50ex;\n  color: var(--sklearn-color-text);\n  box-shadow: 2pt 2pt 4pt #999;\n  /* unfitted */\n  background: var(--sklearn-color-unfitted-level-0);\n  border: .5pt solid var(--sklearn-color-unfitted-level-3);\n}\n\n.sk-estimator-doc-link.fitted span {\n  /* fitted */\n  background: var(--sklearn-color-fitted-level-0);\n  border: var(--sklearn-color-fitted-level-3);\n}\n\n.sk-estimator-doc-link:hover span {\n  display: block;\n}\n\n/* \"?\"-specific style due to the `<a>` HTML tag */\n\n#sk-container-id-3 a.estimator_doc_link {\n  float: right;\n  font-size: 1rem;\n  line-height: 1em;\n  font-family: monospace;\n  background-color: var(--sklearn-color-background);\n  border-radius: 1rem;\n  height: 1rem;\n  width: 1rem;\n  text-decoration: none;\n  /* unfitted */\n  color: var(--sklearn-color-unfitted-level-1);\n  border: var(--sklearn-color-unfitted-level-1) 1pt solid;\n}\n\n#sk-container-id-3 a.estimator_doc_link.fitted {\n  /* fitted */\n  border: var(--sklearn-color-fitted-level-1) 1pt solid;\n  color: var(--sklearn-color-fitted-level-1);\n}\n\n/* On hover */\n#sk-container-id-3 a.estimator_doc_link:hover {\n  /* unfitted */\n  background-color: var(--sklearn-color-unfitted-level-3);\n  color: var(--sklearn-color-background);\n  text-decoration: none;\n}\n\n#sk-container-id-3 a.estimator_doc_link.fitted:hover {\n  /* fitted */\n  background-color: var(--sklearn-color-fitted-level-3);\n}\n</style><div id=\"sk-container-id-3\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>KNeighborsClassifier()</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item\"><div class=\"sk-estimator fitted sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-3\" type=\"checkbox\" checked><label for=\"sk-estimator-id-3\" class=\"sk-toggleable__label fitted sk-toggleable__label-arrow fitted\">&nbsp;&nbsp;KNeighborsClassifier<a class=\"sk-estimator-doc-link fitted\" rel=\"noreferrer\" target=\"_blank\" href=\"https://scikit-learn.org/1.4/modules/generated/sklearn.neighbors.KNeighborsClassifier.html\">?<span>Documentation for KNeighborsClassifier</span></a><span class=\"sk-estimator-doc-link fitted\">i<span>Fitted</span></span></label><div class=\"sk-toggleable__content fitted\"><pre>KNeighborsClassifier()</pre></div> </div></div></div></div>"
+     },
+     "execution_count": 39,
+     "metadata": {},
+     "output_type": "execute_result"
+    }
+   ],
+   "source": [
+    "clf.fit(iris_x_train,iris_y_train)"
+   ],
+   "metadata": {
+    "collapsed": false,
+    "ExecuteTime": {
+     "end_time": "2024-07-14T12:09:20.944733600Z",
+     "start_time": "2024-07-14T12:09:20.928724500Z"
+    }
+   },
+   "id": "c51ed2a71aaa7a9a",
+   "execution_count": 39
+  },
+  {
+   "cell_type": "markdown",
+   "source": [
+    "* 预测"
+   ],
+   "metadata": {
+    "collapsed": false
+   },
+   "id": "b1288eb0507318ad"
+  },
+  {
+   "cell_type": "code",
+   "outputs": [
+    {
+     "name": "stdout",
+     "output_type": "stream",
+     "text": [
+      "[2 1 0 0 0 2 2 2 0 1 0 2 1 2 1 1 1 2 0 2 1 2 0 0 2 0 1 0 2 0]\n",
+      "[2 1 0 0 0 1 2 2 0 2 0 2 1 2 1 1 2 2 0 2 1 2 0 0 2 0 1 0 2 0]\n"
+     ]
+    }
+   ],
+   "source": [
+    "res=clf.predict(iris_x_test)\n",
+    "print(res)\n",
+    "print(iris_y_test.values)"
+   ],
+   "metadata": {
+    "collapsed": false,
+    "ExecuteTime": {
+     "end_time": "2024-07-14T12:10:12.265673100Z",
+     "start_time": "2024-07-14T12:10:12.250214500Z"
+    }
+   },
+   "id": "47576e8e6d2fb335",
+   "execution_count": 41
+  },
+  {
+   "cell_type": "markdown",
+   "source": [
+    "* 翻转"
+   ],
+   "metadata": {
+    "collapsed": false
+   },
+   "id": "7310f6d6d7662a96"
+  },
+  {
+   "cell_type": "code",
+   "outputs": [
+    {
+     "data": {
+      "text/plain": "array(['virginica', 'versicolor', 'setosa', 'setosa', 'setosa',\n       'virginica', 'virginica', 'virginica', 'setosa', 'versicolor',\n       'setosa', 'virginica', 'versicolor', 'virginica', 'versicolor',\n       'versicolor', 'versicolor', 'virginica', 'setosa', 'virginica',\n       'versicolor', 'virginica', 'setosa', 'setosa', 'virginica',\n       'setosa', 'versicolor', 'setosa', 'virginica', 'setosa'],\n      dtype=object)"
+     },
+     "execution_count": 42,
+     "metadata": {},
+     "output_type": "execute_result"
+    }
+   ],
+   "source": [
+    "encoder.inverse_transform(res)"
+   ],
+   "metadata": {
+    "collapsed": false,
+    "ExecuteTime": {
+     "end_time": "2024-07-14T12:10:54.332856500Z",
+     "start_time": "2024-07-14T12:10:54.317852600Z"
+    }
+   },
+   "id": "6d5d87c4affe84e4",
+   "execution_count": 42
+  },
+  {
+   "cell_type": "markdown",
+   "source": [
+    "* 评估"
+   ],
+   "metadata": {
+    "collapsed": false
+   },
+   "id": "164f6815f69a6081"
+  },
+  {
+   "cell_type": "code",
+   "outputs": [
+    {
+     "name": "stdout",
+     "output_type": "stream",
+     "text": [
+      "预测正确率：90%\n"
+     ]
+    }
+   ],
+   "source": [
+    "accuracy=clf.score(iris_x_test,iris_y_test)\n",
+    "print(f\"预测正确率：{accuracy:.0%}\")"
+   ],
+   "metadata": {
+    "collapsed": false,
+    "ExecuteTime": {
+     "end_time": "2024-07-14T12:12:07.089208400Z",
+     "start_time": "2024-07-14T12:12:07.031489800Z"
+    }
+   },
+   "id": "a50e570d3065de1a",
+   "execution_count": 43
+  },
+  {
+   "cell_type": "markdown",
+   "source": [
+    "* 存储数据"
+   ],
+   "metadata": {
+    "collapsed": false
+   },
+   "id": "f15c6c61742e920b"
+  },
+  {
+   "cell_type": "code",
+   "outputs": [
+    {
+     "data": {
+      "text/plain": "     petal_length  petal_width  y  pre\n134           5.6          1.4  2    2\n86            4.7          1.5  1    1\n44            1.9          0.4  0    0\n21            1.5          0.4  0    0\n34            1.5          0.2  0    0\n70            4.8          1.8  1    2\n142           5.1          1.9  2    2\n145           5.2          2.3  2    2\n32            1.5          0.1  0    0\n133           5.1          1.5  2    1\n10            1.5          0.2  0    0\n149           5.1          1.8  2    2\n58            4.6          1.3  1    1\n109           6.1          2.5  2    2\n68            4.5          1.5  1    1\n88            4.1          1.3  1    1\n106           4.5          1.7  2    1\n112           5.5          2.1  2    2\n29            1.6          0.2  0    0\n107           6.3          1.8  2    2\n82            3.9          1.2  1    1\n111           5.3          1.9  2    2\n12            1.4          0.1  0    0\n40            1.3          0.3  0    0\n103           5.6          1.8  2    2\n9             1.5          0.1  0    0\n98            3.0          1.1  1    1\n4             1.4          0.2  0    0\n121           4.9          2.0  2    2\n33            1.4          0.2  0    0",
+      "text/html": "<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>petal_length</th>\n      <th>petal_width</th>\n      <th>y</th>\n      <th>pre</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>134</th>\n      <td>5.6</td>\n      <td>1.4</td>\n      <td>2</td>\n      <td>2</td>\n    </tr>\n    <tr>\n      <th>86</th>\n      <td>4.7</td>\n      <td>1.5</td>\n      <td>1</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>44</th>\n      <td>1.9</td>\n      <td>0.4</td>\n      <td>0</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>21</th>\n      <td>1.5</td>\n      <td>0.4</td>\n      <td>0</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>34</th>\n      <td>1.5</td>\n      <td>0.2</td>\n      <td>0</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>70</th>\n      <td>4.8</td>\n      <td>1.8</td>\n      <td>1</td>\n      <td>2</td>\n    </tr>\n    <tr>\n      <th>142</th>\n      <td>5.1</td>\n      <td>1.9</td>\n      <td>2</td>\n      <td>2</td>\n    </tr>\n    <tr>\n      <th>145</th>\n      <td>5.2</td>\n      <td>2.3</td>\n      <td>2</td>\n      <td>2</td>\n    </tr>\n    <tr>\n      <th>32</th>\n      <td>1.5</td>\n      <td>0.1</td>\n      <td>0</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>133</th>\n      <td>5.1</td>\n      <td>1.5</td>\n      <td>2</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>10</th>\n      <td>1.5</td>\n      <td>0.2</td>\n      <td>0</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>149</th>\n      <td>5.1</td>\n      <td>1.8</td>\n      <td>2</td>\n      <td>2</td>\n    </tr>\n    <tr>\n      <th>58</th>\n      <td>4.6</td>\n      <td>1.3</td>\n      <td>1</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>109</th>\n      <td>6.1</td>\n      <td>2.5</td>\n      <td>2</td>\n      <td>2</td>\n    </tr>\n    <tr>\n      <th>68</th>\n      <td>4.5</td>\n      <td>1.5</td>\n      <td>1</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>88</th>\n      <td>4.1</td>\n      <td>1.3</td>\n      <td>1</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>106</th>\n      <td>4.5</td>\n      <td>1.7</td>\n      <td>2</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>112</th>\n      <td>5.5</td>\n      <td>2.1</td>\n      <td>2</td>\n      <td>2</td>\n    </tr>\n    <tr>\n      <th>29</th>\n      <td>1.6</td>\n      <td>0.2</td>\n      <td>0</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>107</th>\n      <td>6.3</td>\n      <td>1.8</td>\n      <td>2</td>\n      <td>2</td>\n    </tr>\n    <tr>\n      <th>82</th>\n      <td>3.9</td>\n      <td>1.2</td>\n      <td>1</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>111</th>\n      <td>5.3</td>\n      <td>1.9</td>\n      <td>2</td>\n      <td>2</td>\n    </tr>\n    <tr>\n      <th>12</th>\n      <td>1.4</td>\n      <td>0.1</td>\n      <td>0</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>40</th>\n      <td>1.3</td>\n      <td>0.3</td>\n      <td>0</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>103</th>\n      <td>5.6</td>\n      <td>1.8</td>\n      <td>2</td>\n      <td>2</td>\n    </tr>\n    <tr>\n      <th>9</th>\n      <td>1.5</td>\n      <td>0.1</td>\n      <td>0</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>98</th>\n      <td>3.0</td>\n      <td>1.1</td>\n      <td>1</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>1.4</td>\n      <td>0.2</td>\n      <td>0</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>121</th>\n      <td>4.9</td>\n      <td>2.0</td>\n      <td>2</td>\n      <td>2</td>\n    </tr>\n    <tr>\n      <th>33</th>\n      <td>1.4</td>\n      <td>0.2</td>\n      <td>0</td>\n      <td>0</td>\n    </tr>\n  </tbody>\n</table>\n</div>"
+     },
+     "execution_count": 44,
+     "metadata": {},
+     "output_type": "execute_result"
+    }
+   ],
+   "source": [
+    "out=iris_x_test.copy()\n",
+    "out['y']=iris_y_test\n",
+    "out['pre']=res\n",
+    "out"
+   ],
+   "metadata": {
+    "collapsed": false,
+    "ExecuteTime": {
+     "end_time": "2024-07-14T12:13:11.579568900Z",
+     "start_time": "2024-07-14T12:13:11.546569200Z"
+    }
+   },
+   "id": "3dfc78bbcf5dd269",
+   "execution_count": 44
+  },
+  {
+   "cell_type": "code",
+   "outputs": [],
+   "source": [
+    "out.to_csv('iris_predict.csv')"
+   ],
+   "metadata": {
+    "collapsed": false
+   },
+   "id": "4a04ccd29add969e"
+  },
+  {
+   "cell_type": "markdown",
+   "source": [
+    "### 2.3可视化"
+   ],
+   "metadata": {
+    "collapsed": false
+   },
+   "id": "918a169718826404"
+  },
+  {
+   "cell_type": "code",
+   "outputs": [],
+   "source": [
+    "import numpy as np\n",
+    "import matplotlib as mpl\n",
+    "import matplotlib.pyplot as plt\n",
+    "\n",
+    "def draw(clf):\n",
+    "    # 网格化\n",
+    "    M,N=500,500\n",
+    "    x1_min,x2_min=iris_simple[['petal_length','petal_width']].min(axis=0)\n",
+    "    x1_max,x2_max=iris_simple[['petal_length','petal_width']].max(axis=0)\n",
+    "    t1=np.linspace(x1_min,x1_max,M)\n",
+    "    t2=np.linspace(x2_min,x2_max,N)\n",
+    "    x1,x2=np.meshgrid(t1,t2)\n",
+    "    \n",
+    "    # 预测\n",
+    "    x_show=np.stack((x1.flat,x2.flat),axis=1)\n",
+    "    y_predict=clf.predict(x_show)\n",
+    "    \n",
+    "    #配色\n",
+    "    cm_light=mpl.colors.ListedColormap(['#A0FFA0',\"#FFA0A0\",\"#A0A0FF\"])\n",
+    "    cm_dark=mpl.colors.ListedColormap(['g','r','b'])\n",
+    "    \n",
+    "    # 绘制预测区域图\n",
+    "    plt.figure(figsize=(10,6))\n",
+    "    plt.pcolormesh(t1,t2,y_predict.reshape(x1.shape),cmap=cm_light)\n",
+    "    \n",
+    "    # 绘制原始数据点\n",
+    "    plt.scatter(iris_simple['petal_length'],iris_simple['petal_width'],label=None,\n",
+    "                c=iris_simple['species'],cmap=cm_dark,marker='o',edgecolors='k')\n",
+    "    plt.xlabel('petal_length')\n",
+    "    plt.ylabel('petal_width')\n",
+    "    \n",
+    "    # 绘制图例\n",
+    "    color=['g','r','b']\n",
+    "    species=['setosa','virginica','versicolor']\n",
+    "    for i in range(3):\n",
+    "        plt.scatter([],[],c=color[i],s=40,label=species[i])   # 利用空点绘制图例\n",
+    "    plt.legend(loc='best')\n",
+    "    plt.title(\"iris_classfier\")"
+   ],
+   "metadata": {
+    "collapsed": false,
+    "ExecuteTime": {
+     "end_time": "2024-07-14T12:24:50.903355500Z",
+     "start_time": "2024-07-14T12:24:50.893798800Z"
+    }
+   },
+   "id": "d112cadcccae60a2",
+   "execution_count": 45
+  },
+  {
+   "cell_type": "code",
+   "outputs": [
+    {
+     "name": "stderr",
+     "output_type": "stream",
+     "text": [
+      "D:\\app\\anaconda3\\envs\\ai\\lib\\site-packages\\sklearn\\base.py:493: UserWarning: X does not have valid feature names, but KNeighborsClassifier was fitted with feature names\n",
+      "  warnings.warn(\n",
+      "C:\\Users\\Lenovo\\AppData\\Local\\Temp\\ipykernel_1968\\2867276073.py:24: MatplotlibDeprecationWarning: shading='flat' when X and Y have the same dimensions as C is deprecated since 3.3.  Either specify the corners of the quadrilaterals with X and Y, or pass shading='auto', 'nearest' or 'gouraud', or set rcParams['pcolor.shading'].  This will become an error two minor releases later.\n",
+      "  plt.pcolormesh(t1,t2,y_predict.reshape(x1.shape),cmap=cm_light)\n"
+     ]
+    },
+    {
+     "data": {
+      "text/plain": "<Figure size 1000x600 with 1 Axes>",
+      "image/png": ""
+     },
+     "metadata": {},
+     "output_type": "display_data"
+    }
+   ],
+   "source": [
+    "draw(clf)"
+   ],
+   "metadata": {
+    "collapsed": false,
+    "ExecuteTime": {
+     "end_time": "2024-07-14T12:25:23.665631900Z",
+     "start_time": "2024-07-14T12:25:20.631186600Z"
+    }
+   },
+   "id": "cec1f3f9953ab952",
+   "execution_count": 46
+  },
+  {
+   "cell_type": "markdown",
+   "source": [
+    "## 3.朴素贝叶斯算法\n",
+    "### 3.1基本思想\n",
+    "**当X=(x1,x2)发生的时候，哪一个yk发生的概率最大**\n",
+    "### 3.2sklearn实现\n"
+   ],
+   "metadata": {
+    "collapsed": false
+   },
+   "id": "4a40c5d0f050d935"
+  },
+  {
+   "cell_type": "code",
+   "outputs": [],
+   "source": [
+    "from sklearn.naive_bayes import GaussianNB"
+   ],
+   "metadata": {
+    "collapsed": false,
+    "ExecuteTime": {
+     "end_time": "2024-07-14T12:29:27.619763700Z",
+     "start_time": "2024-07-14T12:29:27.602257600Z"
+    }
+   },
+   "id": "f6f5e9463f6f5646",
+   "execution_count": 47
+  },
+  {
+   "cell_type": "markdown",
+   "source": [
+    "* 构建分类对象"
+   ],
+   "metadata": {
+    "collapsed": false
+   },
+   "id": "bd04738320afce3a"
+  },
+  {
+   "cell_type": "code",
+   "outputs": [
+    {
+     "data": {
+      "text/plain": "GaussianNB()",
+      "text/html": "<style>#sk-container-id-4 {\n  /* Definition of color scheme common for light and dark mode */\n  --sklearn-color-text: black;\n  --sklearn-color-line: gray;\n  /* Definition of color scheme for unfitted estimators */\n  --sklearn-color-unfitted-level-0: #fff5e6;\n  --sklearn-color-unfitted-level-1: #f6e4d2;\n  --sklearn-color-unfitted-level-2: #ffe0b3;\n  --sklearn-color-unfitted-level-3: chocolate;\n  /* Definition of color scheme for fitted estimators */\n  --sklearn-color-fitted-level-0: #f0f8ff;\n  --sklearn-color-fitted-level-1: #d4ebff;\n  --sklearn-color-fitted-level-2: #b3dbfd;\n  --sklearn-color-fitted-level-3: cornflowerblue;\n\n  /* Specific color for light theme */\n  --sklearn-color-text-on-default-background: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, black)));\n  --sklearn-color-background: var(--sg-background-color, var(--theme-background, var(--jp-layout-color0, white)));\n  --sklearn-color-border-box: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, black)));\n  --sklearn-color-icon: #696969;\n\n  @media (prefers-color-scheme: dark) {\n    /* Redefinition of color scheme for dark theme */\n    --sklearn-color-text-on-default-background: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, white)));\n    --sklearn-color-background: var(--sg-background-color, var(--theme-background, var(--jp-layout-color0, #111)));\n    --sklearn-color-border-box: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, white)));\n    --sklearn-color-icon: #878787;\n  }\n}\n\n#sk-container-id-4 {\n  color: var(--sklearn-color-text);\n}\n\n#sk-container-id-4 pre {\n  padding: 0;\n}\n\n#sk-container-id-4 input.sk-hidden--visually {\n  border: 0;\n  clip: rect(1px 1px 1px 1px);\n  clip: rect(1px, 1px, 1px, 1px);\n  height: 1px;\n  margin: -1px;\n  overflow: hidden;\n  padding: 0;\n  position: absolute;\n  width: 1px;\n}\n\n#sk-container-id-4 div.sk-dashed-wrapped {\n  border: 1px dashed var(--sklearn-color-line);\n  margin: 0 0.4em 0.5em 0.4em;\n  box-sizing: border-box;\n  padding-bottom: 0.4em;\n  background-color: var(--sklearn-color-background);\n}\n\n#sk-container-id-4 div.sk-container {\n  /* jupyter's `normalize.less` sets `[hidden] { display: none; }`\n     but bootstrap.min.css set `[hidden] { display: none !important; }`\n     so we also need the `!important` here to be able to override the\n     default hidden behavior on the sphinx rendered scikit-learn.org.\n     See: https://github.com/scikit-learn/scikit-learn/issues/21755 */\n  display: inline-block !important;\n  position: relative;\n}\n\n#sk-container-id-4 div.sk-text-repr-fallback {\n  display: none;\n}\n\ndiv.sk-parallel-item,\ndiv.sk-serial,\ndiv.sk-item {\n  /* draw centered vertical line to link estimators */\n  background-image: linear-gradient(var(--sklearn-color-text-on-default-background), var(--sklearn-color-text-on-default-background));\n  background-size: 2px 100%;\n  background-repeat: no-repeat;\n  background-position: center center;\n}\n\n/* Parallel-specific style estimator block */\n\n#sk-container-id-4 div.sk-parallel-item::after {\n  content: \"\";\n  width: 100%;\n  border-bottom: 2px solid var(--sklearn-color-text-on-default-background);\n  flex-grow: 1;\n}\n\n#sk-container-id-4 div.sk-parallel {\n  display: flex;\n  align-items: stretch;\n  justify-content: center;\n  background-color: var(--sklearn-color-background);\n  position: relative;\n}\n\n#sk-container-id-4 div.sk-parallel-item {\n  display: flex;\n  flex-direction: column;\n}\n\n#sk-container-id-4 div.sk-parallel-item:first-child::after {\n  align-self: flex-end;\n  width: 50%;\n}\n\n#sk-container-id-4 div.sk-parallel-item:last-child::after {\n  align-self: flex-start;\n  width: 50%;\n}\n\n#sk-container-id-4 div.sk-parallel-item:only-child::after {\n  width: 0;\n}\n\n/* Serial-specific style estimator block */\n\n#sk-container-id-4 div.sk-serial {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  background-color: var(--sklearn-color-background);\n  padding-right: 1em;\n  padding-left: 1em;\n}\n\n\n/* Toggleable style: style used for estimator/Pipeline/ColumnTransformer box that is\nclickable and can be expanded/collapsed.\n- Pipeline and ColumnTransformer use this feature and define the default style\n- Estimators will overwrite some part of the style using the `sk-estimator` class\n*/\n\n/* Pipeline and ColumnTransformer style (default) */\n\n#sk-container-id-4 div.sk-toggleable {\n  /* Default theme specific background. It is overwritten whether we have a\n  specific estimator or a Pipeline/ColumnTransformer */\n  background-color: var(--sklearn-color-background);\n}\n\n/* Toggleable label */\n#sk-container-id-4 label.sk-toggleable__label {\n  cursor: pointer;\n  display: block;\n  width: 100%;\n  margin-bottom: 0;\n  padding: 0.5em;\n  box-sizing: border-box;\n  text-align: center;\n}\n\n#sk-container-id-4 label.sk-toggleable__label-arrow:before {\n  /* Arrow on the left of the label */\n  content: \"▸\";\n  float: left;\n  margin-right: 0.25em;\n  color: var(--sklearn-color-icon);\n}\n\n#sk-container-id-4 label.sk-toggleable__label-arrow:hover:before {\n  color: var(--sklearn-color-text);\n}\n\n/* Toggleable content - dropdown */\n\n#sk-container-id-4 div.sk-toggleable__content {\n  max-height: 0;\n  max-width: 0;\n  overflow: hidden;\n  text-align: left;\n  /* unfitted */\n  background-color: var(--sklearn-color-unfitted-level-0);\n}\n\n#sk-container-id-4 div.sk-toggleable__content.fitted {\n  /* fitted */\n  background-color: var(--sklearn-color-fitted-level-0);\n}\n\n#sk-container-id-4 div.sk-toggleable__content pre {\n  margin: 0.2em;\n  border-radius: 0.25em;\n  color: var(--sklearn-color-text);\n  /* unfitted */\n  background-color: var(--sklearn-color-unfitted-level-0);\n}\n\n#sk-container-id-4 div.sk-toggleable__content.fitted pre {\n  /* unfitted */\n  background-color: var(--sklearn-color-fitted-level-0);\n}\n\n#sk-container-id-4 input.sk-toggleable__control:checked~div.sk-toggleable__content {\n  /* Expand drop-down */\n  max-height: 200px;\n  max-width: 100%;\n  overflow: auto;\n}\n\n#sk-container-id-4 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {\n  content: \"▾\";\n}\n\n/* Pipeline/ColumnTransformer-specific style */\n\n#sk-container-id-4 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {\n  color: var(--sklearn-color-text);\n  background-color: var(--sklearn-color-unfitted-level-2);\n}\n\n#sk-container-id-4 div.sk-label.fitted input.sk-toggleable__control:checked~label.sk-toggleable__label {\n  background-color: var(--sklearn-color-fitted-level-2);\n}\n\n/* Estimator-specific style */\n\n/* Colorize estimator box */\n#sk-container-id-4 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {\n  /* unfitted */\n  background-color: var(--sklearn-color-unfitted-level-2);\n}\n\n#sk-container-id-4 div.sk-estimator.fitted input.sk-toggleable__control:checked~label.sk-toggleable__label {\n  /* fitted */\n  background-color: var(--sklearn-color-fitted-level-2);\n}\n\n#sk-container-id-4 div.sk-label label.sk-toggleable__label,\n#sk-container-id-4 div.sk-label label {\n  /* The background is the default theme color */\n  color: var(--sklearn-color-text-on-default-background);\n}\n\n/* On hover, darken the color of the background */\n#sk-container-id-4 div.sk-label:hover label.sk-toggleable__label {\n  color: var(--sklearn-color-text);\n  background-color: var(--sklearn-color-unfitted-level-2);\n}\n\n/* Label box, darken color on hover, fitted */\n#sk-container-id-4 div.sk-label.fitted:hover label.sk-toggleable__label.fitted {\n  color: var(--sklearn-color-text);\n  background-color: var(--sklearn-color-fitted-level-2);\n}\n\n/* Estimator label */\n\n#sk-container-id-4 div.sk-label label {\n  font-family: monospace;\n  font-weight: bold;\n  display: inline-block;\n  line-height: 1.2em;\n}\n\n#sk-container-id-4 div.sk-label-container {\n  text-align: center;\n}\n\n/* Estimator-specific */\n#sk-container-id-4 div.sk-estimator {\n  font-family: monospace;\n  border: 1px dotted var(--sklearn-color-border-box);\n  border-radius: 0.25em;\n  box-sizing: border-box;\n  margin-bottom: 0.5em;\n  /* unfitted */\n  background-color: var(--sklearn-color-unfitted-level-0);\n}\n\n#sk-container-id-4 div.sk-estimator.fitted {\n  /* fitted */\n  background-color: var(--sklearn-color-fitted-level-0);\n}\n\n/* on hover */\n#sk-container-id-4 div.sk-estimator:hover {\n  /* unfitted */\n  background-color: var(--sklearn-color-unfitted-level-2);\n}\n\n#sk-container-id-4 div.sk-estimator.fitted:hover {\n  /* fitted */\n  background-color: var(--sklearn-color-fitted-level-2);\n}\n\n/* Specification for estimator info (e.g. \"i\" and \"?\") */\n\n/* Common style for \"i\" and \"?\" */\n\n.sk-estimator-doc-link,\na:link.sk-estimator-doc-link,\na:visited.sk-estimator-doc-link {\n  float: right;\n  font-size: smaller;\n  line-height: 1em;\n  font-family: monospace;\n  background-color: var(--sklearn-color-background);\n  border-radius: 1em;\n  height: 1em;\n  width: 1em;\n  text-decoration: none !important;\n  margin-left: 1ex;\n  /* unfitted */\n  border: var(--sklearn-color-unfitted-level-1) 1pt solid;\n  color: var(--sklearn-color-unfitted-level-1);\n}\n\n.sk-estimator-doc-link.fitted,\na:link.sk-estimator-doc-link.fitted,\na:visited.sk-estimator-doc-link.fitted {\n  /* fitted */\n  border: var(--sklearn-color-fitted-level-1) 1pt solid;\n  color: var(--sklearn-color-fitted-level-1);\n}\n\n/* On hover */\ndiv.sk-estimator:hover .sk-estimator-doc-link:hover,\n.sk-estimator-doc-link:hover,\ndiv.sk-label-container:hover .sk-estimator-doc-link:hover,\n.sk-estimator-doc-link:hover {\n  /* unfitted */\n  background-color: var(--sklearn-color-unfitted-level-3);\n  color: var(--sklearn-color-background);\n  text-decoration: none;\n}\n\ndiv.sk-estimator.fitted:hover .sk-estimator-doc-link.fitted:hover,\n.sk-estimator-doc-link.fitted:hover,\ndiv.sk-label-container:hover .sk-estimator-doc-link.fitted:hover,\n.sk-estimator-doc-link.fitted:hover {\n  /* fitted */\n  background-color: var(--sklearn-color-fitted-level-3);\n  color: var(--sklearn-color-background);\n  text-decoration: none;\n}\n\n/* Span, style for the box shown on hovering the info icon */\n.sk-estimator-doc-link span {\n  display: none;\n  z-index: 9999;\n  position: relative;\n  font-weight: normal;\n  right: .2ex;\n  padding: .5ex;\n  margin: .5ex;\n  width: min-content;\n  min-width: 20ex;\n  max-width: 50ex;\n  color: var(--sklearn-color-text);\n  box-shadow: 2pt 2pt 4pt #999;\n  /* unfitted */\n  background: var(--sklearn-color-unfitted-level-0);\n  border: .5pt solid var(--sklearn-color-unfitted-level-3);\n}\n\n.sk-estimator-doc-link.fitted span {\n  /* fitted */\n  background: var(--sklearn-color-fitted-level-0);\n  border: var(--sklearn-color-fitted-level-3);\n}\n\n.sk-estimator-doc-link:hover span {\n  display: block;\n}\n\n/* \"?\"-specific style due to the `<a>` HTML tag */\n\n#sk-container-id-4 a.estimator_doc_link {\n  float: right;\n  font-size: 1rem;\n  line-height: 1em;\n  font-family: monospace;\n  background-color: var(--sklearn-color-background);\n  border-radius: 1rem;\n  height: 1rem;\n  width: 1rem;\n  text-decoration: none;\n  /* unfitted */\n  color: var(--sklearn-color-unfitted-level-1);\n  border: var(--sklearn-color-unfitted-level-1) 1pt solid;\n}\n\n#sk-container-id-4 a.estimator_doc_link.fitted {\n  /* fitted */\n  border: var(--sklearn-color-fitted-level-1) 1pt solid;\n  color: var(--sklearn-color-fitted-level-1);\n}\n\n/* On hover */\n#sk-container-id-4 a.estimator_doc_link:hover {\n  /* unfitted */\n  background-color: var(--sklearn-color-unfitted-level-3);\n  color: var(--sklearn-color-background);\n  text-decoration: none;\n}\n\n#sk-container-id-4 a.estimator_doc_link.fitted:hover {\n  /* fitted */\n  background-color: var(--sklearn-color-fitted-level-3);\n}\n</style><div id=\"sk-container-id-4\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>GaussianNB()</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item\"><div class=\"sk-estimator  sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-4\" type=\"checkbox\" checked><label for=\"sk-estimator-id-4\" class=\"sk-toggleable__label  sk-toggleable__label-arrow \">&nbsp;&nbsp;GaussianNB<a class=\"sk-estimator-doc-link \" rel=\"noreferrer\" target=\"_blank\" href=\"https://scikit-learn.org/1.4/modules/generated/sklearn.naive_bayes.GaussianNB.html\">?<span>Documentation for GaussianNB</span></a><span class=\"sk-estimator-doc-link \">i<span>Not fitted</span></span></label><div class=\"sk-toggleable__content \"><pre>GaussianNB()</pre></div> </div></div></div></div>"
+     },
+     "execution_count": 48,
+     "metadata": {},
+     "output_type": "execute_result"
+    }
+   ],
+   "source": [
+    "clf=GaussianNB()\n",
+    "clf"
+   ],
+   "metadata": {
+    "collapsed": false,
+    "ExecuteTime": {
+     "end_time": "2024-07-14T12:29:57.358798200Z",
+     "start_time": "2024-07-14T12:29:57.340758500Z"
+    }
+   },
+   "id": "b25a9e3974f04550",
+   "execution_count": 48
+  },
+  {
+   "cell_type": "markdown",
+   "source": [
+    "* 训练"
+   ],
+   "metadata": {
+    "collapsed": false
+   },
+   "id": "245b97cd4ac31716"
+  },
+  {
+   "cell_type": "code",
+   "outputs": [
+    {
+     "data": {
+      "text/plain": "GaussianNB()",
+      "text/html": "<style>#sk-container-id-5 {\n  /* Definition of color scheme common for light and dark mode */\n  --sklearn-color-text: black;\n  --sklearn-color-line: gray;\n  /* Definition of color scheme for unfitted estimators */\n  --sklearn-color-unfitted-level-0: #fff5e6;\n  --sklearn-color-unfitted-level-1: #f6e4d2;\n  --sklearn-color-unfitted-level-2: #ffe0b3;\n  --sklearn-color-unfitted-level-3: chocolate;\n  /* Definition of color scheme for fitted estimators */\n  --sklearn-color-fitted-level-0: #f0f8ff;\n  --sklearn-color-fitted-level-1: #d4ebff;\n  --sklearn-color-fitted-level-2: #b3dbfd;\n  --sklearn-color-fitted-level-3: cornflowerblue;\n\n  /* Specific color for light theme */\n  --sklearn-color-text-on-default-background: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, black)));\n  --sklearn-color-background: var(--sg-background-color, var(--theme-background, var(--jp-layout-color0, white)));\n  --sklearn-color-border-box: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, black)));\n  --sklearn-color-icon: #696969;\n\n  @media (prefers-color-scheme: dark) {\n    /* Redefinition of color scheme for dark theme */\n    --sklearn-color-text-on-default-background: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, white)));\n    --sklearn-color-background: var(--sg-background-color, var(--theme-background, var(--jp-layout-color0, #111)));\n    --sklearn-color-border-box: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, white)));\n    --sklearn-color-icon: #878787;\n  }\n}\n\n#sk-container-id-5 {\n  color: var(--sklearn-color-text);\n}\n\n#sk-container-id-5 pre {\n  padding: 0;\n}\n\n#sk-container-id-5 input.sk-hidden--visually {\n  border: 0;\n  clip: rect(1px 1px 1px 1px);\n  clip: rect(1px, 1px, 1px, 1px);\n  height: 1px;\n  margin: -1px;\n  overflow: hidden;\n  padding: 0;\n  position: absolute;\n  width: 1px;\n}\n\n#sk-container-id-5 div.sk-dashed-wrapped {\n  border: 1px dashed var(--sklearn-color-line);\n  margin: 0 0.4em 0.5em 0.4em;\n  box-sizing: border-box;\n  padding-bottom: 0.4em;\n  background-color: var(--sklearn-color-background);\n}\n\n#sk-container-id-5 div.sk-container {\n  /* jupyter's `normalize.less` sets `[hidden] { display: none; }`\n     but bootstrap.min.css set `[hidden] { display: none !important; }`\n     so we also need the `!important` here to be able to override the\n     default hidden behavior on the sphinx rendered scikit-learn.org.\n     See: https://github.com/scikit-learn/scikit-learn/issues/21755 */\n  display: inline-block !important;\n  position: relative;\n}\n\n#sk-container-id-5 div.sk-text-repr-fallback {\n  display: none;\n}\n\ndiv.sk-parallel-item,\ndiv.sk-serial,\ndiv.sk-item {\n  /* draw centered vertical line to link estimators */\n  background-image: linear-gradient(var(--sklearn-color-text-on-default-background), var(--sklearn-color-text-on-default-background));\n  background-size: 2px 100%;\n  background-repeat: no-repeat;\n  background-position: center center;\n}\n\n/* Parallel-specific style estimator block */\n\n#sk-container-id-5 div.sk-parallel-item::after {\n  content: \"\";\n  width: 100%;\n  border-bottom: 2px solid var(--sklearn-color-text-on-default-background);\n  flex-grow: 1;\n}\n\n#sk-container-id-5 div.sk-parallel {\n  display: flex;\n  align-items: stretch;\n  justify-content: center;\n  background-color: var(--sklearn-color-background);\n  position: relative;\n}\n\n#sk-container-id-5 div.sk-parallel-item {\n  display: flex;\n  flex-direction: column;\n}\n\n#sk-container-id-5 div.sk-parallel-item:first-child::after {\n  align-self: flex-end;\n  width: 50%;\n}\n\n#sk-container-id-5 div.sk-parallel-item:last-child::after {\n  align-self: flex-start;\n  width: 50%;\n}\n\n#sk-container-id-5 div.sk-parallel-item:only-child::after {\n  width: 0;\n}\n\n/* Serial-specific style estimator block */\n\n#sk-container-id-5 div.sk-serial {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  background-color: var(--sklearn-color-background);\n  padding-right: 1em;\n  padding-left: 1em;\n}\n\n\n/* Toggleable style: style used for estimator/Pipeline/ColumnTransformer box that is\nclickable and can be expanded/collapsed.\n- Pipeline and ColumnTransformer use this feature and define the default style\n- Estimators will overwrite some part of the style using the `sk-estimator` class\n*/\n\n/* Pipeline and ColumnTransformer style (default) */\n\n#sk-container-id-5 div.sk-toggleable {\n  /* Default theme specific background. It is overwritten whether we have a\n  specific estimator or a Pipeline/ColumnTransformer */\n  background-color: var(--sklearn-color-background);\n}\n\n/* Toggleable label */\n#sk-container-id-5 label.sk-toggleable__label {\n  cursor: pointer;\n  display: block;\n  width: 100%;\n  margin-bottom: 0;\n  padding: 0.5em;\n  box-sizing: border-box;\n  text-align: center;\n}\n\n#sk-container-id-5 label.sk-toggleable__label-arrow:before {\n  /* Arrow on the left of the label */\n  content: \"▸\";\n  float: left;\n  margin-right: 0.25em;\n  color: var(--sklearn-color-icon);\n}\n\n#sk-container-id-5 label.sk-toggleable__label-arrow:hover:before {\n  color: var(--sklearn-color-text);\n}\n\n/* Toggleable content - dropdown */\n\n#sk-container-id-5 div.sk-toggleable__content {\n  max-height: 0;\n  max-width: 0;\n  overflow: hidden;\n  text-align: left;\n  /* unfitted */\n  background-color: var(--sklearn-color-unfitted-level-0);\n}\n\n#sk-container-id-5 div.sk-toggleable__content.fitted {\n  /* fitted */\n  background-color: var(--sklearn-color-fitted-level-0);\n}\n\n#sk-container-id-5 div.sk-toggleable__content pre {\n  margin: 0.2em;\n  border-radius: 0.25em;\n  color: var(--sklearn-color-text);\n  /* unfitted */\n  background-color: var(--sklearn-color-unfitted-level-0);\n}\n\n#sk-container-id-5 div.sk-toggleable__content.fitted pre {\n  /* unfitted */\n  background-color: var(--sklearn-color-fitted-level-0);\n}\n\n#sk-container-id-5 input.sk-toggleable__control:checked~div.sk-toggleable__content {\n  /* Expand drop-down */\n  max-height: 200px;\n  max-width: 100%;\n  overflow: auto;\n}\n\n#sk-container-id-5 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {\n  content: \"▾\";\n}\n\n/* Pipeline/ColumnTransformer-specific style */\n\n#sk-container-id-5 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {\n  color: var(--sklearn-color-text);\n  background-color: var(--sklearn-color-unfitted-level-2);\n}\n\n#sk-container-id-5 div.sk-label.fitted input.sk-toggleable__control:checked~label.sk-toggleable__label {\n  background-color: var(--sklearn-color-fitted-level-2);\n}\n\n/* Estimator-specific style */\n\n/* Colorize estimator box */\n#sk-container-id-5 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {\n  /* unfitted */\n  background-color: var(--sklearn-color-unfitted-level-2);\n}\n\n#sk-container-id-5 div.sk-estimator.fitted input.sk-toggleable__control:checked~label.sk-toggleable__label {\n  /* fitted */\n  background-color: var(--sklearn-color-fitted-level-2);\n}\n\n#sk-container-id-5 div.sk-label label.sk-toggleable__label,\n#sk-container-id-5 div.sk-label label {\n  /* The background is the default theme color */\n  color: var(--sklearn-color-text-on-default-background);\n}\n\n/* On hover, darken the color of the background */\n#sk-container-id-5 div.sk-label:hover label.sk-toggleable__label {\n  color: var(--sklearn-color-text);\n  background-color: var(--sklearn-color-unfitted-level-2);\n}\n\n/* Label box, darken color on hover, fitted */\n#sk-container-id-5 div.sk-label.fitted:hover label.sk-toggleable__label.fitted {\n  color: var(--sklearn-color-text);\n  background-color: var(--sklearn-color-fitted-level-2);\n}\n\n/* Estimator label */\n\n#sk-container-id-5 div.sk-label label {\n  font-family: monospace;\n  font-weight: bold;\n  display: inline-block;\n  line-height: 1.2em;\n}\n\n#sk-container-id-5 div.sk-label-container {\n  text-align: center;\n}\n\n/* Estimator-specific */\n#sk-container-id-5 div.sk-estimator {\n  font-family: monospace;\n  border: 1px dotted var(--sklearn-color-border-box);\n  border-radius: 0.25em;\n  box-sizing: border-box;\n  margin-bottom: 0.5em;\n  /* unfitted */\n  background-color: var(--sklearn-color-unfitted-level-0);\n}\n\n#sk-container-id-5 div.sk-estimator.fitted {\n  /* fitted */\n  background-color: var(--sklearn-color-fitted-level-0);\n}\n\n/* on hover */\n#sk-container-id-5 div.sk-estimator:hover {\n  /* unfitted */\n  background-color: var(--sklearn-color-unfitted-level-2);\n}\n\n#sk-container-id-5 div.sk-estimator.fitted:hover {\n  /* fitted */\n  background-color: var(--sklearn-color-fitted-level-2);\n}\n\n/* Specification for estimator info (e.g. \"i\" and \"?\") */\n\n/* Common style for \"i\" and \"?\" */\n\n.sk-estimator-doc-link,\na:link.sk-estimator-doc-link,\na:visited.sk-estimator-doc-link {\n  float: right;\n  font-size: smaller;\n  line-height: 1em;\n  font-family: monospace;\n  background-color: var(--sklearn-color-background);\n  border-radius: 1em;\n  height: 1em;\n  width: 1em;\n  text-decoration: none !important;\n  margin-left: 1ex;\n  /* unfitted */\n  border: var(--sklearn-color-unfitted-level-1) 1pt solid;\n  color: var(--sklearn-color-unfitted-level-1);\n}\n\n.sk-estimator-doc-link.fitted,\na:link.sk-estimator-doc-link.fitted,\na:visited.sk-estimator-doc-link.fitted {\n  /* fitted */\n  border: var(--sklearn-color-fitted-level-1) 1pt solid;\n  color: var(--sklearn-color-fitted-level-1);\n}\n\n/* On hover */\ndiv.sk-estimator:hover .sk-estimator-doc-link:hover,\n.sk-estimator-doc-link:hover,\ndiv.sk-label-container:hover .sk-estimator-doc-link:hover,\n.sk-estimator-doc-link:hover {\n  /* unfitted */\n  background-color: var(--sklearn-color-unfitted-level-3);\n  color: var(--sklearn-color-background);\n  text-decoration: none;\n}\n\ndiv.sk-estimator.fitted:hover .sk-estimator-doc-link.fitted:hover,\n.sk-estimator-doc-link.fitted:hover,\ndiv.sk-label-container:hover .sk-estimator-doc-link.fitted:hover,\n.sk-estimator-doc-link.fitted:hover {\n  /* fitted */\n  background-color: var(--sklearn-color-fitted-level-3);\n  color: var(--sklearn-color-background);\n  text-decoration: none;\n}\n\n/* Span, style for the box shown on hovering the info icon */\n.sk-estimator-doc-link span {\n  display: none;\n  z-index: 9999;\n  position: relative;\n  font-weight: normal;\n  right: .2ex;\n  padding: .5ex;\n  margin: .5ex;\n  width: min-content;\n  min-width: 20ex;\n  max-width: 50ex;\n  color: var(--sklearn-color-text);\n  box-shadow: 2pt 2pt 4pt #999;\n  /* unfitted */\n  background: var(--sklearn-color-unfitted-level-0);\n  border: .5pt solid var(--sklearn-color-unfitted-level-3);\n}\n\n.sk-estimator-doc-link.fitted span {\n  /* fitted */\n  background: var(--sklearn-color-fitted-level-0);\n  border: var(--sklearn-color-fitted-level-3);\n}\n\n.sk-estimator-doc-link:hover span {\n  display: block;\n}\n\n/* \"?\"-specific style due to the `<a>` HTML tag */\n\n#sk-container-id-5 a.estimator_doc_link {\n  float: right;\n  font-size: 1rem;\n  line-height: 1em;\n  font-family: monospace;\n  background-color: var(--sklearn-color-background);\n  border-radius: 1rem;\n  height: 1rem;\n  width: 1rem;\n  text-decoration: none;\n  /* unfitted */\n  color: var(--sklearn-color-unfitted-level-1);\n  border: var(--sklearn-color-unfitted-level-1) 1pt solid;\n}\n\n#sk-container-id-5 a.estimator_doc_link.fitted {\n  /* fitted */\n  border: var(--sklearn-color-fitted-level-1) 1pt solid;\n  color: var(--sklearn-color-fitted-level-1);\n}\n\n/* On hover */\n#sk-container-id-5 a.estimator_doc_link:hover {\n  /* unfitted */\n  background-color: var(--sklearn-color-unfitted-level-3);\n  color: var(--sklearn-color-background);\n  text-decoration: none;\n}\n\n#sk-container-id-5 a.estimator_doc_link.fitted:hover {\n  /* fitted */\n  background-color: var(--sklearn-color-fitted-level-3);\n}\n</style><div id=\"sk-container-id-5\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>GaussianNB()</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item\"><div class=\"sk-estimator fitted sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-5\" type=\"checkbox\" checked><label for=\"sk-estimator-id-5\" class=\"sk-toggleable__label fitted sk-toggleable__label-arrow fitted\">&nbsp;&nbsp;GaussianNB<a class=\"sk-estimator-doc-link fitted\" rel=\"noreferrer\" target=\"_blank\" href=\"https://scikit-learn.org/1.4/modules/generated/sklearn.naive_bayes.GaussianNB.html\">?<span>Documentation for GaussianNB</span></a><span class=\"sk-estimator-doc-link fitted\">i<span>Fitted</span></span></label><div class=\"sk-toggleable__content fitted\"><pre>GaussianNB()</pre></div> </div></div></div></div>"
+     },
+     "execution_count": 49,
+     "metadata": {},
+     "output_type": "execute_result"
+    }
+   ],
+   "source": [
+    "clf.fit(iris_x_train,iris_y_train)"
+   ],
+   "metadata": {
+    "collapsed": false,
+    "ExecuteTime": {
+     "end_time": "2024-07-14T12:31:34.413487300Z",
+     "start_time": "2024-07-14T12:31:34.370012400Z"
+    }
+   },
+   "id": "c3be653ff23a905",
+   "execution_count": 49
+  },
+  {
+   "cell_type": "markdown",
+   "source": [
+    "* 预测"
+   ],
+   "metadata": {
+    "collapsed": false
+   },
+   "id": "39ba0de1e29519c6"
+  },
+  {
+   "cell_type": "code",
+   "outputs": [
+    {
+     "name": "stdout",
+     "output_type": "stream",
+     "text": [
+      "[2 1 0 0 0 2 2 2 0 1 0 2 1 2 1 1 1 2 0 2 1 2 0 0 2 0 1 0 2 0]\n",
+      "[2 1 0 0 0 1 2 2 0 2 0 2 1 2 1 1 2 2 0 2 1 2 0 0 2 0 1 0 2 0]\n"
+     ]
+    }
+   ],
+   "source": [
+    "res=clf.predict(iris_x_test)\n",
+    "print(res)\n",
+    "print(iris_y_test.values)"
+   ],
+   "metadata": {
+    "collapsed": false,
+    "ExecuteTime": {
+     "end_time": "2024-07-14T12:32:05.124141400Z",
+     "start_time": "2024-07-14T12:32:05.085140400Z"
+    }
+   },
+   "id": "b366260d2bac8698",
+   "execution_count": 50
+  },
+  {
+   "cell_type": "markdown",
+   "source": [
+    "* 评估"
+   ],
+   "metadata": {
+    "collapsed": false
+   },
+   "id": "6748666a74ece903"
+  },
+  {
+   "cell_type": "code",
+   "outputs": [
+    {
+     "name": "stdout",
+     "output_type": "stream",
+     "text": [
+      "预测正确率：90%\n"
+     ]
+    }
+   ],
+   "source": [
+    "accuracy=clf.score(iris_x_test,iris_y_test)\n",
+    "print(f\"预测正确率：{accuracy:.0%}\")"
+   ],
+   "metadata": {
+    "collapsed": false,
+    "ExecuteTime": {
+     "end_time": "2024-07-14T12:33:08.964026200Z",
+     "start_time": "2024-07-14T12:33:08.931676600Z"
+    }
+   },
+   "id": "89f1555cd0478b01",
+   "execution_count": 52
+  },
+  {
+   "cell_type": "markdown",
+   "source": [
+    "### 3.3可视化"
+   ],
+   "metadata": {
+    "collapsed": false
+   },
+   "id": "68db1cfc197546c4"
+  },
+  {
+   "cell_type": "code",
+   "outputs": [
+    {
+     "name": "stderr",
+     "output_type": "stream",
+     "text": [
+      "D:\\app\\anaconda3\\envs\\ai\\lib\\site-packages\\sklearn\\base.py:493: UserWarning: X does not have valid feature names, but GaussianNB was fitted with feature names\n",
+      "  warnings.warn(\n",
+      "C:\\Users\\Lenovo\\AppData\\Local\\Temp\\ipykernel_1968\\2867276073.py:24: MatplotlibDeprecationWarning: shading='flat' when X and Y have the same dimensions as C is deprecated since 3.3.  Either specify the corners of the quadrilaterals with X and Y, or pass shading='auto', 'nearest' or 'gouraud', or set rcParams['pcolor.shading'].  This will become an error two minor releases later.\n",
+      "  plt.pcolormesh(t1,t2,y_predict.reshape(x1.shape),cmap=cm_light)\n"
+     ]
+    },
+    {
+     "data": {
+      "text/plain": "<Figure size 1000x600 with 1 Axes>",
+      "image/png": ""
+     },
+     "metadata": {},
+     "output_type": "display_data"
+    }
+   ],
+   "source": [
+    "draw(clf)"
+   ],
+   "metadata": {
+    "collapsed": false,
+    "ExecuteTime": {
+     "end_time": "2024-07-14T12:34:01.095005500Z",
+     "start_time": "2024-07-14T12:34:00.273159900Z"
+    }
+   },
+   "id": "d013b3ad67ac6e19",
+   "execution_count": 53
+  },
+  {
+   "cell_type": "markdown",
+   "source": [
+    "## 4.决策树算法\n",
+    "### 4.1基本思想\n",
+    "**CART算法：每次通过一个特征，将数据尽可能的分为纯净的两类，递归的分下去**\n",
+    "### 4.2sklearn实现"
+   ],
+   "metadata": {
+    "collapsed": false
+   },
+   "id": "c1029aaf52faa7ea"
+  },
+  {
+   "cell_type": "code",
+   "outputs": [],
+   "source": [
+    "from sklearn.tree import DecisionTreeClassifier"
+   ],
+   "metadata": {
+    "collapsed": false,
+    "ExecuteTime": {
+     "end_time": "2024-07-14T12:36:11.006929900Z",
+     "start_time": "2024-07-14T12:36:10.983925100Z"
+    }
+   },
+   "id": "4d6f7875a149239a",
+   "execution_count": 54
+  },
+  {
+   "cell_type": "markdown",
+   "source": [
+    "* 构建分类器对象"
+   ],
+   "metadata": {
+    "collapsed": false
+   },
+   "id": "b24479775be7ace7"
+  },
+  {
+   "cell_type": "code",
+   "outputs": [
+    {
+     "data": {
+      "text/plain": "DecisionTreeClassifier()",
+      "text/html": "<style>#sk-container-id-6 {\n  /* Definition of color scheme common for light and dark mode */\n  --sklearn-color-text: black;\n  --sklearn-color-line: gray;\n  /* Definition of color scheme for unfitted estimators */\n  --sklearn-color-unfitted-level-0: #fff5e6;\n  --sklearn-color-unfitted-level-1: #f6e4d2;\n  --sklearn-color-unfitted-level-2: #ffe0b3;\n  --sklearn-color-unfitted-level-3: chocolate;\n  /* Definition of color scheme for fitted estimators */\n  --sklearn-color-fitted-level-0: #f0f8ff;\n  --sklearn-color-fitted-level-1: #d4ebff;\n  --sklearn-color-fitted-level-2: #b3dbfd;\n  --sklearn-color-fitted-level-3: cornflowerblue;\n\n  /* Specific color for light theme */\n  --sklearn-color-text-on-default-background: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, black)));\n  --sklearn-color-background: var(--sg-background-color, var(--theme-background, var(--jp-layout-color0, white)));\n  --sklearn-color-border-box: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, black)));\n  --sklearn-color-icon: #696969;\n\n  @media (prefers-color-scheme: dark) {\n    /* Redefinition of color scheme for dark theme */\n    --sklearn-color-text-on-default-background: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, white)));\n    --sklearn-color-background: var(--sg-background-color, var(--theme-background, var(--jp-layout-color0, #111)));\n    --sklearn-color-border-box: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, white)));\n    --sklearn-color-icon: #878787;\n  }\n}\n\n#sk-container-id-6 {\n  color: var(--sklearn-color-text);\n}\n\n#sk-container-id-6 pre {\n  padding: 0;\n}\n\n#sk-container-id-6 input.sk-hidden--visually {\n  border: 0;\n  clip: rect(1px 1px 1px 1px);\n  clip: rect(1px, 1px, 1px, 1px);\n  height: 1px;\n  margin: -1px;\n  overflow: hidden;\n  padding: 0;\n  position: absolute;\n  width: 1px;\n}\n\n#sk-container-id-6 div.sk-dashed-wrapped {\n  border: 1px dashed var(--sklearn-color-line);\n  margin: 0 0.4em 0.5em 0.4em;\n  box-sizing: border-box;\n  padding-bottom: 0.4em;\n  background-color: var(--sklearn-color-background);\n}\n\n#sk-container-id-6 div.sk-container {\n  /* jupyter's `normalize.less` sets `[hidden] { display: none; }`\n     but bootstrap.min.css set `[hidden] { display: none !important; }`\n     so we also need the `!important` here to be able to override the\n     default hidden behavior on the sphinx rendered scikit-learn.org.\n     See: https://github.com/scikit-learn/scikit-learn/issues/21755 */\n  display: inline-block !important;\n  position: relative;\n}\n\n#sk-container-id-6 div.sk-text-repr-fallback {\n  display: none;\n}\n\ndiv.sk-parallel-item,\ndiv.sk-serial,\ndiv.sk-item {\n  /* draw centered vertical line to link estimators */\n  background-image: linear-gradient(var(--sklearn-color-text-on-default-background), var(--sklearn-color-text-on-default-background));\n  background-size: 2px 100%;\n  background-repeat: no-repeat;\n  background-position: center center;\n}\n\n/* Parallel-specific style estimator block */\n\n#sk-container-id-6 div.sk-parallel-item::after {\n  content: \"\";\n  width: 100%;\n  border-bottom: 2px solid var(--sklearn-color-text-on-default-background);\n  flex-grow: 1;\n}\n\n#sk-container-id-6 div.sk-parallel {\n  display: flex;\n  align-items: stretch;\n  justify-content: center;\n  background-color: var(--sklearn-color-background);\n  position: relative;\n}\n\n#sk-container-id-6 div.sk-parallel-item {\n  display: flex;\n  flex-direction: column;\n}\n\n#sk-container-id-6 div.sk-parallel-item:first-child::after {\n  align-self: flex-end;\n  width: 50%;\n}\n\n#sk-container-id-6 div.sk-parallel-item:last-child::after {\n  align-self: flex-start;\n  width: 50%;\n}\n\n#sk-container-id-6 div.sk-parallel-item:only-child::after {\n  width: 0;\n}\n\n/* Serial-specific style estimator block */\n\n#sk-container-id-6 div.sk-serial {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  background-color: var(--sklearn-color-background);\n  padding-right: 1em;\n  padding-left: 1em;\n}\n\n\n/* Toggleable style: style used for estimator/Pipeline/ColumnTransformer box that is\nclickable and can be expanded/collapsed.\n- Pipeline and ColumnTransformer use this feature and define the default style\n- Estimators will overwrite some part of the style using the `sk-estimator` class\n*/\n\n/* Pipeline and ColumnTransformer style (default) */\n\n#sk-container-id-6 div.sk-toggleable {\n  /* Default theme specific background. It is overwritten whether we have a\n  specific estimator or a Pipeline/ColumnTransformer */\n  background-color: var(--sklearn-color-background);\n}\n\n/* Toggleable label */\n#sk-container-id-6 label.sk-toggleable__label {\n  cursor: pointer;\n  display: block;\n  width: 100%;\n  margin-bottom: 0;\n  padding: 0.5em;\n  box-sizing: border-box;\n  text-align: center;\n}\n\n#sk-container-id-6 label.sk-toggleable__label-arrow:before {\n  /* Arrow on the left of the label */\n  content: \"▸\";\n  float: left;\n  margin-right: 0.25em;\n  color: var(--sklearn-color-icon);\n}\n\n#sk-container-id-6 label.sk-toggleable__label-arrow:hover:before {\n  color: var(--sklearn-color-text);\n}\n\n/* Toggleable content - dropdown */\n\n#sk-container-id-6 div.sk-toggleable__content {\n  max-height: 0;\n  max-width: 0;\n  overflow: hidden;\n  text-align: left;\n  /* unfitted */\n  background-color: var(--sklearn-color-unfitted-level-0);\n}\n\n#sk-container-id-6 div.sk-toggleable__content.fitted {\n  /* fitted */\n  background-color: var(--sklearn-color-fitted-level-0);\n}\n\n#sk-container-id-6 div.sk-toggleable__content pre {\n  margin: 0.2em;\n  border-radius: 0.25em;\n  color: var(--sklearn-color-text);\n  /* unfitted */\n  background-color: var(--sklearn-color-unfitted-level-0);\n}\n\n#sk-container-id-6 div.sk-toggleable__content.fitted pre {\n  /* unfitted */\n  background-color: var(--sklearn-color-fitted-level-0);\n}\n\n#sk-container-id-6 input.sk-toggleable__control:checked~div.sk-toggleable__content {\n  /* Expand drop-down */\n  max-height: 200px;\n  max-width: 100%;\n  overflow: auto;\n}\n\n#sk-container-id-6 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {\n  content: \"▾\";\n}\n\n/* Pipeline/ColumnTransformer-specific style */\n\n#sk-container-id-6 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {\n  color: var(--sklearn-color-text);\n  background-color: var(--sklearn-color-unfitted-level-2);\n}\n\n#sk-container-id-6 div.sk-label.fitted input.sk-toggleable__control:checked~label.sk-toggleable__label {\n  background-color: var(--sklearn-color-fitted-level-2);\n}\n\n/* Estimator-specific style */\n\n/* Colorize estimator box */\n#sk-container-id-6 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {\n  /* unfitted */\n  background-color: var(--sklearn-color-unfitted-level-2);\n}\n\n#sk-container-id-6 div.sk-estimator.fitted input.sk-toggleable__control:checked~label.sk-toggleable__label {\n  /* fitted */\n  background-color: var(--sklearn-color-fitted-level-2);\n}\n\n#sk-container-id-6 div.sk-label label.sk-toggleable__label,\n#sk-container-id-6 div.sk-label label {\n  /* The background is the default theme color */\n  color: var(--sklearn-color-text-on-default-background);\n}\n\n/* On hover, darken the color of the background */\n#sk-container-id-6 div.sk-label:hover label.sk-toggleable__label {\n  color: var(--sklearn-color-text);\n  background-color: var(--sklearn-color-unfitted-level-2);\n}\n\n/* Label box, darken color on hover, fitted */\n#sk-container-id-6 div.sk-label.fitted:hover label.sk-toggleable__label.fitted {\n  color: var(--sklearn-color-text);\n  background-color: var(--sklearn-color-fitted-level-2);\n}\n\n/* Estimator label */\n\n#sk-container-id-6 div.sk-label label {\n  font-family: monospace;\n  font-weight: bold;\n  display: inline-block;\n  line-height: 1.2em;\n}\n\n#sk-container-id-6 div.sk-label-container {\n  text-align: center;\n}\n\n/* Estimator-specific */\n#sk-container-id-6 div.sk-estimator {\n  font-family: monospace;\n  border: 1px dotted var(--sklearn-color-border-box);\n  border-radius: 0.25em;\n  box-sizing: border-box;\n  margin-bottom: 0.5em;\n  /* unfitted */\n  background-color: var(--sklearn-color-unfitted-level-0);\n}\n\n#sk-container-id-6 div.sk-estimator.fitted {\n  /* fitted */\n  background-color: var(--sklearn-color-fitted-level-0);\n}\n\n/* on hover */\n#sk-container-id-6 div.sk-estimator:hover {\n  /* unfitted */\n  background-color: var(--sklearn-color-unfitted-level-2);\n}\n\n#sk-container-id-6 div.sk-estimator.fitted:hover {\n  /* fitted */\n  background-color: var(--sklearn-color-fitted-level-2);\n}\n\n/* Specification for estimator info (e.g. \"i\" and \"?\") */\n\n/* Common style for \"i\" and \"?\" */\n\n.sk-estimator-doc-link,\na:link.sk-estimator-doc-link,\na:visited.sk-estimator-doc-link {\n  float: right;\n  font-size: smaller;\n  line-height: 1em;\n  font-family: monospace;\n  background-color: var(--sklearn-color-background);\n  border-radius: 1em;\n  height: 1em;\n  width: 1em;\n  text-decoration: none !important;\n  margin-left: 1ex;\n  /* unfitted */\n  border: var(--sklearn-color-unfitted-level-1) 1pt solid;\n  color: var(--sklearn-color-unfitted-level-1);\n}\n\n.sk-estimator-doc-link.fitted,\na:link.sk-estimator-doc-link.fitted,\na:visited.sk-estimator-doc-link.fitted {\n  /* fitted */\n  border: var(--sklearn-color-fitted-level-1) 1pt solid;\n  color: var(--sklearn-color-fitted-level-1);\n}\n\n/* On hover */\ndiv.sk-estimator:hover .sk-estimator-doc-link:hover,\n.sk-estimator-doc-link:hover,\ndiv.sk-label-container:hover .sk-estimator-doc-link:hover,\n.sk-estimator-doc-link:hover {\n  /* unfitted */\n  background-color: var(--sklearn-color-unfitted-level-3);\n  color: var(--sklearn-color-background);\n  text-decoration: none;\n}\n\ndiv.sk-estimator.fitted:hover .sk-estimator-doc-link.fitted:hover,\n.sk-estimator-doc-link.fitted:hover,\ndiv.sk-label-container:hover .sk-estimator-doc-link.fitted:hover,\n.sk-estimator-doc-link.fitted:hover {\n  /* fitted */\n  background-color: var(--sklearn-color-fitted-level-3);\n  color: var(--sklearn-color-background);\n  text-decoration: none;\n}\n\n/* Span, style for the box shown on hovering the info icon */\n.sk-estimator-doc-link span {\n  display: none;\n  z-index: 9999;\n  position: relative;\n  font-weight: normal;\n  right: .2ex;\n  padding: .5ex;\n  margin: .5ex;\n  width: min-content;\n  min-width: 20ex;\n  max-width: 50ex;\n  color: var(--sklearn-color-text);\n  box-shadow: 2pt 2pt 4pt #999;\n  /* unfitted */\n  background: var(--sklearn-color-unfitted-level-0);\n  border: .5pt solid var(--sklearn-color-unfitted-level-3);\n}\n\n.sk-estimator-doc-link.fitted span {\n  /* fitted */\n  background: var(--sklearn-color-fitted-level-0);\n  border: var(--sklearn-color-fitted-level-3);\n}\n\n.sk-estimator-doc-link:hover span {\n  display: block;\n}\n\n/* \"?\"-specific style due to the `<a>` HTML tag */\n\n#sk-container-id-6 a.estimator_doc_link {\n  float: right;\n  font-size: 1rem;\n  line-height: 1em;\n  font-family: monospace;\n  background-color: var(--sklearn-color-background);\n  border-radius: 1rem;\n  height: 1rem;\n  width: 1rem;\n  text-decoration: none;\n  /* unfitted */\n  color: var(--sklearn-color-unfitted-level-1);\n  border: var(--sklearn-color-unfitted-level-1) 1pt solid;\n}\n\n#sk-container-id-6 a.estimator_doc_link.fitted {\n  /* fitted */\n  border: var(--sklearn-color-fitted-level-1) 1pt solid;\n  color: var(--sklearn-color-fitted-level-1);\n}\n\n/* On hover */\n#sk-container-id-6 a.estimator_doc_link:hover {\n  /* unfitted */\n  background-color: var(--sklearn-color-unfitted-level-3);\n  color: var(--sklearn-color-background);\n  text-decoration: none;\n}\n\n#sk-container-id-6 a.estimator_doc_link.fitted:hover {\n  /* fitted */\n  background-color: var(--sklearn-color-fitted-level-3);\n}\n</style><div id=\"sk-container-id-6\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>DecisionTreeClassifier()</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item\"><div class=\"sk-estimator  sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-6\" type=\"checkbox\" checked><label for=\"sk-estimator-id-6\" class=\"sk-toggleable__label  sk-toggleable__label-arrow \">&nbsp;&nbsp;DecisionTreeClassifier<a class=\"sk-estimator-doc-link \" rel=\"noreferrer\" target=\"_blank\" href=\"https://scikit-learn.org/1.4/modules/generated/sklearn.tree.DecisionTreeClassifier.html\">?<span>Documentation for DecisionTreeClassifier</span></a><span class=\"sk-estimator-doc-link \">i<span>Not fitted</span></span></label><div class=\"sk-toggleable__content \"><pre>DecisionTreeClassifier()</pre></div> </div></div></div></div>"
+     },
+     "execution_count": 55,
+     "metadata": {},
+     "output_type": "execute_result"
+    }
+   ],
+   "source": [
+    "clf=DecisionTreeClassifier()\n",
+    "clf"
+   ],
+   "metadata": {
+    "collapsed": false,
+    "ExecuteTime": {
+     "end_time": "2024-07-14T12:36:45.661584600Z",
+     "start_time": "2024-07-14T12:36:45.639615600Z"
+    }
+   },
+   "id": "4861c65d3750b3e3",
+   "execution_count": 55
+  },
+  {
+   "cell_type": "markdown",
+   "source": [
+    "* 训练"
+   ],
+   "metadata": {
+    "collapsed": false
+   },
+   "id": "91de3bc308759f6f"
+  },
+  {
+   "cell_type": "code",
+   "outputs": [
+    {
+     "data": {
+      "text/plain": "DecisionTreeClassifier()",
+      "text/html": "<style>#sk-container-id-7 {\n  /* Definition of color scheme common for light and dark mode */\n  --sklearn-color-text: black;\n  --sklearn-color-line: gray;\n  /* Definition of color scheme for unfitted estimators */\n  --sklearn-color-unfitted-level-0: #fff5e6;\n  --sklearn-color-unfitted-level-1: #f6e4d2;\n  --sklearn-color-unfitted-level-2: #ffe0b3;\n  --sklearn-color-unfitted-level-3: chocolate;\n  /* Definition of color scheme for fitted estimators */\n  --sklearn-color-fitted-level-0: #f0f8ff;\n  --sklearn-color-fitted-level-1: #d4ebff;\n  --sklearn-color-fitted-level-2: #b3dbfd;\n  --sklearn-color-fitted-level-3: cornflowerblue;\n\n  /* Specific color for light theme */\n  --sklearn-color-text-on-default-background: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, black)));\n  --sklearn-color-background: var(--sg-background-color, var(--theme-background, var(--jp-layout-color0, white)));\n  --sklearn-color-border-box: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, black)));\n  --sklearn-color-icon: #696969;\n\n  @media (prefers-color-scheme: dark) {\n    /* Redefinition of color scheme for dark theme */\n    --sklearn-color-text-on-default-background: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, white)));\n    --sklearn-color-background: var(--sg-background-color, var(--theme-background, var(--jp-layout-color0, #111)));\n    --sklearn-color-border-box: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, white)));\n    --sklearn-color-icon: #878787;\n  }\n}\n\n#sk-container-id-7 {\n  color: var(--sklearn-color-text);\n}\n\n#sk-container-id-7 pre {\n  padding: 0;\n}\n\n#sk-container-id-7 input.sk-hidden--visually {\n  border: 0;\n  clip: rect(1px 1px 1px 1px);\n  clip: rect(1px, 1px, 1px, 1px);\n  height: 1px;\n  margin: -1px;\n  overflow: hidden;\n  padding: 0;\n  position: absolute;\n  width: 1px;\n}\n\n#sk-container-id-7 div.sk-dashed-wrapped {\n  border: 1px dashed var(--sklearn-color-line);\n  margin: 0 0.4em 0.5em 0.4em;\n  box-sizing: border-box;\n  padding-bottom: 0.4em;\n  background-color: var(--sklearn-color-background);\n}\n\n#sk-container-id-7 div.sk-container {\n  /* jupyter's `normalize.less` sets `[hidden] { display: none; }`\n     but bootstrap.min.css set `[hidden] { display: none !important; }`\n     so we also need the `!important` here to be able to override the\n     default hidden behavior on the sphinx rendered scikit-learn.org.\n     See: https://github.com/scikit-learn/scikit-learn/issues/21755 */\n  display: inline-block !important;\n  position: relative;\n}\n\n#sk-container-id-7 div.sk-text-repr-fallback {\n  display: none;\n}\n\ndiv.sk-parallel-item,\ndiv.sk-serial,\ndiv.sk-item {\n  /* draw centered vertical line to link estimators */\n  background-image: linear-gradient(var(--sklearn-color-text-on-default-background), var(--sklearn-color-text-on-default-background));\n  background-size: 2px 100%;\n  background-repeat: no-repeat;\n  background-position: center center;\n}\n\n/* Parallel-specific style estimator block */\n\n#sk-container-id-7 div.sk-parallel-item::after {\n  content: \"\";\n  width: 100%;\n  border-bottom: 2px solid var(--sklearn-color-text-on-default-background);\n  flex-grow: 1;\n}\n\n#sk-container-id-7 div.sk-parallel {\n  display: flex;\n  align-items: stretch;\n  justify-content: center;\n  background-color: var(--sklearn-color-background);\n  position: relative;\n}\n\n#sk-container-id-7 div.sk-parallel-item {\n  display: flex;\n  flex-direction: column;\n}\n\n#sk-container-id-7 div.sk-parallel-item:first-child::after {\n  align-self: flex-end;\n  width: 50%;\n}\n\n#sk-container-id-7 div.sk-parallel-item:last-child::after {\n  align-self: flex-start;\n  width: 50%;\n}\n\n#sk-container-id-7 div.sk-parallel-item:only-child::after {\n  width: 0;\n}\n\n/* Serial-specific style estimator block */\n\n#sk-container-id-7 div.sk-serial {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  background-color: var(--sklearn-color-background);\n  padding-right: 1em;\n  padding-left: 1em;\n}\n\n\n/* Toggleable style: style used for estimator/Pipeline/ColumnTransformer box that is\nclickable and can be expanded/collapsed.\n- Pipeline and ColumnTransformer use this feature and define the default style\n- Estimators will overwrite some part of the style using the `sk-estimator` class\n*/\n\n/* Pipeline and ColumnTransformer style (default) */\n\n#sk-container-id-7 div.sk-toggleable {\n  /* Default theme specific background. It is overwritten whether we have a\n  specific estimator or a Pipeline/ColumnTransformer */\n  background-color: var(--sklearn-color-background);\n}\n\n/* Toggleable label */\n#sk-container-id-7 label.sk-toggleable__label {\n  cursor: pointer;\n  display: block;\n  width: 100%;\n  margin-bottom: 0;\n  padding: 0.5em;\n  box-sizing: border-box;\n  text-align: center;\n}\n\n#sk-container-id-7 label.sk-toggleable__label-arrow:before {\n  /* Arrow on the left of the label */\n  content: \"▸\";\n  float: left;\n  margin-right: 0.25em;\n  color: var(--sklearn-color-icon);\n}\n\n#sk-container-id-7 label.sk-toggleable__label-arrow:hover:before {\n  color: var(--sklearn-color-text);\n}\n\n/* Toggleable content - dropdown */\n\n#sk-container-id-7 div.sk-toggleable__content {\n  max-height: 0;\n  max-width: 0;\n  overflow: hidden;\n  text-align: left;\n  /* unfitted */\n  background-color: var(--sklearn-color-unfitted-level-0);\n}\n\n#sk-container-id-7 div.sk-toggleable__content.fitted {\n  /* fitted */\n  background-color: var(--sklearn-color-fitted-level-0);\n}\n\n#sk-container-id-7 div.sk-toggleable__content pre {\n  margin: 0.2em;\n  border-radius: 0.25em;\n  color: var(--sklearn-color-text);\n  /* unfitted */\n  background-color: var(--sklearn-color-unfitted-level-0);\n}\n\n#sk-container-id-7 div.sk-toggleable__content.fitted pre {\n  /* unfitted */\n  background-color: var(--sklearn-color-fitted-level-0);\n}\n\n#sk-container-id-7 input.sk-toggleable__control:checked~div.sk-toggleable__content {\n  /* Expand drop-down */\n  max-height: 200px;\n  max-width: 100%;\n  overflow: auto;\n}\n\n#sk-container-id-7 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {\n  content: \"▾\";\n}\n\n/* Pipeline/ColumnTransformer-specific style */\n\n#sk-container-id-7 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {\n  color: var(--sklearn-color-text);\n  background-color: var(--sklearn-color-unfitted-level-2);\n}\n\n#sk-container-id-7 div.sk-label.fitted input.sk-toggleable__control:checked~label.sk-toggleable__label {\n  background-color: var(--sklearn-color-fitted-level-2);\n}\n\n/* Estimator-specific style */\n\n/* Colorize estimator box */\n#sk-container-id-7 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {\n  /* unfitted */\n  background-color: var(--sklearn-color-unfitted-level-2);\n}\n\n#sk-container-id-7 div.sk-estimator.fitted input.sk-toggleable__control:checked~label.sk-toggleable__label {\n  /* fitted */\n  background-color: var(--sklearn-color-fitted-level-2);\n}\n\n#sk-container-id-7 div.sk-label label.sk-toggleable__label,\n#sk-container-id-7 div.sk-label label {\n  /* The background is the default theme color */\n  color: var(--sklearn-color-text-on-default-background);\n}\n\n/* On hover, darken the color of the background */\n#sk-container-id-7 div.sk-label:hover label.sk-toggleable__label {\n  color: var(--sklearn-color-text);\n  background-color: var(--sklearn-color-unfitted-level-2);\n}\n\n/* Label box, darken color on hover, fitted */\n#sk-container-id-7 div.sk-label.fitted:hover label.sk-toggleable__label.fitted {\n  color: var(--sklearn-color-text);\n  background-color: var(--sklearn-color-fitted-level-2);\n}\n\n/* Estimator label */\n\n#sk-container-id-7 div.sk-label label {\n  font-family: monospace;\n  font-weight: bold;\n  display: inline-block;\n  line-height: 1.2em;\n}\n\n#sk-container-id-7 div.sk-label-container {\n  text-align: center;\n}\n\n/* Estimator-specific */\n#sk-container-id-7 div.sk-estimator {\n  font-family: monospace;\n  border: 1px dotted var(--sklearn-color-border-box);\n  border-radius: 0.25em;\n  box-sizing: border-box;\n  margin-bottom: 0.5em;\n  /* unfitted */\n  background-color: var(--sklearn-color-unfitted-level-0);\n}\n\n#sk-container-id-7 div.sk-estimator.fitted {\n  /* fitted */\n  background-color: var(--sklearn-color-fitted-level-0);\n}\n\n/* on hover */\n#sk-container-id-7 div.sk-estimator:hover {\n  /* unfitted */\n  background-color: var(--sklearn-color-unfitted-level-2);\n}\n\n#sk-container-id-7 div.sk-estimator.fitted:hover {\n  /* fitted */\n  background-color: var(--sklearn-color-fitted-level-2);\n}\n\n/* Specification for estimator info (e.g. \"i\" and \"?\") */\n\n/* Common style for \"i\" and \"?\" */\n\n.sk-estimator-doc-link,\na:link.sk-estimator-doc-link,\na:visited.sk-estimator-doc-link {\n  float: right;\n  font-size: smaller;\n  line-height: 1em;\n  font-family: monospace;\n  background-color: var(--sklearn-color-background);\n  border-radius: 1em;\n  height: 1em;\n  width: 1em;\n  text-decoration: none !important;\n  margin-left: 1ex;\n  /* unfitted */\n  border: var(--sklearn-color-unfitted-level-1) 1pt solid;\n  color: var(--sklearn-color-unfitted-level-1);\n}\n\n.sk-estimator-doc-link.fitted,\na:link.sk-estimator-doc-link.fitted,\na:visited.sk-estimator-doc-link.fitted {\n  /* fitted */\n  border: var(--sklearn-color-fitted-level-1) 1pt solid;\n  color: var(--sklearn-color-fitted-level-1);\n}\n\n/* On hover */\ndiv.sk-estimator:hover .sk-estimator-doc-link:hover,\n.sk-estimator-doc-link:hover,\ndiv.sk-label-container:hover .sk-estimator-doc-link:hover,\n.sk-estimator-doc-link:hover {\n  /* unfitted */\n  background-color: var(--sklearn-color-unfitted-level-3);\n  color: var(--sklearn-color-background);\n  text-decoration: none;\n}\n\ndiv.sk-estimator.fitted:hover .sk-estimator-doc-link.fitted:hover,\n.sk-estimator-doc-link.fitted:hover,\ndiv.sk-label-container:hover .sk-estimator-doc-link.fitted:hover,\n.sk-estimator-doc-link.fitted:hover {\n  /* fitted */\n  background-color: var(--sklearn-color-fitted-level-3);\n  color: var(--sklearn-color-background);\n  text-decoration: none;\n}\n\n/* Span, style for the box shown on hovering the info icon */\n.sk-estimator-doc-link span {\n  display: none;\n  z-index: 9999;\n  position: relative;\n  font-weight: normal;\n  right: .2ex;\n  padding: .5ex;\n  margin: .5ex;\n  width: min-content;\n  min-width: 20ex;\n  max-width: 50ex;\n  color: var(--sklearn-color-text);\n  box-shadow: 2pt 2pt 4pt #999;\n  /* unfitted */\n  background: var(--sklearn-color-unfitted-level-0);\n  border: .5pt solid var(--sklearn-color-unfitted-level-3);\n}\n\n.sk-estimator-doc-link.fitted span {\n  /* fitted */\n  background: var(--sklearn-color-fitted-level-0);\n  border: var(--sklearn-color-fitted-level-3);\n}\n\n.sk-estimator-doc-link:hover span {\n  display: block;\n}\n\n/* \"?\"-specific style due to the `<a>` HTML tag */\n\n#sk-container-id-7 a.estimator_doc_link {\n  float: right;\n  font-size: 1rem;\n  line-height: 1em;\n  font-family: monospace;\n  background-color: var(--sklearn-color-background);\n  border-radius: 1rem;\n  height: 1rem;\n  width: 1rem;\n  text-decoration: none;\n  /* unfitted */\n  color: var(--sklearn-color-unfitted-level-1);\n  border: var(--sklearn-color-unfitted-level-1) 1pt solid;\n}\n\n#sk-container-id-7 a.estimator_doc_link.fitted {\n  /* fitted */\n  border: var(--sklearn-color-fitted-level-1) 1pt solid;\n  color: var(--sklearn-color-fitted-level-1);\n}\n\n/* On hover */\n#sk-container-id-7 a.estimator_doc_link:hover {\n  /* unfitted */\n  background-color: var(--sklearn-color-unfitted-level-3);\n  color: var(--sklearn-color-background);\n  text-decoration: none;\n}\n\n#sk-container-id-7 a.estimator_doc_link.fitted:hover {\n  /* fitted */\n  background-color: var(--sklearn-color-fitted-level-3);\n}\n</style><div id=\"sk-container-id-7\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>DecisionTreeClassifier()</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item\"><div class=\"sk-estimator fitted sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-7\" type=\"checkbox\" checked><label for=\"sk-estimator-id-7\" class=\"sk-toggleable__label fitted sk-toggleable__label-arrow fitted\">&nbsp;&nbsp;DecisionTreeClassifier<a class=\"sk-estimator-doc-link fitted\" rel=\"noreferrer\" target=\"_blank\" href=\"https://scikit-learn.org/1.4/modules/generated/sklearn.tree.DecisionTreeClassifier.html\">?<span>Documentation for DecisionTreeClassifier</span></a><span class=\"sk-estimator-doc-link fitted\">i<span>Fitted</span></span></label><div class=\"sk-toggleable__content fitted\"><pre>DecisionTreeClassifier()</pre></div> </div></div></div></div>"
+     },
+     "execution_count": 56,
+     "metadata": {},
+     "output_type": "execute_result"
+    }
+   ],
+   "source": [
+    "clf.fit(iris_x_train,iris_y_train)"
+   ],
+   "metadata": {
+    "collapsed": false,
+    "ExecuteTime": {
+     "end_time": "2024-07-14T12:38:34.383420Z",
+     "start_time": "2024-07-14T12:38:34.361417800Z"
+    }
+   },
+   "id": "80cbb750d40db1c",
+   "execution_count": 56
+  },
+  {
+   "cell_type": "markdown",
+   "source": [
+    "* 预测"
+   ],
+   "metadata": {
+    "collapsed": false
+   },
+   "id": "364905e65e2ee81a"
+  },
+  {
+   "cell_type": "code",
+   "outputs": [
+    {
+     "name": "stdout",
+     "output_type": "stream",
+     "text": [
+      "[2 1 0 0 0 2 2 2 0 2 0 2 1 2 1 1 1 2 0 2 1 2 0 0 2 0 1 0 2 0]\n",
+      "[2 1 0 0 0 1 2 2 0 2 0 2 1 2 1 1 2 2 0 2 1 2 0 0 2 0 1 0 2 0]\n"
+     ]
+    }
+   ],
+   "source": [
+    "res=clf.predict(iris_x_test)\n",
+    "print(res)\n",
+    "print(iris_y_test.values)"
+   ],
+   "metadata": {
+    "collapsed": false,
+    "ExecuteTime": {
+     "end_time": "2024-07-14T12:39:13.544099600Z",
+     "start_time": "2024-07-14T12:39:13.460759800Z"
+    }
+   },
+   "id": "c55bfb3c3c3b5499",
+   "execution_count": 58
+  },
+  {
+   "cell_type": "markdown",
+   "source": [
+    "* 评估"
+   ],
+   "metadata": {
+    "collapsed": false
+   },
+   "id": "c15cf48789643989"
+  },
+  {
+   "cell_type": "code",
+   "outputs": [
+    {
+     "name": "stdout",
+     "output_type": "stream",
+     "text": [
+      "预测正确率：93%\n"
+     ]
+    }
+   ],
+   "source": [
+    "accuracy=clf.score(iris_x_test,iris_y_test)\n",
+    "print(f\"预测正确率：{accuracy:.0%}\")"
+   ],
+   "metadata": {
+    "collapsed": false,
+    "ExecuteTime": {
+     "end_time": "2024-07-14T12:39:44.276249100Z",
+     "start_time": "2024-07-14T12:39:44.240248600Z"
+    }
+   },
+   "id": "b5ce963cf2e4c3a3",
+   "execution_count": 59
+  },
+  {
+   "cell_type": "markdown",
+   "source": [
+    "### 4.3可视化"
+   ],
+   "metadata": {
+    "collapsed": false
+   },
+   "id": "8f56e853ef57cfdd"
+  },
+  {
+   "cell_type": "code",
+   "outputs": [
+    {
+     "name": "stderr",
+     "output_type": "stream",
+     "text": [
+      "D:\\app\\anaconda3\\envs\\ai\\lib\\site-packages\\sklearn\\base.py:493: UserWarning: X does not have valid feature names, but DecisionTreeClassifier was fitted with feature names\n",
+      "  warnings.warn(\n",
+      "C:\\Users\\Lenovo\\AppData\\Local\\Temp\\ipykernel_1968\\2867276073.py:24: MatplotlibDeprecationWarning: shading='flat' when X and Y have the same dimensions as C is deprecated since 3.3.  Either specify the corners of the quadrilaterals with X and Y, or pass shading='auto', 'nearest' or 'gouraud', or set rcParams['pcolor.shading'].  This will become an error two minor releases later.\n",
+      "  plt.pcolormesh(t1,t2,y_predict.reshape(x1.shape),cmap=cm_light)\n"
+     ]
+    },
+    {
+     "data": {
+      "text/plain": "<Figure size 1000x600 with 1 Axes>",
+      "image/png": ""
+     },
+     "metadata": {},
+     "output_type": "display_data"
+    }
+   ],
+   "source": [
+    "draw(clf)"
+   ],
+   "metadata": {
+    "collapsed": false,
+    "ExecuteTime": {
+     "end_time": "2024-07-14T12:40:19.632141600Z",
+     "start_time": "2024-07-14T12:40:18.787047600Z"
+    }
+   },
+   "id": "bf064efd7e7cb06",
+   "execution_count": 60
+  },
+  {
+   "cell_type": "markdown",
+   "source": [
+    "## 5.逻辑回归算法\n",
+    "### 5.1基本思想\n",
+    "**一种解释：\n",
+    "训练：通过一个映射方式，将特征X=(x1,x2)，映射成P(y=ck)，求使得所有概率之积最大化的映射方式里的参数\n",
+    "预测：计算p(y=ck)取概率最大的那个类别作为预测对象的分类**\n",
+    "### 5.2sklearn实现"
+   ],
+   "metadata": {
+    "collapsed": false
+   },
+   "id": "50981143ec8b3a4c"
+  },
+  {
+   "cell_type": "code",
+   "outputs": [],
+   "source": [
+    "from sklearn.linear_model import LogisticRegression"
+   ],
+   "metadata": {
+    "collapsed": false,
+    "ExecuteTime": {
+     "end_time": "2024-07-14T12:43:24.154072900Z",
+     "start_time": "2024-07-14T12:43:24.130072900Z"
+    }
+   },
+   "id": "3a8b7f27cc4eeea3",
+   "execution_count": 61
+  },
+  {
+   "cell_type": "markdown",
+   "source": [
+    "* 构建分类器对象"
+   ],
+   "metadata": {
+    "collapsed": false
+   },
+   "id": "f0fdc1d6455b6ad5"
+  },
+  {
+   "cell_type": "code",
+   "outputs": [
+    {
+     "data": {
+      "text/plain": "LogisticRegression(max_iter=1000, solver='saga')",
+      "text/html": "<style>#sk-container-id-10 {\n  /* Definition of color scheme common for light and dark mode */\n  --sklearn-color-text: black;\n  --sklearn-color-line: gray;\n  /* Definition of color scheme for unfitted estimators */\n  --sklearn-color-unfitted-level-0: #fff5e6;\n  --sklearn-color-unfitted-level-1: #f6e4d2;\n  --sklearn-color-unfitted-level-2: #ffe0b3;\n  --sklearn-color-unfitted-level-3: chocolate;\n  /* Definition of color scheme for fitted estimators */\n  --sklearn-color-fitted-level-0: #f0f8ff;\n  --sklearn-color-fitted-level-1: #d4ebff;\n  --sklearn-color-fitted-level-2: #b3dbfd;\n  --sklearn-color-fitted-level-3: cornflowerblue;\n\n  /* Specific color for light theme */\n  --sklearn-color-text-on-default-background: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, black)));\n  --sklearn-color-background: var(--sg-background-color, var(--theme-background, var(--jp-layout-color0, white)));\n  --sklearn-color-border-box: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, black)));\n  --sklearn-color-icon: #696969;\n\n  @media (prefers-color-scheme: dark) {\n    /* Redefinition of color scheme for dark theme */\n    --sklearn-color-text-on-default-background: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, white)));\n    --sklearn-color-background: var(--sg-background-color, var(--theme-background, var(--jp-layout-color0, #111)));\n    --sklearn-color-border-box: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, white)));\n    --sklearn-color-icon: #878787;\n  }\n}\n\n#sk-container-id-10 {\n  color: var(--sklearn-color-text);\n}\n\n#sk-container-id-10 pre {\n  padding: 0;\n}\n\n#sk-container-id-10 input.sk-hidden--visually {\n  border: 0;\n  clip: rect(1px 1px 1px 1px);\n  clip: rect(1px, 1px, 1px, 1px);\n  height: 1px;\n  margin: -1px;\n  overflow: hidden;\n  padding: 0;\n  position: absolute;\n  width: 1px;\n}\n\n#sk-container-id-10 div.sk-dashed-wrapped {\n  border: 1px dashed var(--sklearn-color-line);\n  margin: 0 0.4em 0.5em 0.4em;\n  box-sizing: border-box;\n  padding-bottom: 0.4em;\n  background-color: var(--sklearn-color-background);\n}\n\n#sk-container-id-10 div.sk-container {\n  /* jupyter's `normalize.less` sets `[hidden] { display: none; }`\n     but bootstrap.min.css set `[hidden] { display: none !important; }`\n     so we also need the `!important` here to be able to override the\n     default hidden behavior on the sphinx rendered scikit-learn.org.\n     See: https://github.com/scikit-learn/scikit-learn/issues/21755 */\n  display: inline-block !important;\n  position: relative;\n}\n\n#sk-container-id-10 div.sk-text-repr-fallback {\n  display: none;\n}\n\ndiv.sk-parallel-item,\ndiv.sk-serial,\ndiv.sk-item {\n  /* draw centered vertical line to link estimators */\n  background-image: linear-gradient(var(--sklearn-color-text-on-default-background), var(--sklearn-color-text-on-default-background));\n  background-size: 2px 100%;\n  background-repeat: no-repeat;\n  background-position: center center;\n}\n\n/* Parallel-specific style estimator block */\n\n#sk-container-id-10 div.sk-parallel-item::after {\n  content: \"\";\n  width: 100%;\n  border-bottom: 2px solid var(--sklearn-color-text-on-default-background);\n  flex-grow: 1;\n}\n\n#sk-container-id-10 div.sk-parallel {\n  display: flex;\n  align-items: stretch;\n  justify-content: center;\n  background-color: var(--sklearn-color-background);\n  position: relative;\n}\n\n#sk-container-id-10 div.sk-parallel-item {\n  display: flex;\n  flex-direction: column;\n}\n\n#sk-container-id-10 div.sk-parallel-item:first-child::after {\n  align-self: flex-end;\n  width: 50%;\n}\n\n#sk-container-id-10 div.sk-parallel-item:last-child::after {\n  align-self: flex-start;\n  width: 50%;\n}\n\n#sk-container-id-10 div.sk-parallel-item:only-child::after {\n  width: 0;\n}\n\n/* Serial-specific style estimator block */\n\n#sk-container-id-10 div.sk-serial {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  background-color: var(--sklearn-color-background);\n  padding-right: 1em;\n  padding-left: 1em;\n}\n\n\n/* Toggleable style: style used for estimator/Pipeline/ColumnTransformer box that is\nclickable and can be expanded/collapsed.\n- Pipeline and ColumnTransformer use this feature and define the default style\n- Estimators will overwrite some part of the style using the `sk-estimator` class\n*/\n\n/* Pipeline and ColumnTransformer style (default) */\n\n#sk-container-id-10 div.sk-toggleable {\n  /* Default theme specific background. It is overwritten whether we have a\n  specific estimator or a Pipeline/ColumnTransformer */\n  background-color: var(--sklearn-color-background);\n}\n\n/* Toggleable label */\n#sk-container-id-10 label.sk-toggleable__label {\n  cursor: pointer;\n  display: block;\n  width: 100%;\n  margin-bottom: 0;\n  padding: 0.5em;\n  box-sizing: border-box;\n  text-align: center;\n}\n\n#sk-container-id-10 label.sk-toggleable__label-arrow:before {\n  /* Arrow on the left of the label */\n  content: \"▸\";\n  float: left;\n  margin-right: 0.25em;\n  color: var(--sklearn-color-icon);\n}\n\n#sk-container-id-10 label.sk-toggleable__label-arrow:hover:before {\n  color: var(--sklearn-color-text);\n}\n\n/* Toggleable content - dropdown */\n\n#sk-container-id-10 div.sk-toggleable__content {\n  max-height: 0;\n  max-width: 0;\n  overflow: hidden;\n  text-align: left;\n  /* unfitted */\n  background-color: var(--sklearn-color-unfitted-level-0);\n}\n\n#sk-container-id-10 div.sk-toggleable__content.fitted {\n  /* fitted */\n  background-color: var(--sklearn-color-fitted-level-0);\n}\n\n#sk-container-id-10 div.sk-toggleable__content pre {\n  margin: 0.2em;\n  border-radius: 0.25em;\n  color: var(--sklearn-color-text);\n  /* unfitted */\n  background-color: var(--sklearn-color-unfitted-level-0);\n}\n\n#sk-container-id-10 div.sk-toggleable__content.fitted pre {\n  /* unfitted */\n  background-color: var(--sklearn-color-fitted-level-0);\n}\n\n#sk-container-id-10 input.sk-toggleable__control:checked~div.sk-toggleable__content {\n  /* Expand drop-down */\n  max-height: 200px;\n  max-width: 100%;\n  overflow: auto;\n}\n\n#sk-container-id-10 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {\n  content: \"▾\";\n}\n\n/* Pipeline/ColumnTransformer-specific style */\n\n#sk-container-id-10 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {\n  color: var(--sklearn-color-text);\n  background-color: var(--sklearn-color-unfitted-level-2);\n}\n\n#sk-container-id-10 div.sk-label.fitted input.sk-toggleable__control:checked~label.sk-toggleable__label {\n  background-color: var(--sklearn-color-fitted-level-2);\n}\n\n/* Estimator-specific style */\n\n/* Colorize estimator box */\n#sk-container-id-10 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {\n  /* unfitted */\n  background-color: var(--sklearn-color-unfitted-level-2);\n}\n\n#sk-container-id-10 div.sk-estimator.fitted input.sk-toggleable__control:checked~label.sk-toggleable__label {\n  /* fitted */\n  background-color: var(--sklearn-color-fitted-level-2);\n}\n\n#sk-container-id-10 div.sk-label label.sk-toggleable__label,\n#sk-container-id-10 div.sk-label label {\n  /* The background is the default theme color */\n  color: var(--sklearn-color-text-on-default-background);\n}\n\n/* On hover, darken the color of the background */\n#sk-container-id-10 div.sk-label:hover label.sk-toggleable__label {\n  color: var(--sklearn-color-text);\n  background-color: var(--sklearn-color-unfitted-level-2);\n}\n\n/* Label box, darken color on hover, fitted */\n#sk-container-id-10 div.sk-label.fitted:hover label.sk-toggleable__label.fitted {\n  color: var(--sklearn-color-text);\n  background-color: var(--sklearn-color-fitted-level-2);\n}\n\n/* Estimator label */\n\n#sk-container-id-10 div.sk-label label {\n  font-family: monospace;\n  font-weight: bold;\n  display: inline-block;\n  line-height: 1.2em;\n}\n\n#sk-container-id-10 div.sk-label-container {\n  text-align: center;\n}\n\n/* Estimator-specific */\n#sk-container-id-10 div.sk-estimator {\n  font-family: monospace;\n  border: 1px dotted var(--sklearn-color-border-box);\n  border-radius: 0.25em;\n  box-sizing: border-box;\n  margin-bottom: 0.5em;\n  /* unfitted */\n  background-color: var(--sklearn-color-unfitted-level-0);\n}\n\n#sk-container-id-10 div.sk-estimator.fitted {\n  /* fitted */\n  background-color: var(--sklearn-color-fitted-level-0);\n}\n\n/* on hover */\n#sk-container-id-10 div.sk-estimator:hover {\n  /* unfitted */\n  background-color: var(--sklearn-color-unfitted-level-2);\n}\n\n#sk-container-id-10 div.sk-estimator.fitted:hover {\n  /* fitted */\n  background-color: var(--sklearn-color-fitted-level-2);\n}\n\n/* Specification for estimator info (e.g. \"i\" and \"?\") */\n\n/* Common style for \"i\" and \"?\" */\n\n.sk-estimator-doc-link,\na:link.sk-estimator-doc-link,\na:visited.sk-estimator-doc-link {\n  float: right;\n  font-size: smaller;\n  line-height: 1em;\n  font-family: monospace;\n  background-color: var(--sklearn-color-background);\n  border-radius: 1em;\n  height: 1em;\n  width: 1em;\n  text-decoration: none !important;\n  margin-left: 1ex;\n  /* unfitted */\n  border: var(--sklearn-color-unfitted-level-1) 1pt solid;\n  color: var(--sklearn-color-unfitted-level-1);\n}\n\n.sk-estimator-doc-link.fitted,\na:link.sk-estimator-doc-link.fitted,\na:visited.sk-estimator-doc-link.fitted {\n  /* fitted */\n  border: var(--sklearn-color-fitted-level-1) 1pt solid;\n  color: var(--sklearn-color-fitted-level-1);\n}\n\n/* On hover */\ndiv.sk-estimator:hover .sk-estimator-doc-link:hover,\n.sk-estimator-doc-link:hover,\ndiv.sk-label-container:hover .sk-estimator-doc-link:hover,\n.sk-estimator-doc-link:hover {\n  /* unfitted */\n  background-color: var(--sklearn-color-unfitted-level-3);\n  color: var(--sklearn-color-background);\n  text-decoration: none;\n}\n\ndiv.sk-estimator.fitted:hover .sk-estimator-doc-link.fitted:hover,\n.sk-estimator-doc-link.fitted:hover,\ndiv.sk-label-container:hover .sk-estimator-doc-link.fitted:hover,\n.sk-estimator-doc-link.fitted:hover {\n  /* fitted */\n  background-color: var(--sklearn-color-fitted-level-3);\n  color: var(--sklearn-color-background);\n  text-decoration: none;\n}\n\n/* Span, style for the box shown on hovering the info icon */\n.sk-estimator-doc-link span {\n  display: none;\n  z-index: 9999;\n  position: relative;\n  font-weight: normal;\n  right: .2ex;\n  padding: .5ex;\n  margin: .5ex;\n  width: min-content;\n  min-width: 20ex;\n  max-width: 50ex;\n  color: var(--sklearn-color-text);\n  box-shadow: 2pt 2pt 4pt #999;\n  /* unfitted */\n  background: var(--sklearn-color-unfitted-level-0);\n  border: .5pt solid var(--sklearn-color-unfitted-level-3);\n}\n\n.sk-estimator-doc-link.fitted span {\n  /* fitted */\n  background: var(--sklearn-color-fitted-level-0);\n  border: var(--sklearn-color-fitted-level-3);\n}\n\n.sk-estimator-doc-link:hover span {\n  display: block;\n}\n\n/* \"?\"-specific style due to the `<a>` HTML tag */\n\n#sk-container-id-10 a.estimator_doc_link {\n  float: right;\n  font-size: 1rem;\n  line-height: 1em;\n  font-family: monospace;\n  background-color: var(--sklearn-color-background);\n  border-radius: 1rem;\n  height: 1rem;\n  width: 1rem;\n  text-decoration: none;\n  /* unfitted */\n  color: var(--sklearn-color-unfitted-level-1);\n  border: var(--sklearn-color-unfitted-level-1) 1pt solid;\n}\n\n#sk-container-id-10 a.estimator_doc_link.fitted {\n  /* fitted */\n  border: var(--sklearn-color-fitted-level-1) 1pt solid;\n  color: var(--sklearn-color-fitted-level-1);\n}\n\n/* On hover */\n#sk-container-id-10 a.estimator_doc_link:hover {\n  /* unfitted */\n  background-color: var(--sklearn-color-unfitted-level-3);\n  color: var(--sklearn-color-background);\n  text-decoration: none;\n}\n\n#sk-container-id-10 a.estimator_doc_link.fitted:hover {\n  /* fitted */\n  background-color: var(--sklearn-color-fitted-level-3);\n}\n</style><div id=\"sk-container-id-10\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>LogisticRegression(max_iter=1000, solver=&#x27;saga&#x27;)</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item\"><div class=\"sk-estimator  sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-10\" type=\"checkbox\" checked><label for=\"sk-estimator-id-10\" class=\"sk-toggleable__label  sk-toggleable__label-arrow \">&nbsp;&nbsp;LogisticRegression<a class=\"sk-estimator-doc-link \" rel=\"noreferrer\" target=\"_blank\" href=\"https://scikit-learn.org/1.4/modules/generated/sklearn.linear_model.LogisticRegression.html\">?<span>Documentation for LogisticRegression</span></a><span class=\"sk-estimator-doc-link \">i<span>Not fitted</span></span></label><div class=\"sk-toggleable__content \"><pre>LogisticRegression(max_iter=1000, solver=&#x27;saga&#x27;)</pre></div> </div></div></div></div>"
+     },
+     "execution_count": 66,
+     "metadata": {},
+     "output_type": "execute_result"
+    }
+   ],
+   "source": [
+    "clf=LogisticRegression(solver=\"saga\",max_iter=1000)\n",
+    "clf"
+   ],
+   "metadata": {
+    "collapsed": false,
+    "ExecuteTime": {
+     "end_time": "2024-07-14T13:00:51.000972700Z",
+     "start_time": "2024-07-14T13:00:50.987832200Z"
+    }
+   },
+   "id": "fa5418d7d3cfe6c2",
+   "execution_count": 66
+  },
+  {
+   "cell_type": "markdown",
+   "source": [
+    "* 训练"
+   ],
+   "metadata": {
+    "collapsed": false
+   },
+   "id": "a8400b57ffa2844e"
+  },
+  {
+   "cell_type": "code",
+   "outputs": [
+    {
+     "data": {
+      "text/plain": "LogisticRegression(max_iter=1000, solver='saga')",
+      "text/html": "<style>#sk-container-id-11 {\n  /* Definition of color scheme common for light and dark mode */\n  --sklearn-color-text: black;\n  --sklearn-color-line: gray;\n  /* Definition of color scheme for unfitted estimators */\n  --sklearn-color-unfitted-level-0: #fff5e6;\n  --sklearn-color-unfitted-level-1: #f6e4d2;\n  --sklearn-color-unfitted-level-2: #ffe0b3;\n  --sklearn-color-unfitted-level-3: chocolate;\n  /* Definition of color scheme for fitted estimators */\n  --sklearn-color-fitted-level-0: #f0f8ff;\n  --sklearn-color-fitted-level-1: #d4ebff;\n  --sklearn-color-fitted-level-2: #b3dbfd;\n  --sklearn-color-fitted-level-3: cornflowerblue;\n\n  /* Specific color for light theme */\n  --sklearn-color-text-on-default-background: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, black)));\n  --sklearn-color-background: var(--sg-background-color, var(--theme-background, var(--jp-layout-color0, white)));\n  --sklearn-color-border-box: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, black)));\n  --sklearn-color-icon: #696969;\n\n  @media (prefers-color-scheme: dark) {\n    /* Redefinition of color scheme for dark theme */\n    --sklearn-color-text-on-default-background: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, white)));\n    --sklearn-color-background: var(--sg-background-color, var(--theme-background, var(--jp-layout-color0, #111)));\n    --sklearn-color-border-box: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, white)));\n    --sklearn-color-icon: #878787;\n  }\n}\n\n#sk-container-id-11 {\n  color: var(--sklearn-color-text);\n}\n\n#sk-container-id-11 pre {\n  padding: 0;\n}\n\n#sk-container-id-11 input.sk-hidden--visually {\n  border: 0;\n  clip: rect(1px 1px 1px 1px);\n  clip: rect(1px, 1px, 1px, 1px);\n  height: 1px;\n  margin: -1px;\n  overflow: hidden;\n  padding: 0;\n  position: absolute;\n  width: 1px;\n}\n\n#sk-container-id-11 div.sk-dashed-wrapped {\n  border: 1px dashed var(--sklearn-color-line);\n  margin: 0 0.4em 0.5em 0.4em;\n  box-sizing: border-box;\n  padding-bottom: 0.4em;\n  background-color: var(--sklearn-color-background);\n}\n\n#sk-container-id-11 div.sk-container {\n  /* jupyter's `normalize.less` sets `[hidden] { display: none; }`\n     but bootstrap.min.css set `[hidden] { display: none !important; }`\n     so we also need the `!important` here to be able to override the\n     default hidden behavior on the sphinx rendered scikit-learn.org.\n     See: https://github.com/scikit-learn/scikit-learn/issues/21755 */\n  display: inline-block !important;\n  position: relative;\n}\n\n#sk-container-id-11 div.sk-text-repr-fallback {\n  display: none;\n}\n\ndiv.sk-parallel-item,\ndiv.sk-serial,\ndiv.sk-item {\n  /* draw centered vertical line to link estimators */\n  background-image: linear-gradient(var(--sklearn-color-text-on-default-background), var(--sklearn-color-text-on-default-background));\n  background-size: 2px 100%;\n  background-repeat: no-repeat;\n  background-position: center center;\n}\n\n/* Parallel-specific style estimator block */\n\n#sk-container-id-11 div.sk-parallel-item::after {\n  content: \"\";\n  width: 100%;\n  border-bottom: 2px solid var(--sklearn-color-text-on-default-background);\n  flex-grow: 1;\n}\n\n#sk-container-id-11 div.sk-parallel {\n  display: flex;\n  align-items: stretch;\n  justify-content: center;\n  background-color: var(--sklearn-color-background);\n  position: relative;\n}\n\n#sk-container-id-11 div.sk-parallel-item {\n  display: flex;\n  flex-direction: column;\n}\n\n#sk-container-id-11 div.sk-parallel-item:first-child::after {\n  align-self: flex-end;\n  width: 50%;\n}\n\n#sk-container-id-11 div.sk-parallel-item:last-child::after {\n  align-self: flex-start;\n  width: 50%;\n}\n\n#sk-container-id-11 div.sk-parallel-item:only-child::after {\n  width: 0;\n}\n\n/* Serial-specific style estimator block */\n\n#sk-container-id-11 div.sk-serial {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  background-color: var(--sklearn-color-background);\n  padding-right: 1em;\n  padding-left: 1em;\n}\n\n\n/* Toggleable style: style used for estimator/Pipeline/ColumnTransformer box that is\nclickable and can be expanded/collapsed.\n- Pipeline and ColumnTransformer use this feature and define the default style\n- Estimators will overwrite some part of the style using the `sk-estimator` class\n*/\n\n/* Pipeline and ColumnTransformer style (default) */\n\n#sk-container-id-11 div.sk-toggleable {\n  /* Default theme specific background. It is overwritten whether we have a\n  specific estimator or a Pipeline/ColumnTransformer */\n  background-color: var(--sklearn-color-background);\n}\n\n/* Toggleable label */\n#sk-container-id-11 label.sk-toggleable__label {\n  cursor: pointer;\n  display: block;\n  width: 100%;\n  margin-bottom: 0;\n  padding: 0.5em;\n  box-sizing: border-box;\n  text-align: center;\n}\n\n#sk-container-id-11 label.sk-toggleable__label-arrow:before {\n  /* Arrow on the left of the label */\n  content: \"▸\";\n  float: left;\n  margin-right: 0.25em;\n  color: var(--sklearn-color-icon);\n}\n\n#sk-container-id-11 label.sk-toggleable__label-arrow:hover:before {\n  color: var(--sklearn-color-text);\n}\n\n/* Toggleable content - dropdown */\n\n#sk-container-id-11 div.sk-toggleable__content {\n  max-height: 0;\n  max-width: 0;\n  overflow: hidden;\n  text-align: left;\n  /* unfitted */\n  background-color: var(--sklearn-color-unfitted-level-0);\n}\n\n#sk-container-id-11 div.sk-toggleable__content.fitted {\n  /* fitted */\n  background-color: var(--sklearn-color-fitted-level-0);\n}\n\n#sk-container-id-11 div.sk-toggleable__content pre {\n  margin: 0.2em;\n  border-radius: 0.25em;\n  color: var(--sklearn-color-text);\n  /* unfitted */\n  background-color: var(--sklearn-color-unfitted-level-0);\n}\n\n#sk-container-id-11 div.sk-toggleable__content.fitted pre {\n  /* unfitted */\n  background-color: var(--sklearn-color-fitted-level-0);\n}\n\n#sk-container-id-11 input.sk-toggleable__control:checked~div.sk-toggleable__content {\n  /* Expand drop-down */\n  max-height: 200px;\n  max-width: 100%;\n  overflow: auto;\n}\n\n#sk-container-id-11 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {\n  content: \"▾\";\n}\n\n/* Pipeline/ColumnTransformer-specific style */\n\n#sk-container-id-11 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {\n  color: var(--sklearn-color-text);\n  background-color: var(--sklearn-color-unfitted-level-2);\n}\n\n#sk-container-id-11 div.sk-label.fitted input.sk-toggleable__control:checked~label.sk-toggleable__label {\n  background-color: var(--sklearn-color-fitted-level-2);\n}\n\n/* Estimator-specific style */\n\n/* Colorize estimator box */\n#sk-container-id-11 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {\n  /* unfitted */\n  background-color: var(--sklearn-color-unfitted-level-2);\n}\n\n#sk-container-id-11 div.sk-estimator.fitted input.sk-toggleable__control:checked~label.sk-toggleable__label {\n  /* fitted */\n  background-color: var(--sklearn-color-fitted-level-2);\n}\n\n#sk-container-id-11 div.sk-label label.sk-toggleable__label,\n#sk-container-id-11 div.sk-label label {\n  /* The background is the default theme color */\n  color: var(--sklearn-color-text-on-default-background);\n}\n\n/* On hover, darken the color of the background */\n#sk-container-id-11 div.sk-label:hover label.sk-toggleable__label {\n  color: var(--sklearn-color-text);\n  background-color: var(--sklearn-color-unfitted-level-2);\n}\n\n/* Label box, darken color on hover, fitted */\n#sk-container-id-11 div.sk-label.fitted:hover label.sk-toggleable__label.fitted {\n  color: var(--sklearn-color-text);\n  background-color: var(--sklearn-color-fitted-level-2);\n}\n\n/* Estimator label */\n\n#sk-container-id-11 div.sk-label label {\n  font-family: monospace;\n  font-weight: bold;\n  display: inline-block;\n  line-height: 1.2em;\n}\n\n#sk-container-id-11 div.sk-label-container {\n  text-align: center;\n}\n\n/* Estimator-specific */\n#sk-container-id-11 div.sk-estimator {\n  font-family: monospace;\n  border: 1px dotted var(--sklearn-color-border-box);\n  border-radius: 0.25em;\n  box-sizing: border-box;\n  margin-bottom: 0.5em;\n  /* unfitted */\n  background-color: var(--sklearn-color-unfitted-level-0);\n}\n\n#sk-container-id-11 div.sk-estimator.fitted {\n  /* fitted */\n  background-color: var(--sklearn-color-fitted-level-0);\n}\n\n/* on hover */\n#sk-container-id-11 div.sk-estimator:hover {\n  /* unfitted */\n  background-color: var(--sklearn-color-unfitted-level-2);\n}\n\n#sk-container-id-11 div.sk-estimator.fitted:hover {\n  /* fitted */\n  background-color: var(--sklearn-color-fitted-level-2);\n}\n\n/* Specification for estimator info (e.g. \"i\" and \"?\") */\n\n/* Common style for \"i\" and \"?\" */\n\n.sk-estimator-doc-link,\na:link.sk-estimator-doc-link,\na:visited.sk-estimator-doc-link {\n  float: right;\n  font-size: smaller;\n  line-height: 1em;\n  font-family: monospace;\n  background-color: var(--sklearn-color-background);\n  border-radius: 1em;\n  height: 1em;\n  width: 1em;\n  text-decoration: none !important;\n  margin-left: 1ex;\n  /* unfitted */\n  border: var(--sklearn-color-unfitted-level-1) 1pt solid;\n  color: var(--sklearn-color-unfitted-level-1);\n}\n\n.sk-estimator-doc-link.fitted,\na:link.sk-estimator-doc-link.fitted,\na:visited.sk-estimator-doc-link.fitted {\n  /* fitted */\n  border: var(--sklearn-color-fitted-level-1) 1pt solid;\n  color: var(--sklearn-color-fitted-level-1);\n}\n\n/* On hover */\ndiv.sk-estimator:hover .sk-estimator-doc-link:hover,\n.sk-estimator-doc-link:hover,\ndiv.sk-label-container:hover .sk-estimator-doc-link:hover,\n.sk-estimator-doc-link:hover {\n  /* unfitted */\n  background-color: var(--sklearn-color-unfitted-level-3);\n  color: var(--sklearn-color-background);\n  text-decoration: none;\n}\n\ndiv.sk-estimator.fitted:hover .sk-estimator-doc-link.fitted:hover,\n.sk-estimator-doc-link.fitted:hover,\ndiv.sk-label-container:hover .sk-estimator-doc-link.fitted:hover,\n.sk-estimator-doc-link.fitted:hover {\n  /* fitted */\n  background-color: var(--sklearn-color-fitted-level-3);\n  color: var(--sklearn-color-background);\n  text-decoration: none;\n}\n\n/* Span, style for the box shown on hovering the info icon */\n.sk-estimator-doc-link span {\n  display: none;\n  z-index: 9999;\n  position: relative;\n  font-weight: normal;\n  right: .2ex;\n  padding: .5ex;\n  margin: .5ex;\n  width: min-content;\n  min-width: 20ex;\n  max-width: 50ex;\n  color: var(--sklearn-color-text);\n  box-shadow: 2pt 2pt 4pt #999;\n  /* unfitted */\n  background: var(--sklearn-color-unfitted-level-0);\n  border: .5pt solid var(--sklearn-color-unfitted-level-3);\n}\n\n.sk-estimator-doc-link.fitted span {\n  /* fitted */\n  background: var(--sklearn-color-fitted-level-0);\n  border: var(--sklearn-color-fitted-level-3);\n}\n\n.sk-estimator-doc-link:hover span {\n  display: block;\n}\n\n/* \"?\"-specific style due to the `<a>` HTML tag */\n\n#sk-container-id-11 a.estimator_doc_link {\n  float: right;\n  font-size: 1rem;\n  line-height: 1em;\n  font-family: monospace;\n  background-color: var(--sklearn-color-background);\n  border-radius: 1rem;\n  height: 1rem;\n  width: 1rem;\n  text-decoration: none;\n  /* unfitted */\n  color: var(--sklearn-color-unfitted-level-1);\n  border: var(--sklearn-color-unfitted-level-1) 1pt solid;\n}\n\n#sk-container-id-11 a.estimator_doc_link.fitted {\n  /* fitted */\n  border: var(--sklearn-color-fitted-level-1) 1pt solid;\n  color: var(--sklearn-color-fitted-level-1);\n}\n\n/* On hover */\n#sk-container-id-11 a.estimator_doc_link:hover {\n  /* unfitted */\n  background-color: var(--sklearn-color-unfitted-level-3);\n  color: var(--sklearn-color-background);\n  text-decoration: none;\n}\n\n#sk-container-id-11 a.estimator_doc_link.fitted:hover {\n  /* fitted */\n  background-color: var(--sklearn-color-fitted-level-3);\n}\n</style><div id=\"sk-container-id-11\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>LogisticRegression(max_iter=1000, solver=&#x27;saga&#x27;)</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item\"><div class=\"sk-estimator fitted sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-11\" type=\"checkbox\" checked><label for=\"sk-estimator-id-11\" class=\"sk-toggleable__label fitted sk-toggleable__label-arrow fitted\">&nbsp;&nbsp;LogisticRegression<a class=\"sk-estimator-doc-link fitted\" rel=\"noreferrer\" target=\"_blank\" href=\"https://scikit-learn.org/1.4/modules/generated/sklearn.linear_model.LogisticRegression.html\">?<span>Documentation for LogisticRegression</span></a><span class=\"sk-estimator-doc-link fitted\">i<span>Fitted</span></span></label><div class=\"sk-toggleable__content fitted\"><pre>LogisticRegression(max_iter=1000, solver=&#x27;saga&#x27;)</pre></div> </div></div></div></div>"
+     },
+     "execution_count": 67,
+     "metadata": {},
+     "output_type": "execute_result"
+    }
+   ],
+   "source": [
+    "clf.fit(iris_x_train,iris_y_train)"
+   ],
+   "metadata": {
+    "collapsed": false,
+    "ExecuteTime": {
+     "end_time": "2024-07-14T13:00:53.971861600Z",
+     "start_time": "2024-07-14T13:00:53.919634300Z"
+    }
+   },
+   "id": "4d07d0f5ba29a531",
+   "execution_count": 67
+  },
+  {
+   "cell_type": "markdown",
+   "source": [
+    "* 预测"
+   ],
+   "metadata": {
+    "collapsed": false
+   },
+   "id": "b142455ada13d348"
+  },
+  {
+   "cell_type": "code",
+   "outputs": [
+    {
+     "name": "stdout",
+     "output_type": "stream",
+     "text": [
+      "[2 1 0 0 0 1 2 2 0 1 0 2 1 2 1 1 1 2 0 2 1 2 0 0 2 0 1 0 2 0]\n",
+      "[2 1 0 0 0 1 2 2 0 2 0 2 1 2 1 1 2 2 0 2 1 2 0 0 2 0 1 0 2 0]\n"
+     ]
+    }
+   ],
+   "source": [
+    "res=clf.predict(iris_x_test)\n",
+    "print(res)\n",
+    "print(iris_y_test.values)"
+   ],
+   "metadata": {
+    "collapsed": false,
+    "ExecuteTime": {
+     "end_time": "2024-07-14T13:07:22.431819200Z",
+     "start_time": "2024-07-14T13:07:22.189481100Z"
+    }
+   },
+   "id": "a01f245214055359",
+   "execution_count": 75
+  },
+  {
+   "cell_type": "markdown",
+   "source": [
+    "* 评估"
+   ],
+   "metadata": {
+    "collapsed": false
+   },
+   "id": "a19051ac23f8b5c"
+  },
+  {
+   "cell_type": "code",
+   "outputs": [
+    {
+     "name": "stdout",
+     "output_type": "stream",
+     "text": [
+      "预测正确率：93%\n"
+     ]
+    }
+   ],
+   "source": [
+    "accuracy=clf.score(iris_x_test,iris_y_test)\n",
+    "print(f\"预测正确率：{accuracy:.0%}\")"
+   ],
+   "metadata": {
+    "collapsed": false,
+    "ExecuteTime": {
+     "end_time": "2024-07-14T13:07:26.615094800Z",
+     "start_time": "2024-07-14T13:07:26.579715800Z"
+    }
+   },
+   "id": "20137eadca972906",
+   "execution_count": 76
+  },
+  {
+   "cell_type": "markdown",
+   "source": [
+    "### 5.3可视化"
+   ],
+   "metadata": {
+    "collapsed": false
+   },
+   "id": "ec42169370a4eb"
+  },
+  {
+   "cell_type": "code",
+   "outputs": [
+    {
+     "name": "stderr",
+     "output_type": "stream",
+     "text": [
+      "D:\\app\\anaconda3\\envs\\ai\\lib\\site-packages\\sklearn\\base.py:493: UserWarning: X does not have valid feature names, but SVC was fitted with feature names\n",
+      "  warnings.warn(\n",
+      "C:\\Users\\Lenovo\\AppData\\Local\\Temp\\ipykernel_1968\\2867276073.py:24: MatplotlibDeprecationWarning: shading='flat' when X and Y have the same dimensions as C is deprecated since 3.3.  Either specify the corners of the quadrilaterals with X and Y, or pass shading='auto', 'nearest' or 'gouraud', or set rcParams['pcolor.shading'].  This will become an error two minor releases later.\n",
+      "  plt.pcolormesh(t1,t2,y_predict.reshape(x1.shape),cmap=cm_light)\n"
+     ]
+    },
+    {
+     "data": {
+      "text/plain": "<Figure size 1000x600 with 1 Axes>",
+      "image/png": ""
+     },
+     "metadata": {},
+     "output_type": "display_data"
+    }
+   ],
+   "source": [
+    "draw(clf)"
+   ],
+   "metadata": {
+    "collapsed": false,
+    "ExecuteTime": {
+     "end_time": "2024-07-14T13:07:31.188756500Z",
+     "start_time": "2024-07-14T13:07:29.521359800Z"
+    }
+   },
+   "id": "71f13e05c69e4a9d",
+   "execution_count": 77
+  },
+  {
+   "cell_type": "markdown",
+   "source": [
+    "## 6.支持向量机算法\n",
+    "### 6.1基本思想\n",
+    "**以二分类为例，假设数据可用完全分开：\n",
+    "用一个超平面将两类数据完全分开，且最近点到平面的距离最大**\n",
+    "### 6.2sklearn实现"
+   ],
+   "metadata": {
+    "collapsed": false
+   },
+   "id": "6b2fc1b83995572e"
+  },
+  {
+   "cell_type": "code",
+   "outputs": [],
+   "source": [
+    "from sklearn.svm import SVC"
+   ],
+   "metadata": {
+    "collapsed": false,
+    "ExecuteTime": {
+     "end_time": "2024-07-14T13:04:16.827467700Z",
+     "start_time": "2024-07-14T13:04:16.750453500Z"
+    }
+   },
+   "id": "a5d58ec3c4c7251",
+   "execution_count": 71
+  },
+  {
+   "cell_type": "markdown",
+   "source": [
+    "* 构建分类器对象"
+   ],
+   "metadata": {
+    "collapsed": false
+   },
+   "id": "90332b483d05e037"
+  },
+  {
+   "cell_type": "code",
+   "outputs": [
+    {
+     "data": {
+      "text/plain": "SVC()",
+      "text/html": "<style>#sk-container-id-12 {\n  /* Definition of color scheme common for light and dark mode */\n  --sklearn-color-text: black;\n  --sklearn-color-line: gray;\n  /* Definition of color scheme for unfitted estimators */\n  --sklearn-color-unfitted-level-0: #fff5e6;\n  --sklearn-color-unfitted-level-1: #f6e4d2;\n  --sklearn-color-unfitted-level-2: #ffe0b3;\n  --sklearn-color-unfitted-level-3: chocolate;\n  /* Definition of color scheme for fitted estimators */\n  --sklearn-color-fitted-level-0: #f0f8ff;\n  --sklearn-color-fitted-level-1: #d4ebff;\n  --sklearn-color-fitted-level-2: #b3dbfd;\n  --sklearn-color-fitted-level-3: cornflowerblue;\n\n  /* Specific color for light theme */\n  --sklearn-color-text-on-default-background: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, black)));\n  --sklearn-color-background: var(--sg-background-color, var(--theme-background, var(--jp-layout-color0, white)));\n  --sklearn-color-border-box: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, black)));\n  --sklearn-color-icon: #696969;\n\n  @media (prefers-color-scheme: dark) {\n    /* Redefinition of color scheme for dark theme */\n    --sklearn-color-text-on-default-background: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, white)));\n    --sklearn-color-background: var(--sg-background-color, var(--theme-background, var(--jp-layout-color0, #111)));\n    --sklearn-color-border-box: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, white)));\n    --sklearn-color-icon: #878787;\n  }\n}\n\n#sk-container-id-12 {\n  color: var(--sklearn-color-text);\n}\n\n#sk-container-id-12 pre {\n  padding: 0;\n}\n\n#sk-container-id-12 input.sk-hidden--visually {\n  border: 0;\n  clip: rect(1px 1px 1px 1px);\n  clip: rect(1px, 1px, 1px, 1px);\n  height: 1px;\n  margin: -1px;\n  overflow: hidden;\n  padding: 0;\n  position: absolute;\n  width: 1px;\n}\n\n#sk-container-id-12 div.sk-dashed-wrapped {\n  border: 1px dashed var(--sklearn-color-line);\n  margin: 0 0.4em 0.5em 0.4em;\n  box-sizing: border-box;\n  padding-bottom: 0.4em;\n  background-color: var(--sklearn-color-background);\n}\n\n#sk-container-id-12 div.sk-container {\n  /* jupyter's `normalize.less` sets `[hidden] { display: none; }`\n     but bootstrap.min.css set `[hidden] { display: none !important; }`\n     so we also need the `!important` here to be able to override the\n     default hidden behavior on the sphinx rendered scikit-learn.org.\n     See: https://github.com/scikit-learn/scikit-learn/issues/21755 */\n  display: inline-block !important;\n  position: relative;\n}\n\n#sk-container-id-12 div.sk-text-repr-fallback {\n  display: none;\n}\n\ndiv.sk-parallel-item,\ndiv.sk-serial,\ndiv.sk-item {\n  /* draw centered vertical line to link estimators */\n  background-image: linear-gradient(var(--sklearn-color-text-on-default-background), var(--sklearn-color-text-on-default-background));\n  background-size: 2px 100%;\n  background-repeat: no-repeat;\n  background-position: center center;\n}\n\n/* Parallel-specific style estimator block */\n\n#sk-container-id-12 div.sk-parallel-item::after {\n  content: \"\";\n  width: 100%;\n  border-bottom: 2px solid var(--sklearn-color-text-on-default-background);\n  flex-grow: 1;\n}\n\n#sk-container-id-12 div.sk-parallel {\n  display: flex;\n  align-items: stretch;\n  justify-content: center;\n  background-color: var(--sklearn-color-background);\n  position: relative;\n}\n\n#sk-container-id-12 div.sk-parallel-item {\n  display: flex;\n  flex-direction: column;\n}\n\n#sk-container-id-12 div.sk-parallel-item:first-child::after {\n  align-self: flex-end;\n  width: 50%;\n}\n\n#sk-container-id-12 div.sk-parallel-item:last-child::after {\n  align-self: flex-start;\n  width: 50%;\n}\n\n#sk-container-id-12 div.sk-parallel-item:only-child::after {\n  width: 0;\n}\n\n/* Serial-specific style estimator block */\n\n#sk-container-id-12 div.sk-serial {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  background-color: var(--sklearn-color-background);\n  padding-right: 1em;\n  padding-left: 1em;\n}\n\n\n/* Toggleable style: style used for estimator/Pipeline/ColumnTransformer box that is\nclickable and can be expanded/collapsed.\n- Pipeline and ColumnTransformer use this feature and define the default style\n- Estimators will overwrite some part of the style using the `sk-estimator` class\n*/\n\n/* Pipeline and ColumnTransformer style (default) */\n\n#sk-container-id-12 div.sk-toggleable {\n  /* Default theme specific background. It is overwritten whether we have a\n  specific estimator or a Pipeline/ColumnTransformer */\n  background-color: var(--sklearn-color-background);\n}\n\n/* Toggleable label */\n#sk-container-id-12 label.sk-toggleable__label {\n  cursor: pointer;\n  display: block;\n  width: 100%;\n  margin-bottom: 0;\n  padding: 0.5em;\n  box-sizing: border-box;\n  text-align: center;\n}\n\n#sk-container-id-12 label.sk-toggleable__label-arrow:before {\n  /* Arrow on the left of the label */\n  content: \"▸\";\n  float: left;\n  margin-right: 0.25em;\n  color: var(--sklearn-color-icon);\n}\n\n#sk-container-id-12 label.sk-toggleable__label-arrow:hover:before {\n  color: var(--sklearn-color-text);\n}\n\n/* Toggleable content - dropdown */\n\n#sk-container-id-12 div.sk-toggleable__content {\n  max-height: 0;\n  max-width: 0;\n  overflow: hidden;\n  text-align: left;\n  /* unfitted */\n  background-color: var(--sklearn-color-unfitted-level-0);\n}\n\n#sk-container-id-12 div.sk-toggleable__content.fitted {\n  /* fitted */\n  background-color: var(--sklearn-color-fitted-level-0);\n}\n\n#sk-container-id-12 div.sk-toggleable__content pre {\n  margin: 0.2em;\n  border-radius: 0.25em;\n  color: var(--sklearn-color-text);\n  /* unfitted */\n  background-color: var(--sklearn-color-unfitted-level-0);\n}\n\n#sk-container-id-12 div.sk-toggleable__content.fitted pre {\n  /* unfitted */\n  background-color: var(--sklearn-color-fitted-level-0);\n}\n\n#sk-container-id-12 input.sk-toggleable__control:checked~div.sk-toggleable__content {\n  /* Expand drop-down */\n  max-height: 200px;\n  max-width: 100%;\n  overflow: auto;\n}\n\n#sk-container-id-12 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {\n  content: \"▾\";\n}\n\n/* Pipeline/ColumnTransformer-specific style */\n\n#sk-container-id-12 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {\n  color: var(--sklearn-color-text);\n  background-color: var(--sklearn-color-unfitted-level-2);\n}\n\n#sk-container-id-12 div.sk-label.fitted input.sk-toggleable__control:checked~label.sk-toggleable__label {\n  background-color: var(--sklearn-color-fitted-level-2);\n}\n\n/* Estimator-specific style */\n\n/* Colorize estimator box */\n#sk-container-id-12 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {\n  /* unfitted */\n  background-color: var(--sklearn-color-unfitted-level-2);\n}\n\n#sk-container-id-12 div.sk-estimator.fitted input.sk-toggleable__control:checked~label.sk-toggleable__label {\n  /* fitted */\n  background-color: var(--sklearn-color-fitted-level-2);\n}\n\n#sk-container-id-12 div.sk-label label.sk-toggleable__label,\n#sk-container-id-12 div.sk-label label {\n  /* The background is the default theme color */\n  color: var(--sklearn-color-text-on-default-background);\n}\n\n/* On hover, darken the color of the background */\n#sk-container-id-12 div.sk-label:hover label.sk-toggleable__label {\n  color: var(--sklearn-color-text);\n  background-color: var(--sklearn-color-unfitted-level-2);\n}\n\n/* Label box, darken color on hover, fitted */\n#sk-container-id-12 div.sk-label.fitted:hover label.sk-toggleable__label.fitted {\n  color: var(--sklearn-color-text);\n  background-color: var(--sklearn-color-fitted-level-2);\n}\n\n/* Estimator label */\n\n#sk-container-id-12 div.sk-label label {\n  font-family: monospace;\n  font-weight: bold;\n  display: inline-block;\n  line-height: 1.2em;\n}\n\n#sk-container-id-12 div.sk-label-container {\n  text-align: center;\n}\n\n/* Estimator-specific */\n#sk-container-id-12 div.sk-estimator {\n  font-family: monospace;\n  border: 1px dotted var(--sklearn-color-border-box);\n  border-radius: 0.25em;\n  box-sizing: border-box;\n  margin-bottom: 0.5em;\n  /* unfitted */\n  background-color: var(--sklearn-color-unfitted-level-0);\n}\n\n#sk-container-id-12 div.sk-estimator.fitted {\n  /* fitted */\n  background-color: var(--sklearn-color-fitted-level-0);\n}\n\n/* on hover */\n#sk-container-id-12 div.sk-estimator:hover {\n  /* unfitted */\n  background-color: var(--sklearn-color-unfitted-level-2);\n}\n\n#sk-container-id-12 div.sk-estimator.fitted:hover {\n  /* fitted */\n  background-color: var(--sklearn-color-fitted-level-2);\n}\n\n/* Specification for estimator info (e.g. \"i\" and \"?\") */\n\n/* Common style for \"i\" and \"?\" */\n\n.sk-estimator-doc-link,\na:link.sk-estimator-doc-link,\na:visited.sk-estimator-doc-link {\n  float: right;\n  font-size: smaller;\n  line-height: 1em;\n  font-family: monospace;\n  background-color: var(--sklearn-color-background);\n  border-radius: 1em;\n  height: 1em;\n  width: 1em;\n  text-decoration: none !important;\n  margin-left: 1ex;\n  /* unfitted */\n  border: var(--sklearn-color-unfitted-level-1) 1pt solid;\n  color: var(--sklearn-color-unfitted-level-1);\n}\n\n.sk-estimator-doc-link.fitted,\na:link.sk-estimator-doc-link.fitted,\na:visited.sk-estimator-doc-link.fitted {\n  /* fitted */\n  border: var(--sklearn-color-fitted-level-1) 1pt solid;\n  color: var(--sklearn-color-fitted-level-1);\n}\n\n/* On hover */\ndiv.sk-estimator:hover .sk-estimator-doc-link:hover,\n.sk-estimator-doc-link:hover,\ndiv.sk-label-container:hover .sk-estimator-doc-link:hover,\n.sk-estimator-doc-link:hover {\n  /* unfitted */\n  background-color: var(--sklearn-color-unfitted-level-3);\n  color: var(--sklearn-color-background);\n  text-decoration: none;\n}\n\ndiv.sk-estimator.fitted:hover .sk-estimator-doc-link.fitted:hover,\n.sk-estimator-doc-link.fitted:hover,\ndiv.sk-label-container:hover .sk-estimator-doc-link.fitted:hover,\n.sk-estimator-doc-link.fitted:hover {\n  /* fitted */\n  background-color: var(--sklearn-color-fitted-level-3);\n  color: var(--sklearn-color-background);\n  text-decoration: none;\n}\n\n/* Span, style for the box shown on hovering the info icon */\n.sk-estimator-doc-link span {\n  display: none;\n  z-index: 9999;\n  position: relative;\n  font-weight: normal;\n  right: .2ex;\n  padding: .5ex;\n  margin: .5ex;\n  width: min-content;\n  min-width: 20ex;\n  max-width: 50ex;\n  color: var(--sklearn-color-text);\n  box-shadow: 2pt 2pt 4pt #999;\n  /* unfitted */\n  background: var(--sklearn-color-unfitted-level-0);\n  border: .5pt solid var(--sklearn-color-unfitted-level-3);\n}\n\n.sk-estimator-doc-link.fitted span {\n  /* fitted */\n  background: var(--sklearn-color-fitted-level-0);\n  border: var(--sklearn-color-fitted-level-3);\n}\n\n.sk-estimator-doc-link:hover span {\n  display: block;\n}\n\n/* \"?\"-specific style due to the `<a>` HTML tag */\n\n#sk-container-id-12 a.estimator_doc_link {\n  float: right;\n  font-size: 1rem;\n  line-height: 1em;\n  font-family: monospace;\n  background-color: var(--sklearn-color-background);\n  border-radius: 1rem;\n  height: 1rem;\n  width: 1rem;\n  text-decoration: none;\n  /* unfitted */\n  color: var(--sklearn-color-unfitted-level-1);\n  border: var(--sklearn-color-unfitted-level-1) 1pt solid;\n}\n\n#sk-container-id-12 a.estimator_doc_link.fitted {\n  /* fitted */\n  border: var(--sklearn-color-fitted-level-1) 1pt solid;\n  color: var(--sklearn-color-fitted-level-1);\n}\n\n/* On hover */\n#sk-container-id-12 a.estimator_doc_link:hover {\n  /* unfitted */\n  background-color: var(--sklearn-color-unfitted-level-3);\n  color: var(--sklearn-color-background);\n  text-decoration: none;\n}\n\n#sk-container-id-12 a.estimator_doc_link.fitted:hover {\n  /* fitted */\n  background-color: var(--sklearn-color-fitted-level-3);\n}\n</style><div id=\"sk-container-id-12\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>SVC()</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item\"><div class=\"sk-estimator  sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-12\" type=\"checkbox\" checked><label for=\"sk-estimator-id-12\" class=\"sk-toggleable__label  sk-toggleable__label-arrow \">&nbsp;&nbsp;SVC<a class=\"sk-estimator-doc-link \" rel=\"noreferrer\" target=\"_blank\" href=\"https://scikit-learn.org/1.4/modules/generated/sklearn.svm.SVC.html\">?<span>Documentation for SVC</span></a><span class=\"sk-estimator-doc-link \">i<span>Not fitted</span></span></label><div class=\"sk-toggleable__content \"><pre>SVC()</pre></div> </div></div></div></div>"
+     },
+     "execution_count": 72,
+     "metadata": {},
+     "output_type": "execute_result"
+    }
+   ],
+   "source": [
+    "clf=SVC()\n",
+    "clf"
+   ],
+   "metadata": {
+    "collapsed": false,
+    "ExecuteTime": {
+     "end_time": "2024-07-14T13:04:55.277801400Z",
+     "start_time": "2024-07-14T13:04:55.212452900Z"
+    }
+   },
+   "id": "2d0e5a1ef1198ac5",
+   "execution_count": 72
+  },
+  {
+   "cell_type": "markdown",
+   "source": [
+    "* 训练"
+   ],
+   "metadata": {
+    "collapsed": false
+   },
+   "id": "cae9e09b5f9ba7b9"
+  },
+  {
+   "cell_type": "code",
+   "outputs": [
+    {
+     "data": {
+      "text/plain": "SVC()",
+      "text/html": "<style>#sk-container-id-13 {\n  /* Definition of color scheme common for light and dark mode */\n  --sklearn-color-text: black;\n  --sklearn-color-line: gray;\n  /* Definition of color scheme for unfitted estimators */\n  --sklearn-color-unfitted-level-0: #fff5e6;\n  --sklearn-color-unfitted-level-1: #f6e4d2;\n  --sklearn-color-unfitted-level-2: #ffe0b3;\n  --sklearn-color-unfitted-level-3: chocolate;\n  /* Definition of color scheme for fitted estimators */\n  --sklearn-color-fitted-level-0: #f0f8ff;\n  --sklearn-color-fitted-level-1: #d4ebff;\n  --sklearn-color-fitted-level-2: #b3dbfd;\n  --sklearn-color-fitted-level-3: cornflowerblue;\n\n  /* Specific color for light theme */\n  --sklearn-color-text-on-default-background: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, black)));\n  --sklearn-color-background: var(--sg-background-color, var(--theme-background, var(--jp-layout-color0, white)));\n  --sklearn-color-border-box: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, black)));\n  --sklearn-color-icon: #696969;\n\n  @media (prefers-color-scheme: dark) {\n    /* Redefinition of color scheme for dark theme */\n    --sklearn-color-text-on-default-background: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, white)));\n    --sklearn-color-background: var(--sg-background-color, var(--theme-background, var(--jp-layout-color0, #111)));\n    --sklearn-color-border-box: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, white)));\n    --sklearn-color-icon: #878787;\n  }\n}\n\n#sk-container-id-13 {\n  color: var(--sklearn-color-text);\n}\n\n#sk-container-id-13 pre {\n  padding: 0;\n}\n\n#sk-container-id-13 input.sk-hidden--visually {\n  border: 0;\n  clip: rect(1px 1px 1px 1px);\n  clip: rect(1px, 1px, 1px, 1px);\n  height: 1px;\n  margin: -1px;\n  overflow: hidden;\n  padding: 0;\n  position: absolute;\n  width: 1px;\n}\n\n#sk-container-id-13 div.sk-dashed-wrapped {\n  border: 1px dashed var(--sklearn-color-line);\n  margin: 0 0.4em 0.5em 0.4em;\n  box-sizing: border-box;\n  padding-bottom: 0.4em;\n  background-color: var(--sklearn-color-background);\n}\n\n#sk-container-id-13 div.sk-container {\n  /* jupyter's `normalize.less` sets `[hidden] { display: none; }`\n     but bootstrap.min.css set `[hidden] { display: none !important; }`\n     so we also need the `!important` here to be able to override the\n     default hidden behavior on the sphinx rendered scikit-learn.org.\n     See: https://github.com/scikit-learn/scikit-learn/issues/21755 */\n  display: inline-block !important;\n  position: relative;\n}\n\n#sk-container-id-13 div.sk-text-repr-fallback {\n  display: none;\n}\n\ndiv.sk-parallel-item,\ndiv.sk-serial,\ndiv.sk-item {\n  /* draw centered vertical line to link estimators */\n  background-image: linear-gradient(var(--sklearn-color-text-on-default-background), var(--sklearn-color-text-on-default-background));\n  background-size: 2px 100%;\n  background-repeat: no-repeat;\n  background-position: center center;\n}\n\n/* Parallel-specific style estimator block */\n\n#sk-container-id-13 div.sk-parallel-item::after {\n  content: \"\";\n  width: 100%;\n  border-bottom: 2px solid var(--sklearn-color-text-on-default-background);\n  flex-grow: 1;\n}\n\n#sk-container-id-13 div.sk-parallel {\n  display: flex;\n  align-items: stretch;\n  justify-content: center;\n  background-color: var(--sklearn-color-background);\n  position: relative;\n}\n\n#sk-container-id-13 div.sk-parallel-item {\n  display: flex;\n  flex-direction: column;\n}\n\n#sk-container-id-13 div.sk-parallel-item:first-child::after {\n  align-self: flex-end;\n  width: 50%;\n}\n\n#sk-container-id-13 div.sk-parallel-item:last-child::after {\n  align-self: flex-start;\n  width: 50%;\n}\n\n#sk-container-id-13 div.sk-parallel-item:only-child::after {\n  width: 0;\n}\n\n/* Serial-specific style estimator block */\n\n#sk-container-id-13 div.sk-serial {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  background-color: var(--sklearn-color-background);\n  padding-right: 1em;\n  padding-left: 1em;\n}\n\n\n/* Toggleable style: style used for estimator/Pipeline/ColumnTransformer box that is\nclickable and can be expanded/collapsed.\n- Pipeline and ColumnTransformer use this feature and define the default style\n- Estimators will overwrite some part of the style using the `sk-estimator` class\n*/\n\n/* Pipeline and ColumnTransformer style (default) */\n\n#sk-container-id-13 div.sk-toggleable {\n  /* Default theme specific background. It is overwritten whether we have a\n  specific estimator or a Pipeline/ColumnTransformer */\n  background-color: var(--sklearn-color-background);\n}\n\n/* Toggleable label */\n#sk-container-id-13 label.sk-toggleable__label {\n  cursor: pointer;\n  display: block;\n  width: 100%;\n  margin-bottom: 0;\n  padding: 0.5em;\n  box-sizing: border-box;\n  text-align: center;\n}\n\n#sk-container-id-13 label.sk-toggleable__label-arrow:before {\n  /* Arrow on the left of the label */\n  content: \"▸\";\n  float: left;\n  margin-right: 0.25em;\n  color: var(--sklearn-color-icon);\n}\n\n#sk-container-id-13 label.sk-toggleable__label-arrow:hover:before {\n  color: var(--sklearn-color-text);\n}\n\n/* Toggleable content - dropdown */\n\n#sk-container-id-13 div.sk-toggleable__content {\n  max-height: 0;\n  max-width: 0;\n  overflow: hidden;\n  text-align: left;\n  /* unfitted */\n  background-color: var(--sklearn-color-unfitted-level-0);\n}\n\n#sk-container-id-13 div.sk-toggleable__content.fitted {\n  /* fitted */\n  background-color: var(--sklearn-color-fitted-level-0);\n}\n\n#sk-container-id-13 div.sk-toggleable__content pre {\n  margin: 0.2em;\n  border-radius: 0.25em;\n  color: var(--sklearn-color-text);\n  /* unfitted */\n  background-color: var(--sklearn-color-unfitted-level-0);\n}\n\n#sk-container-id-13 div.sk-toggleable__content.fitted pre {\n  /* unfitted */\n  background-color: var(--sklearn-color-fitted-level-0);\n}\n\n#sk-container-id-13 input.sk-toggleable__control:checked~div.sk-toggleable__content {\n  /* Expand drop-down */\n  max-height: 200px;\n  max-width: 100%;\n  overflow: auto;\n}\n\n#sk-container-id-13 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {\n  content: \"▾\";\n}\n\n/* Pipeline/ColumnTransformer-specific style */\n\n#sk-container-id-13 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {\n  color: var(--sklearn-color-text);\n  background-color: var(--sklearn-color-unfitted-level-2);\n}\n\n#sk-container-id-13 div.sk-label.fitted input.sk-toggleable__control:checked~label.sk-toggleable__label {\n  background-color: var(--sklearn-color-fitted-level-2);\n}\n\n/* Estimator-specific style */\n\n/* Colorize estimator box */\n#sk-container-id-13 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {\n  /* unfitted */\n  background-color: var(--sklearn-color-unfitted-level-2);\n}\n\n#sk-container-id-13 div.sk-estimator.fitted input.sk-toggleable__control:checked~label.sk-toggleable__label {\n  /* fitted */\n  background-color: var(--sklearn-color-fitted-level-2);\n}\n\n#sk-container-id-13 div.sk-label label.sk-toggleable__label,\n#sk-container-id-13 div.sk-label label {\n  /* The background is the default theme color */\n  color: var(--sklearn-color-text-on-default-background);\n}\n\n/* On hover, darken the color of the background */\n#sk-container-id-13 div.sk-label:hover label.sk-toggleable__label {\n  color: var(--sklearn-color-text);\n  background-color: var(--sklearn-color-unfitted-level-2);\n}\n\n/* Label box, darken color on hover, fitted */\n#sk-container-id-13 div.sk-label.fitted:hover label.sk-toggleable__label.fitted {\n  color: var(--sklearn-color-text);\n  background-color: var(--sklearn-color-fitted-level-2);\n}\n\n/* Estimator label */\n\n#sk-container-id-13 div.sk-label label {\n  font-family: monospace;\n  font-weight: bold;\n  display: inline-block;\n  line-height: 1.2em;\n}\n\n#sk-container-id-13 div.sk-label-container {\n  text-align: center;\n}\n\n/* Estimator-specific */\n#sk-container-id-13 div.sk-estimator {\n  font-family: monospace;\n  border: 1px dotted var(--sklearn-color-border-box);\n  border-radius: 0.25em;\n  box-sizing: border-box;\n  margin-bottom: 0.5em;\n  /* unfitted */\n  background-color: var(--sklearn-color-unfitted-level-0);\n}\n\n#sk-container-id-13 div.sk-estimator.fitted {\n  /* fitted */\n  background-color: var(--sklearn-color-fitted-level-0);\n}\n\n/* on hover */\n#sk-container-id-13 div.sk-estimator:hover {\n  /* unfitted */\n  background-color: var(--sklearn-color-unfitted-level-2);\n}\n\n#sk-container-id-13 div.sk-estimator.fitted:hover {\n  /* fitted */\n  background-color: var(--sklearn-color-fitted-level-2);\n}\n\n/* Specification for estimator info (e.g. \"i\" and \"?\") */\n\n/* Common style for \"i\" and \"?\" */\n\n.sk-estimator-doc-link,\na:link.sk-estimator-doc-link,\na:visited.sk-estimator-doc-link {\n  float: right;\n  font-size: smaller;\n  line-height: 1em;\n  font-family: monospace;\n  background-color: var(--sklearn-color-background);\n  border-radius: 1em;\n  height: 1em;\n  width: 1em;\n  text-decoration: none !important;\n  margin-left: 1ex;\n  /* unfitted */\n  border: var(--sklearn-color-unfitted-level-1) 1pt solid;\n  color: var(--sklearn-color-unfitted-level-1);\n}\n\n.sk-estimator-doc-link.fitted,\na:link.sk-estimator-doc-link.fitted,\na:visited.sk-estimator-doc-link.fitted {\n  /* fitted */\n  border: var(--sklearn-color-fitted-level-1) 1pt solid;\n  color: var(--sklearn-color-fitted-level-1);\n}\n\n/* On hover */\ndiv.sk-estimator:hover .sk-estimator-doc-link:hover,\n.sk-estimator-doc-link:hover,\ndiv.sk-label-container:hover .sk-estimator-doc-link:hover,\n.sk-estimator-doc-link:hover {\n  /* unfitted */\n  background-color: var(--sklearn-color-unfitted-level-3);\n  color: var(--sklearn-color-background);\n  text-decoration: none;\n}\n\ndiv.sk-estimator.fitted:hover .sk-estimator-doc-link.fitted:hover,\n.sk-estimator-doc-link.fitted:hover,\ndiv.sk-label-container:hover .sk-estimator-doc-link.fitted:hover,\n.sk-estimator-doc-link.fitted:hover {\n  /* fitted */\n  background-color: var(--sklearn-color-fitted-level-3);\n  color: var(--sklearn-color-background);\n  text-decoration: none;\n}\n\n/* Span, style for the box shown on hovering the info icon */\n.sk-estimator-doc-link span {\n  display: none;\n  z-index: 9999;\n  position: relative;\n  font-weight: normal;\n  right: .2ex;\n  padding: .5ex;\n  margin: .5ex;\n  width: min-content;\n  min-width: 20ex;\n  max-width: 50ex;\n  color: var(--sklearn-color-text);\n  box-shadow: 2pt 2pt 4pt #999;\n  /* unfitted */\n  background: var(--sklearn-color-unfitted-level-0);\n  border: .5pt solid var(--sklearn-color-unfitted-level-3);\n}\n\n.sk-estimator-doc-link.fitted span {\n  /* fitted */\n  background: var(--sklearn-color-fitted-level-0);\n  border: var(--sklearn-color-fitted-level-3);\n}\n\n.sk-estimator-doc-link:hover span {\n  display: block;\n}\n\n/* \"?\"-specific style due to the `<a>` HTML tag */\n\n#sk-container-id-13 a.estimator_doc_link {\n  float: right;\n  font-size: 1rem;\n  line-height: 1em;\n  font-family: monospace;\n  background-color: var(--sklearn-color-background);\n  border-radius: 1rem;\n  height: 1rem;\n  width: 1rem;\n  text-decoration: none;\n  /* unfitted */\n  color: var(--sklearn-color-unfitted-level-1);\n  border: var(--sklearn-color-unfitted-level-1) 1pt solid;\n}\n\n#sk-container-id-13 a.estimator_doc_link.fitted {\n  /* fitted */\n  border: var(--sklearn-color-fitted-level-1) 1pt solid;\n  color: var(--sklearn-color-fitted-level-1);\n}\n\n/* On hover */\n#sk-container-id-13 a.estimator_doc_link:hover {\n  /* unfitted */\n  background-color: var(--sklearn-color-unfitted-level-3);\n  color: var(--sklearn-color-background);\n  text-decoration: none;\n}\n\n#sk-container-id-13 a.estimator_doc_link.fitted:hover {\n  /* fitted */\n  background-color: var(--sklearn-color-fitted-level-3);\n}\n</style><div id=\"sk-container-id-13\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>SVC()</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item\"><div class=\"sk-estimator fitted sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-13\" type=\"checkbox\" checked><label for=\"sk-estimator-id-13\" class=\"sk-toggleable__label fitted sk-toggleable__label-arrow fitted\">&nbsp;&nbsp;SVC<a class=\"sk-estimator-doc-link fitted\" rel=\"noreferrer\" target=\"_blank\" href=\"https://scikit-learn.org/1.4/modules/generated/sklearn.svm.SVC.html\">?<span>Documentation for SVC</span></a><span class=\"sk-estimator-doc-link fitted\">i<span>Fitted</span></span></label><div class=\"sk-toggleable__content fitted\"><pre>SVC()</pre></div> </div></div></div></div>"
+     },
+     "execution_count": 73,
+     "metadata": {},
+     "output_type": "execute_result"
+    }
+   ],
+   "source": [
+    "clf.fit(iris_x_train,iris_y_train)"
+   ],
+   "metadata": {
+    "collapsed": false,
+    "ExecuteTime": {
+     "end_time": "2024-07-14T13:06:27.078273100Z",
+     "start_time": "2024-07-14T13:06:26.927970600Z"
+    }
+   },
+   "id": "c28d49044d16719b",
+   "execution_count": 73
+  },
+  {
+   "cell_type": "markdown",
+   "source": [
+    "* 预测"
+   ],
+   "metadata": {
+    "collapsed": false
+   },
+   "id": "ac50a7bca0b10f4e"
+  },
+  {
+   "cell_type": "code",
+   "outputs": [
+    {
+     "name": "stdout",
+     "output_type": "stream",
+     "text": [
+      "[2 1 0 0 0 1 2 2 0 1 0 2 1 2 1 1 1 2 0 2 1 2 0 0 2 0 1 0 2 0]\n",
+      "[2 1 0 0 0 1 2 2 0 2 0 2 1 2 1 1 2 2 0 2 1 2 0 0 2 0 1 0 2 0]\n"
+     ]
+    }
+   ],
+   "source": [
+    "res=clf.predict(iris_x_test)\n",
+    "print(res)\n",
+    "print(iris_y_test.values)"
+   ],
+   "metadata": {
+    "collapsed": false,
+    "ExecuteTime": {
+     "end_time": "2024-07-14T13:07:38.380049300Z",
+     "start_time": "2024-07-14T13:07:38.327026200Z"
+    }
+   },
+   "id": "36aa613e851fe7f6",
+   "execution_count": 78
+  },
+  {
+   "cell_type": "markdown",
+   "source": [
+    "* 评估"
+   ],
+   "metadata": {
+    "collapsed": false
+   },
+   "id": "4016d3b088d8e257"
+  },
+  {
+   "cell_type": "code",
+   "outputs": [
+    {
+     "name": "stdout",
+     "output_type": "stream",
+     "text": [
+      "预测正确率：93%\n"
+     ]
+    }
+   ],
+   "source": [
+    "accuracy=clf.score(iris_x_test,iris_y_test)\n",
+    "print(f\"预测正确率：{accuracy:.0%}\")"
+   ],
+   "metadata": {
+    "collapsed": false,
+    "ExecuteTime": {
+     "end_time": "2024-07-14T13:07:50.102348900Z",
+     "start_time": "2024-07-14T13:07:50.039674200Z"
+    }
+   },
+   "id": "ad5dca2e49d6bcd9",
+   "execution_count": 79
+  },
+  {
+   "cell_type": "markdown",
+   "source": [
+    "### 6.3可视化"
+   ],
+   "metadata": {
+    "collapsed": false
+   },
+   "id": "179d7ad0fd91ac76"
+  },
+  {
+   "cell_type": "code",
+   "outputs": [
+    {
+     "name": "stderr",
+     "output_type": "stream",
+     "text": [
+      "D:\\app\\anaconda3\\envs\\ai\\lib\\site-packages\\sklearn\\base.py:493: UserWarning: X does not have valid feature names, but SVC was fitted with feature names\n",
+      "  warnings.warn(\n",
+      "C:\\Users\\Lenovo\\AppData\\Local\\Temp\\ipykernel_1968\\2867276073.py:24: MatplotlibDeprecationWarning: shading='flat' when X and Y have the same dimensions as C is deprecated since 3.3.  Either specify the corners of the quadrilaterals with X and Y, or pass shading='auto', 'nearest' or 'gouraud', or set rcParams['pcolor.shading'].  This will become an error two minor releases later.\n",
+      "  plt.pcolormesh(t1,t2,y_predict.reshape(x1.shape),cmap=cm_light)\n"
+     ]
+    },
+    {
+     "data": {
+      "text/plain": "<Figure size 1000x600 with 1 Axes>",
+      "image/png": ""
+     },
+     "metadata": {},
+     "output_type": "display_data"
+    }
+   ],
+   "source": [
+    "draw(clf)"
+   ],
+   "metadata": {
+    "collapsed": false,
+    "ExecuteTime": {
+     "end_time": "2024-07-14T13:08:07.827428900Z",
+     "start_time": "2024-07-14T13:08:06.050588600Z"
+    }
+   },
+   "id": "2d15f3dcf39924b4",
+   "execution_count": 80
+  },
+  {
+   "cell_type": "markdown",
+   "source": [
+    "## 7.集成方法——随机森林\n",
+    "### 7.1基本思想\n",
+    "**训练集m，有放回的随机抽取m个数据，构成一组，共抽取n组采样集\n",
+    "n组采样集训练得到n个弱分类器，弱分类器一般用决策树或神经网络\n",
+    "将n个弱分类器进行组合得到强分类器**\n",
+    "### 7.2sklearn实现"
+   ],
+   "metadata": {
+    "collapsed": false
+   },
+   "id": "623dd6d0a1780165"
+  },
+  {
+   "cell_type": "code",
+   "outputs": [],
+   "source": [
+    "from sklearn.ensemble import RandomForestClassifier"
+   ],
+   "metadata": {
+    "collapsed": false,
+    "ExecuteTime": {
+     "end_time": "2024-07-14T13:11:32.682547500Z",
+     "start_time": "2024-07-14T13:11:32.607544700Z"
+    }
+   },
+   "id": "19fc79144de730f0",
+   "execution_count": 81
+  },
+  {
+   "cell_type": "markdown",
+   "source": [
+    "* 构建分类器对象"
+   ],
+   "metadata": {
+    "collapsed": false
+   },
+   "id": "64a72383ddcf2ed"
+  },
+  {
+   "cell_type": "code",
+   "outputs": [
+    {
+     "data": {
+      "text/plain": "RandomForestClassifier()",
+      "text/html": "<style>#sk-container-id-14 {\n  /* Definition of color scheme common for light and dark mode */\n  --sklearn-color-text: black;\n  --sklearn-color-line: gray;\n  /* Definition of color scheme for unfitted estimators */\n  --sklearn-color-unfitted-level-0: #fff5e6;\n  --sklearn-color-unfitted-level-1: #f6e4d2;\n  --sklearn-color-unfitted-level-2: #ffe0b3;\n  --sklearn-color-unfitted-level-3: chocolate;\n  /* Definition of color scheme for fitted estimators */\n  --sklearn-color-fitted-level-0: #f0f8ff;\n  --sklearn-color-fitted-level-1: #d4ebff;\n  --sklearn-color-fitted-level-2: #b3dbfd;\n  --sklearn-color-fitted-level-3: cornflowerblue;\n\n  /* Specific color for light theme */\n  --sklearn-color-text-on-default-background: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, black)));\n  --sklearn-color-background: var(--sg-background-color, var(--theme-background, var(--jp-layout-color0, white)));\n  --sklearn-color-border-box: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, black)));\n  --sklearn-color-icon: #696969;\n\n  @media (prefers-color-scheme: dark) {\n    /* Redefinition of color scheme for dark theme */\n    --sklearn-color-text-on-default-background: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, white)));\n    --sklearn-color-background: var(--sg-background-color, var(--theme-background, var(--jp-layout-color0, #111)));\n    --sklearn-color-border-box: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, white)));\n    --sklearn-color-icon: #878787;\n  }\n}\n\n#sk-container-id-14 {\n  color: var(--sklearn-color-text);\n}\n\n#sk-container-id-14 pre {\n  padding: 0;\n}\n\n#sk-container-id-14 input.sk-hidden--visually {\n  border: 0;\n  clip: rect(1px 1px 1px 1px);\n  clip: rect(1px, 1px, 1px, 1px);\n  height: 1px;\n  margin: -1px;\n  overflow: hidden;\n  padding: 0;\n  position: absolute;\n  width: 1px;\n}\n\n#sk-container-id-14 div.sk-dashed-wrapped {\n  border: 1px dashed var(--sklearn-color-line);\n  margin: 0 0.4em 0.5em 0.4em;\n  box-sizing: border-box;\n  padding-bottom: 0.4em;\n  background-color: var(--sklearn-color-background);\n}\n\n#sk-container-id-14 div.sk-container {\n  /* jupyter's `normalize.less` sets `[hidden] { display: none; }`\n     but bootstrap.min.css set `[hidden] { display: none !important; }`\n     so we also need the `!important` here to be able to override the\n     default hidden behavior on the sphinx rendered scikit-learn.org.\n     See: https://github.com/scikit-learn/scikit-learn/issues/21755 */\n  display: inline-block !important;\n  position: relative;\n}\n\n#sk-container-id-14 div.sk-text-repr-fallback {\n  display: none;\n}\n\ndiv.sk-parallel-item,\ndiv.sk-serial,\ndiv.sk-item {\n  /* draw centered vertical line to link estimators */\n  background-image: linear-gradient(var(--sklearn-color-text-on-default-background), var(--sklearn-color-text-on-default-background));\n  background-size: 2px 100%;\n  background-repeat: no-repeat;\n  background-position: center center;\n}\n\n/* Parallel-specific style estimator block */\n\n#sk-container-id-14 div.sk-parallel-item::after {\n  content: \"\";\n  width: 100%;\n  border-bottom: 2px solid var(--sklearn-color-text-on-default-background);\n  flex-grow: 1;\n}\n\n#sk-container-id-14 div.sk-parallel {\n  display: flex;\n  align-items: stretch;\n  justify-content: center;\n  background-color: var(--sklearn-color-background);\n  position: relative;\n}\n\n#sk-container-id-14 div.sk-parallel-item {\n  display: flex;\n  flex-direction: column;\n}\n\n#sk-container-id-14 div.sk-parallel-item:first-child::after {\n  align-self: flex-end;\n  width: 50%;\n}\n\n#sk-container-id-14 div.sk-parallel-item:last-child::after {\n  align-self: flex-start;\n  width: 50%;\n}\n\n#sk-container-id-14 div.sk-parallel-item:only-child::after {\n  width: 0;\n}\n\n/* Serial-specific style estimator block */\n\n#sk-container-id-14 div.sk-serial {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  background-color: var(--sklearn-color-background);\n  padding-right: 1em;\n  padding-left: 1em;\n}\n\n\n/* Toggleable style: style used for estimator/Pipeline/ColumnTransformer box that is\nclickable and can be expanded/collapsed.\n- Pipeline and ColumnTransformer use this feature and define the default style\n- Estimators will overwrite some part of the style using the `sk-estimator` class\n*/\n\n/* Pipeline and ColumnTransformer style (default) */\n\n#sk-container-id-14 div.sk-toggleable {\n  /* Default theme specific background. It is overwritten whether we have a\n  specific estimator or a Pipeline/ColumnTransformer */\n  background-color: var(--sklearn-color-background);\n}\n\n/* Toggleable label */\n#sk-container-id-14 label.sk-toggleable__label {\n  cursor: pointer;\n  display: block;\n  width: 100%;\n  margin-bottom: 0;\n  padding: 0.5em;\n  box-sizing: border-box;\n  text-align: center;\n}\n\n#sk-container-id-14 label.sk-toggleable__label-arrow:before {\n  /* Arrow on the left of the label */\n  content: \"▸\";\n  float: left;\n  margin-right: 0.25em;\n  color: var(--sklearn-color-icon);\n}\n\n#sk-container-id-14 label.sk-toggleable__label-arrow:hover:before {\n  color: var(--sklearn-color-text);\n}\n\n/* Toggleable content - dropdown */\n\n#sk-container-id-14 div.sk-toggleable__content {\n  max-height: 0;\n  max-width: 0;\n  overflow: hidden;\n  text-align: left;\n  /* unfitted */\n  background-color: var(--sklearn-color-unfitted-level-0);\n}\n\n#sk-container-id-14 div.sk-toggleable__content.fitted {\n  /* fitted */\n  background-color: var(--sklearn-color-fitted-level-0);\n}\n\n#sk-container-id-14 div.sk-toggleable__content pre {\n  margin: 0.2em;\n  border-radius: 0.25em;\n  color: var(--sklearn-color-text);\n  /* unfitted */\n  background-color: var(--sklearn-color-unfitted-level-0);\n}\n\n#sk-container-id-14 div.sk-toggleable__content.fitted pre {\n  /* unfitted */\n  background-color: var(--sklearn-color-fitted-level-0);\n}\n\n#sk-container-id-14 input.sk-toggleable__control:checked~div.sk-toggleable__content {\n  /* Expand drop-down */\n  max-height: 200px;\n  max-width: 100%;\n  overflow: auto;\n}\n\n#sk-container-id-14 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {\n  content: \"▾\";\n}\n\n/* Pipeline/ColumnTransformer-specific style */\n\n#sk-container-id-14 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {\n  color: var(--sklearn-color-text);\n  background-color: var(--sklearn-color-unfitted-level-2);\n}\n\n#sk-container-id-14 div.sk-label.fitted input.sk-toggleable__control:checked~label.sk-toggleable__label {\n  background-color: var(--sklearn-color-fitted-level-2);\n}\n\n/* Estimator-specific style */\n\n/* Colorize estimator box */\n#sk-container-id-14 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {\n  /* unfitted */\n  background-color: var(--sklearn-color-unfitted-level-2);\n}\n\n#sk-container-id-14 div.sk-estimator.fitted input.sk-toggleable__control:checked~label.sk-toggleable__label {\n  /* fitted */\n  background-color: var(--sklearn-color-fitted-level-2);\n}\n\n#sk-container-id-14 div.sk-label label.sk-toggleable__label,\n#sk-container-id-14 div.sk-label label {\n  /* The background is the default theme color */\n  color: var(--sklearn-color-text-on-default-background);\n}\n\n/* On hover, darken the color of the background */\n#sk-container-id-14 div.sk-label:hover label.sk-toggleable__label {\n  color: var(--sklearn-color-text);\n  background-color: var(--sklearn-color-unfitted-level-2);\n}\n\n/* Label box, darken color on hover, fitted */\n#sk-container-id-14 div.sk-label.fitted:hover label.sk-toggleable__label.fitted {\n  color: var(--sklearn-color-text);\n  background-color: var(--sklearn-color-fitted-level-2);\n}\n\n/* Estimator label */\n\n#sk-container-id-14 div.sk-label label {\n  font-family: monospace;\n  font-weight: bold;\n  display: inline-block;\n  line-height: 1.2em;\n}\n\n#sk-container-id-14 div.sk-label-container {\n  text-align: center;\n}\n\n/* Estimator-specific */\n#sk-container-id-14 div.sk-estimator {\n  font-family: monospace;\n  border: 1px dotted var(--sklearn-color-border-box);\n  border-radius: 0.25em;\n  box-sizing: border-box;\n  margin-bottom: 0.5em;\n  /* unfitted */\n  background-color: var(--sklearn-color-unfitted-level-0);\n}\n\n#sk-container-id-14 div.sk-estimator.fitted {\n  /* fitted */\n  background-color: var(--sklearn-color-fitted-level-0);\n}\n\n/* on hover */\n#sk-container-id-14 div.sk-estimator:hover {\n  /* unfitted */\n  background-color: var(--sklearn-color-unfitted-level-2);\n}\n\n#sk-container-id-14 div.sk-estimator.fitted:hover {\n  /* fitted */\n  background-color: var(--sklearn-color-fitted-level-2);\n}\n\n/* Specification for estimator info (e.g. \"i\" and \"?\") */\n\n/* Common style for \"i\" and \"?\" */\n\n.sk-estimator-doc-link,\na:link.sk-estimator-doc-link,\na:visited.sk-estimator-doc-link {\n  float: right;\n  font-size: smaller;\n  line-height: 1em;\n  font-family: monospace;\n  background-color: var(--sklearn-color-background);\n  border-radius: 1em;\n  height: 1em;\n  width: 1em;\n  text-decoration: none !important;\n  margin-left: 1ex;\n  /* unfitted */\n  border: var(--sklearn-color-unfitted-level-1) 1pt solid;\n  color: var(--sklearn-color-unfitted-level-1);\n}\n\n.sk-estimator-doc-link.fitted,\na:link.sk-estimator-doc-link.fitted,\na:visited.sk-estimator-doc-link.fitted {\n  /* fitted */\n  border: var(--sklearn-color-fitted-level-1) 1pt solid;\n  color: var(--sklearn-color-fitted-level-1);\n}\n\n/* On hover */\ndiv.sk-estimator:hover .sk-estimator-doc-link:hover,\n.sk-estimator-doc-link:hover,\ndiv.sk-label-container:hover .sk-estimator-doc-link:hover,\n.sk-estimator-doc-link:hover {\n  /* unfitted */\n  background-color: var(--sklearn-color-unfitted-level-3);\n  color: var(--sklearn-color-background);\n  text-decoration: none;\n}\n\ndiv.sk-estimator.fitted:hover .sk-estimator-doc-link.fitted:hover,\n.sk-estimator-doc-link.fitted:hover,\ndiv.sk-label-container:hover .sk-estimator-doc-link.fitted:hover,\n.sk-estimator-doc-link.fitted:hover {\n  /* fitted */\n  background-color: var(--sklearn-color-fitted-level-3);\n  color: var(--sklearn-color-background);\n  text-decoration: none;\n}\n\n/* Span, style for the box shown on hovering the info icon */\n.sk-estimator-doc-link span {\n  display: none;\n  z-index: 9999;\n  position: relative;\n  font-weight: normal;\n  right: .2ex;\n  padding: .5ex;\n  margin: .5ex;\n  width: min-content;\n  min-width: 20ex;\n  max-width: 50ex;\n  color: var(--sklearn-color-text);\n  box-shadow: 2pt 2pt 4pt #999;\n  /* unfitted */\n  background: var(--sklearn-color-unfitted-level-0);\n  border: .5pt solid var(--sklearn-color-unfitted-level-3);\n}\n\n.sk-estimator-doc-link.fitted span {\n  /* fitted */\n  background: var(--sklearn-color-fitted-level-0);\n  border: var(--sklearn-color-fitted-level-3);\n}\n\n.sk-estimator-doc-link:hover span {\n  display: block;\n}\n\n/* \"?\"-specific style due to the `<a>` HTML tag */\n\n#sk-container-id-14 a.estimator_doc_link {\n  float: right;\n  font-size: 1rem;\n  line-height: 1em;\n  font-family: monospace;\n  background-color: var(--sklearn-color-background);\n  border-radius: 1rem;\n  height: 1rem;\n  width: 1rem;\n  text-decoration: none;\n  /* unfitted */\n  color: var(--sklearn-color-unfitted-level-1);\n  border: var(--sklearn-color-unfitted-level-1) 1pt solid;\n}\n\n#sk-container-id-14 a.estimator_doc_link.fitted {\n  /* fitted */\n  border: var(--sklearn-color-fitted-level-1) 1pt solid;\n  color: var(--sklearn-color-fitted-level-1);\n}\n\n/* On hover */\n#sk-container-id-14 a.estimator_doc_link:hover {\n  /* unfitted */\n  background-color: var(--sklearn-color-unfitted-level-3);\n  color: var(--sklearn-color-background);\n  text-decoration: none;\n}\n\n#sk-container-id-14 a.estimator_doc_link.fitted:hover {\n  /* fitted */\n  background-color: var(--sklearn-color-fitted-level-3);\n}\n</style><div id=\"sk-container-id-14\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>RandomForestClassifier()</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item\"><div class=\"sk-estimator  sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-14\" type=\"checkbox\" checked><label for=\"sk-estimator-id-14\" class=\"sk-toggleable__label  sk-toggleable__label-arrow \">&nbsp;&nbsp;RandomForestClassifier<a class=\"sk-estimator-doc-link \" rel=\"noreferrer\" target=\"_blank\" href=\"https://scikit-learn.org/1.4/modules/generated/sklearn.ensemble.RandomForestClassifier.html\">?<span>Documentation for RandomForestClassifier</span></a><span class=\"sk-estimator-doc-link \">i<span>Not fitted</span></span></label><div class=\"sk-toggleable__content \"><pre>RandomForestClassifier()</pre></div> </div></div></div></div>"
+     },
+     "execution_count": 83,
+     "metadata": {},
+     "output_type": "execute_result"
+    }
+   ],
+   "source": [
+    "clf=RandomForestClassifier()\n",
+    "clf"
+   ],
+   "metadata": {
+    "collapsed": false,
+    "ExecuteTime": {
+     "end_time": "2024-07-14T13:11:56.064186300Z",
+     "start_time": "2024-07-14T13:11:56.000674800Z"
+    }
+   },
+   "id": "2e7385a005d7d84c",
+   "execution_count": 83
+  },
+  {
+   "cell_type": "markdown",
+   "source": [
+    "* 训练"
+   ],
+   "metadata": {
+    "collapsed": false
+   },
+   "id": "c493b7720207bf88"
+  },
+  {
+   "cell_type": "code",
+   "outputs": [
+    {
+     "data": {
+      "text/plain": "RandomForestClassifier()",
+      "text/html": "<style>#sk-container-id-15 {\n  /* Definition of color scheme common for light and dark mode */\n  --sklearn-color-text: black;\n  --sklearn-color-line: gray;\n  /* Definition of color scheme for unfitted estimators */\n  --sklearn-color-unfitted-level-0: #fff5e6;\n  --sklearn-color-unfitted-level-1: #f6e4d2;\n  --sklearn-color-unfitted-level-2: #ffe0b3;\n  --sklearn-color-unfitted-level-3: chocolate;\n  /* Definition of color scheme for fitted estimators */\n  --sklearn-color-fitted-level-0: #f0f8ff;\n  --sklearn-color-fitted-level-1: #d4ebff;\n  --sklearn-color-fitted-level-2: #b3dbfd;\n  --sklearn-color-fitted-level-3: cornflowerblue;\n\n  /* Specific color for light theme */\n  --sklearn-color-text-on-default-background: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, black)));\n  --sklearn-color-background: var(--sg-background-color, var(--theme-background, var(--jp-layout-color0, white)));\n  --sklearn-color-border-box: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, black)));\n  --sklearn-color-icon: #696969;\n\n  @media (prefers-color-scheme: dark) {\n    /* Redefinition of color scheme for dark theme */\n    --sklearn-color-text-on-default-background: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, white)));\n    --sklearn-color-background: var(--sg-background-color, var(--theme-background, var(--jp-layout-color0, #111)));\n    --sklearn-color-border-box: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, white)));\n    --sklearn-color-icon: #878787;\n  }\n}\n\n#sk-container-id-15 {\n  color: var(--sklearn-color-text);\n}\n\n#sk-container-id-15 pre {\n  padding: 0;\n}\n\n#sk-container-id-15 input.sk-hidden--visually {\n  border: 0;\n  clip: rect(1px 1px 1px 1px);\n  clip: rect(1px, 1px, 1px, 1px);\n  height: 1px;\n  margin: -1px;\n  overflow: hidden;\n  padding: 0;\n  position: absolute;\n  width: 1px;\n}\n\n#sk-container-id-15 div.sk-dashed-wrapped {\n  border: 1px dashed var(--sklearn-color-line);\n  margin: 0 0.4em 0.5em 0.4em;\n  box-sizing: border-box;\n  padding-bottom: 0.4em;\n  background-color: var(--sklearn-color-background);\n}\n\n#sk-container-id-15 div.sk-container {\n  /* jupyter's `normalize.less` sets `[hidden] { display: none; }`\n     but bootstrap.min.css set `[hidden] { display: none !important; }`\n     so we also need the `!important` here to be able to override the\n     default hidden behavior on the sphinx rendered scikit-learn.org.\n     See: https://github.com/scikit-learn/scikit-learn/issues/21755 */\n  display: inline-block !important;\n  position: relative;\n}\n\n#sk-container-id-15 div.sk-text-repr-fallback {\n  display: none;\n}\n\ndiv.sk-parallel-item,\ndiv.sk-serial,\ndiv.sk-item {\n  /* draw centered vertical line to link estimators */\n  background-image: linear-gradient(var(--sklearn-color-text-on-default-background), var(--sklearn-color-text-on-default-background));\n  background-size: 2px 100%;\n  background-repeat: no-repeat;\n  background-position: center center;\n}\n\n/* Parallel-specific style estimator block */\n\n#sk-container-id-15 div.sk-parallel-item::after {\n  content: \"\";\n  width: 100%;\n  border-bottom: 2px solid var(--sklearn-color-text-on-default-background);\n  flex-grow: 1;\n}\n\n#sk-container-id-15 div.sk-parallel {\n  display: flex;\n  align-items: stretch;\n  justify-content: center;\n  background-color: var(--sklearn-color-background);\n  position: relative;\n}\n\n#sk-container-id-15 div.sk-parallel-item {\n  display: flex;\n  flex-direction: column;\n}\n\n#sk-container-id-15 div.sk-parallel-item:first-child::after {\n  align-self: flex-end;\n  width: 50%;\n}\n\n#sk-container-id-15 div.sk-parallel-item:last-child::after {\n  align-self: flex-start;\n  width: 50%;\n}\n\n#sk-container-id-15 div.sk-parallel-item:only-child::after {\n  width: 0;\n}\n\n/* Serial-specific style estimator block */\n\n#sk-container-id-15 div.sk-serial {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  background-color: var(--sklearn-color-background);\n  padding-right: 1em;\n  padding-left: 1em;\n}\n\n\n/* Toggleable style: style used for estimator/Pipeline/ColumnTransformer box that is\nclickable and can be expanded/collapsed.\n- Pipeline and ColumnTransformer use this feature and define the default style\n- Estimators will overwrite some part of the style using the `sk-estimator` class\n*/\n\n/* Pipeline and ColumnTransformer style (default) */\n\n#sk-container-id-15 div.sk-toggleable {\n  /* Default theme specific background. It is overwritten whether we have a\n  specific estimator or a Pipeline/ColumnTransformer */\n  background-color: var(--sklearn-color-background);\n}\n\n/* Toggleable label */\n#sk-container-id-15 label.sk-toggleable__label {\n  cursor: pointer;\n  display: block;\n  width: 100%;\n  margin-bottom: 0;\n  padding: 0.5em;\n  box-sizing: border-box;\n  text-align: center;\n}\n\n#sk-container-id-15 label.sk-toggleable__label-arrow:before {\n  /* Arrow on the left of the label */\n  content: \"▸\";\n  float: left;\n  margin-right: 0.25em;\n  color: var(--sklearn-color-icon);\n}\n\n#sk-container-id-15 label.sk-toggleable__label-arrow:hover:before {\n  color: var(--sklearn-color-text);\n}\n\n/* Toggleable content - dropdown */\n\n#sk-container-id-15 div.sk-toggleable__content {\n  max-height: 0;\n  max-width: 0;\n  overflow: hidden;\n  text-align: left;\n  /* unfitted */\n  background-color: var(--sklearn-color-unfitted-level-0);\n}\n\n#sk-container-id-15 div.sk-toggleable__content.fitted {\n  /* fitted */\n  background-color: var(--sklearn-color-fitted-level-0);\n}\n\n#sk-container-id-15 div.sk-toggleable__content pre {\n  margin: 0.2em;\n  border-radius: 0.25em;\n  color: var(--sklearn-color-text);\n  /* unfitted */\n  background-color: var(--sklearn-color-unfitted-level-0);\n}\n\n#sk-container-id-15 div.sk-toggleable__content.fitted pre {\n  /* unfitted */\n  background-color: var(--sklearn-color-fitted-level-0);\n}\n\n#sk-container-id-15 input.sk-toggleable__control:checked~div.sk-toggleable__content {\n  /* Expand drop-down */\n  max-height: 200px;\n  max-width: 100%;\n  overflow: auto;\n}\n\n#sk-container-id-15 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {\n  content: \"▾\";\n}\n\n/* Pipeline/ColumnTransformer-specific style */\n\n#sk-container-id-15 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {\n  color: var(--sklearn-color-text);\n  background-color: var(--sklearn-color-unfitted-level-2);\n}\n\n#sk-container-id-15 div.sk-label.fitted input.sk-toggleable__control:checked~label.sk-toggleable__label {\n  background-color: var(--sklearn-color-fitted-level-2);\n}\n\n/* Estimator-specific style */\n\n/* Colorize estimator box */\n#sk-container-id-15 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {\n  /* unfitted */\n  background-color: var(--sklearn-color-unfitted-level-2);\n}\n\n#sk-container-id-15 div.sk-estimator.fitted input.sk-toggleable__control:checked~label.sk-toggleable__label {\n  /* fitted */\n  background-color: var(--sklearn-color-fitted-level-2);\n}\n\n#sk-container-id-15 div.sk-label label.sk-toggleable__label,\n#sk-container-id-15 div.sk-label label {\n  /* The background is the default theme color */\n  color: var(--sklearn-color-text-on-default-background);\n}\n\n/* On hover, darken the color of the background */\n#sk-container-id-15 div.sk-label:hover label.sk-toggleable__label {\n  color: var(--sklearn-color-text);\n  background-color: var(--sklearn-color-unfitted-level-2);\n}\n\n/* Label box, darken color on hover, fitted */\n#sk-container-id-15 div.sk-label.fitted:hover label.sk-toggleable__label.fitted {\n  color: var(--sklearn-color-text);\n  background-color: var(--sklearn-color-fitted-level-2);\n}\n\n/* Estimator label */\n\n#sk-container-id-15 div.sk-label label {\n  font-family: monospace;\n  font-weight: bold;\n  display: inline-block;\n  line-height: 1.2em;\n}\n\n#sk-container-id-15 div.sk-label-container {\n  text-align: center;\n}\n\n/* Estimator-specific */\n#sk-container-id-15 div.sk-estimator {\n  font-family: monospace;\n  border: 1px dotted var(--sklearn-color-border-box);\n  border-radius: 0.25em;\n  box-sizing: border-box;\n  margin-bottom: 0.5em;\n  /* unfitted */\n  background-color: var(--sklearn-color-unfitted-level-0);\n}\n\n#sk-container-id-15 div.sk-estimator.fitted {\n  /* fitted */\n  background-color: var(--sklearn-color-fitted-level-0);\n}\n\n/* on hover */\n#sk-container-id-15 div.sk-estimator:hover {\n  /* unfitted */\n  background-color: var(--sklearn-color-unfitted-level-2);\n}\n\n#sk-container-id-15 div.sk-estimator.fitted:hover {\n  /* fitted */\n  background-color: var(--sklearn-color-fitted-level-2);\n}\n\n/* Specification for estimator info (e.g. \"i\" and \"?\") */\n\n/* Common style for \"i\" and \"?\" */\n\n.sk-estimator-doc-link,\na:link.sk-estimator-doc-link,\na:visited.sk-estimator-doc-link {\n  float: right;\n  font-size: smaller;\n  line-height: 1em;\n  font-family: monospace;\n  background-color: var(--sklearn-color-background);\n  border-radius: 1em;\n  height: 1em;\n  width: 1em;\n  text-decoration: none !important;\n  margin-left: 1ex;\n  /* unfitted */\n  border: var(--sklearn-color-unfitted-level-1) 1pt solid;\n  color: var(--sklearn-color-unfitted-level-1);\n}\n\n.sk-estimator-doc-link.fitted,\na:link.sk-estimator-doc-link.fitted,\na:visited.sk-estimator-doc-link.fitted {\n  /* fitted */\n  border: var(--sklearn-color-fitted-level-1) 1pt solid;\n  color: var(--sklearn-color-fitted-level-1);\n}\n\n/* On hover */\ndiv.sk-estimator:hover .sk-estimator-doc-link:hover,\n.sk-estimator-doc-link:hover,\ndiv.sk-label-container:hover .sk-estimator-doc-link:hover,\n.sk-estimator-doc-link:hover {\n  /* unfitted */\n  background-color: var(--sklearn-color-unfitted-level-3);\n  color: var(--sklearn-color-background);\n  text-decoration: none;\n}\n\ndiv.sk-estimator.fitted:hover .sk-estimator-doc-link.fitted:hover,\n.sk-estimator-doc-link.fitted:hover,\ndiv.sk-label-container:hover .sk-estimator-doc-link.fitted:hover,\n.sk-estimator-doc-link.fitted:hover {\n  /* fitted */\n  background-color: var(--sklearn-color-fitted-level-3);\n  color: var(--sklearn-color-background);\n  text-decoration: none;\n}\n\n/* Span, style for the box shown on hovering the info icon */\n.sk-estimator-doc-link span {\n  display: none;\n  z-index: 9999;\n  position: relative;\n  font-weight: normal;\n  right: .2ex;\n  padding: .5ex;\n  margin: .5ex;\n  width: min-content;\n  min-width: 20ex;\n  max-width: 50ex;\n  color: var(--sklearn-color-text);\n  box-shadow: 2pt 2pt 4pt #999;\n  /* unfitted */\n  background: var(--sklearn-color-unfitted-level-0);\n  border: .5pt solid var(--sklearn-color-unfitted-level-3);\n}\n\n.sk-estimator-doc-link.fitted span {\n  /* fitted */\n  background: var(--sklearn-color-fitted-level-0);\n  border: var(--sklearn-color-fitted-level-3);\n}\n\n.sk-estimator-doc-link:hover span {\n  display: block;\n}\n\n/* \"?\"-specific style due to the `<a>` HTML tag */\n\n#sk-container-id-15 a.estimator_doc_link {\n  float: right;\n  font-size: 1rem;\n  line-height: 1em;\n  font-family: monospace;\n  background-color: var(--sklearn-color-background);\n  border-radius: 1rem;\n  height: 1rem;\n  width: 1rem;\n  text-decoration: none;\n  /* unfitted */\n  color: var(--sklearn-color-unfitted-level-1);\n  border: var(--sklearn-color-unfitted-level-1) 1pt solid;\n}\n\n#sk-container-id-15 a.estimator_doc_link.fitted {\n  /* fitted */\n  border: var(--sklearn-color-fitted-level-1) 1pt solid;\n  color: var(--sklearn-color-fitted-level-1);\n}\n\n/* On hover */\n#sk-container-id-15 a.estimator_doc_link:hover {\n  /* unfitted */\n  background-color: var(--sklearn-color-unfitted-level-3);\n  color: var(--sklearn-color-background);\n  text-decoration: none;\n}\n\n#sk-container-id-15 a.estimator_doc_link.fitted:hover {\n  /* fitted */\n  background-color: var(--sklearn-color-fitted-level-3);\n}\n</style><div id=\"sk-container-id-15\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>RandomForestClassifier()</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item\"><div class=\"sk-estimator fitted sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-15\" type=\"checkbox\" checked><label for=\"sk-estimator-id-15\" class=\"sk-toggleable__label fitted sk-toggleable__label-arrow fitted\">&nbsp;&nbsp;RandomForestClassifier<a class=\"sk-estimator-doc-link fitted\" rel=\"noreferrer\" target=\"_blank\" href=\"https://scikit-learn.org/1.4/modules/generated/sklearn.ensemble.RandomForestClassifier.html\">?<span>Documentation for RandomForestClassifier</span></a><span class=\"sk-estimator-doc-link fitted\">i<span>Fitted</span></span></label><div class=\"sk-toggleable__content fitted\"><pre>RandomForestClassifier()</pre></div> </div></div></div></div>"
+     },
+     "execution_count": 85,
+     "metadata": {},
+     "output_type": "execute_result"
+    }
+   ],
+   "source": [
+    "clf.fit(iris_x_train,iris_y_train)"
+   ],
+   "metadata": {
+    "collapsed": false,
+    "ExecuteTime": {
+     "end_time": "2024-07-14T13:12:59.646067500Z",
+     "start_time": "2024-07-14T13:12:59.595470400Z"
+    }
+   },
+   "id": "dafce61ebb2ef179",
+   "execution_count": 85
+  },
+  {
+   "cell_type": "markdown",
+   "source": [
+    "* 预测"
+   ],
+   "metadata": {
+    "collapsed": false
+   },
+   "id": "34b0f4f52a5ed28b"
+  },
+  {
+   "cell_type": "code",
+   "outputs": [
+    {
+     "name": "stdout",
+     "output_type": "stream",
+     "text": [
+      "[2 1 0 0 0 2 2 2 0 2 0 2 1 2 1 1 1 2 0 2 1 2 0 0 2 0 1 0 2 0]\n",
+      "[2 1 0 0 0 1 2 2 0 2 0 2 1 2 1 1 2 2 0 2 1 2 0 0 2 0 1 0 2 0]\n"
+     ]
+    }
+   ],
+   "source": [
+    "res=clf.predict(iris_x_test)\n",
+    "print(res)\n",
+    "print(iris_y_test.values)"
+   ],
+   "metadata": {
+    "collapsed": false,
+    "ExecuteTime": {
+     "end_time": "2024-07-14T13:13:28.571220600Z",
+     "start_time": "2024-07-14T13:13:28.508712Z"
+    }
+   },
+   "id": "df29c152795e1c79",
+   "execution_count": 86
+  },
+  {
+   "cell_type": "markdown",
+   "source": [
+    "* 评估"
+   ],
+   "metadata": {
+    "collapsed": false
+   },
+   "id": "8b6cb331e91141dd"
+  },
+  {
+   "cell_type": "code",
+   "outputs": [
+    {
+     "name": "stdout",
+     "output_type": "stream",
+     "text": [
+      "预测正确率：93%\n"
+     ]
+    }
+   ],
+   "source": [
+    "accuracy=clf.score(iris_x_test,iris_y_test)\n",
+    "print(f\"预测正确率：{accuracy:.0%}\")"
+   ],
+   "metadata": {
+    "collapsed": false,
+    "ExecuteTime": {
+     "end_time": "2024-07-14T13:13:38.829199900Z",
+     "start_time": "2024-07-14T13:13:38.799687100Z"
+    }
+   },
+   "id": "65ce38250523a173",
+   "execution_count": 87
+  },
+  {
+   "cell_type": "markdown",
+   "source": [
+    "### 7.3可视化"
+   ],
+   "metadata": {
+    "collapsed": false
+   },
+   "id": "f04c84fd87b3e07a"
+  },
+  {
+   "cell_type": "code",
+   "outputs": [
+    {
+     "name": "stderr",
+     "output_type": "stream",
+     "text": [
+      "D:\\app\\anaconda3\\envs\\ai\\lib\\site-packages\\sklearn\\base.py:493: UserWarning: X does not have valid feature names, but RandomForestClassifier was fitted with feature names\n",
+      "  warnings.warn(\n",
+      "C:\\Users\\Lenovo\\AppData\\Local\\Temp\\ipykernel_1968\\2867276073.py:24: MatplotlibDeprecationWarning: shading='flat' when X and Y have the same dimensions as C is deprecated since 3.3.  Either specify the corners of the quadrilaterals with X and Y, or pass shading='auto', 'nearest' or 'gouraud', or set rcParams['pcolor.shading'].  This will become an error two minor releases later.\n",
+      "  plt.pcolormesh(t1,t2,y_predict.reshape(x1.shape),cmap=cm_light)\n"
+     ]
+    },
+    {
+     "data": {
+      "text/plain": "<Figure size 1000x600 with 1 Axes>",
+      "image/png": "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6dOcOHGCRo0asXjxYiCuqHrmmWeoW7duqnO/umV4aGgoVapUif9z/vx5RowYEb/iJCIiNw+tKImISKarWLEiPj4+DBw4kH79+pE3b17Wr1/P7t27eeyxx1L9Oo0bN6ZatWq89dZbvPzyy5QoUYLff/+dffv2MXjw4CT977nnHqZNm8awYcNo0qQJZ8+eZfz48Zw7d46cOXMCUL16dSzL4sUXX+TZZ5/F19eXRYsWcenSJVq2bEmRIkUoWLAgH374IWFhYRQvXpz//vuPVatW0adPn1TlXa5cOTp06MDgwYM5ceIElStX5vDhw3z11VcULVqUkiVLpnoOREQka6hQEhGRTOft7c2PP/7IF198wUcffcTFixcpWbIkH3zwAZ07d0716zgcDsaOHcsXX3zBqFGjuHz5MnfffTfjxo2jWrVqSfo/+OCDHD9+nNmzZzN16lQKFChAo0aN6NGjB4MHD+bAgQOUKVOGcePGMXLkSN5++20iIiIoW7Yso0aNok6dOgB88803fPnll4wcOZLQ0FAKFSpE37590/Sco08++YTvv/+e6dOnc/r0afLkyUObNm145ZVXcDgcqX4dERHJGoZt27a7kxAREREREbmZaEVJRETczul0cqPP7QzD0MqLiIhkGa0oiYiI2zVt2pQTJ05ct0+RIkVYvnx5FmUkIiJ3OhVKIiLidnv37iU6Ovq6fby8vChfvnwWZSQiInc6txRKe/bsYfjw4ezcuRNPT0/q1avHm2++Gb9167WefvppNm7ciIfH/68SHDlyJA0bNszKlEVERERE5A6S5YVSZGQkzZs3p2vXrjz33HOEh4fzxhtvYJom3333XZL+derU4euvv6ZWrVpZmaaIiIiIiNzBsvyBsydPnuTuu+/mxRdfxMvLi4CAALp168bff/+dpO+xY8e4cOECFStWzOo0RURERETkDpblhVKpUqUYN25cgp2L/vjjDypVqpSk744dO/D19aV///7UqVOHdu3aMWvWrKxMV0RERERE7kBu3R7ctm1GjBjBihUrmDx5cpL26OhoqlatSv/+/SlbtiwbN26kX79++Pr60rp1azdkLCIiIiIidwK37XoXFhbGW2+9xc6dOxkzZkyqdzIaMmQIwcHBfP3112kabyYziSU2PamK3H6m9nB3BiIicofZvXsFI0d2BJYB9yXTYwbwDEOHbiNfvruy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zJkzAZg1axYXXnghb731FgDp6enk5eURhiFbtmwhFotRuXJlABYuXMjTTz8NUHTjhX3RoUMHtmzZwpAhQygoKGDTpk3ccsst9O/fv9hRpNL07NmTv//973z11VcUFBTw9NNPs3r16qL5SpUqsXnz5n3uT5KUfB5RkiTtN0cccQTnnXce27Zto1u3bgwcOJD09HS2bt3KbbfdxsqVK6levTpXX301V155JRAPMS+99BLNmjVj4sSJDBo0iIEDB7Jt2zZycnK49NJLefjhh1mwYEGx09n2RtWqVXn22Wf54x//yJAhQwiCgJYtWxZ79tF3ueqqq1izZg2XXXYZKSkpdO3alZycHNLS0gDo2rUr/fv3p3379kycOHGfepQkJVckLOuJ3pIkJVi+fDkdO3ZkwoQJHH744clup9x99tln1KlTh0MOOQSIn3rXqlUr/vSnP9GmTZskdydJKg+eeidJ0l568803GTRoEJs3b2bHjh384x//AODkk09ObmOSpHLjqXeSpB+9devWcdZZZ33nNt8+56g89OvXj3vvvZdOnTpRUFBAkyZNGDp0KJmZmeW2hiQpuTz1TpIkSZISeOqdJEmSJCUwKEmSJElSAoOSJEmSJCUwKEmSJElSAoOSJEmSJCUwKEmSJElSAoOSJEmSJCUwKEmSJElSAoOSJEmSJCX4/zn9fkak/RFRAAAAAElFTkSuQmCC"
+     },
+     "metadata": {},
+     "output_type": "display_data"
+    }
+   ],
+   "source": [
+    "draw(clf)"
+   ],
+   "metadata": {
+    "collapsed": false,
+    "ExecuteTime": {
+     "end_time": "2024-07-14T13:13:55.378989400Z",
+     "start_time": "2024-07-14T13:13:54.328274Z"
+    }
+   },
+   "id": "c0088a2f60686d05",
+   "execution_count": 88
+  },
+  {
+   "cell_type": "markdown",
+   "source": [
+    " ## 8.集成方法——Adaboost\n",
+    " ### 8.1基本思想\n",
+    " **训练集m，用初始数据权重训练得到第一个弱分类器，根据误差率计算弱分类器系数，更新数据的权重\n",
+    " 使用新的权重训练得到第二个弱分类器，以此类推\n",
+    " 根据各自系数，将所有弱分类器加权求和获得强分类器**\n",
+    " ### 8.2sklearn实现"
+   ],
+   "metadata": {
+    "collapsed": false
+   },
+   "id": "66ed7cdc6b65c7a3"
+  },
+  {
+   "cell_type": "code",
+   "outputs": [],
+   "source": [
+    "from sklearn.ensemble import AdaBoostClassifier"
+   ],
+   "metadata": {
+    "collapsed": false,
+    "ExecuteTime": {
+     "end_time": "2024-07-14T13:18:08.561511800Z",
+     "start_time": "2024-07-14T13:18:08.508888600Z"
+    }
+   },
+   "id": "365285c36f723924",
+   "execution_count": 91
+  },
+  {
+   "cell_type": "markdown",
+   "source": [
+    "* 构建分类器对象"
+   ],
+   "metadata": {
+    "collapsed": false
+   },
+   "id": "cb8842d323b22ba"
+  },
+  {
+   "cell_type": "code",
+   "outputs": [
+    {
+     "data": {
+      "text/plain": "AdaBoostClassifier()",
+      "text/html": "<style>#sk-container-id-17 {\n  /* Definition of color scheme common for light and dark mode */\n  --sklearn-color-text: black;\n  --sklearn-color-line: gray;\n  /* Definition of color scheme for unfitted estimators */\n  --sklearn-color-unfitted-level-0: #fff5e6;\n  --sklearn-color-unfitted-level-1: #f6e4d2;\n  --sklearn-color-unfitted-level-2: #ffe0b3;\n  --sklearn-color-unfitted-level-3: chocolate;\n  /* Definition of color scheme for fitted estimators */\n  --sklearn-color-fitted-level-0: #f0f8ff;\n  --sklearn-color-fitted-level-1: #d4ebff;\n  --sklearn-color-fitted-level-2: #b3dbfd;\n  --sklearn-color-fitted-level-3: cornflowerblue;\n\n  /* Specific color for light theme */\n  --sklearn-color-text-on-default-background: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, black)));\n  --sklearn-color-background: var(--sg-background-color, var(--theme-background, var(--jp-layout-color0, white)));\n  --sklearn-color-border-box: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, black)));\n  --sklearn-color-icon: #696969;\n\n  @media (prefers-color-scheme: dark) {\n    /* Redefinition of color scheme for dark theme */\n    --sklearn-color-text-on-default-background: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, white)));\n    --sklearn-color-background: var(--sg-background-color, var(--theme-background, var(--jp-layout-color0, #111)));\n    --sklearn-color-border-box: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, white)));\n    --sklearn-color-icon: #878787;\n  }\n}\n\n#sk-container-id-17 {\n  color: var(--sklearn-color-text);\n}\n\n#sk-container-id-17 pre {\n  padding: 0;\n}\n\n#sk-container-id-17 input.sk-hidden--visually {\n  border: 0;\n  clip: rect(1px 1px 1px 1px);\n  clip: rect(1px, 1px, 1px, 1px);\n  height: 1px;\n  margin: -1px;\n  overflow: hidden;\n  padding: 0;\n  position: absolute;\n  width: 1px;\n}\n\n#sk-container-id-17 div.sk-dashed-wrapped {\n  border: 1px dashed var(--sklearn-color-line);\n  margin: 0 0.4em 0.5em 0.4em;\n  box-sizing: border-box;\n  padding-bottom: 0.4em;\n  background-color: var(--sklearn-color-background);\n}\n\n#sk-container-id-17 div.sk-container {\n  /* jupyter's `normalize.less` sets `[hidden] { display: none; }`\n     but bootstrap.min.css set `[hidden] { display: none !important; }`\n     so we also need the `!important` here to be able to override the\n     default hidden behavior on the sphinx rendered scikit-learn.org.\n     See: https://github.com/scikit-learn/scikit-learn/issues/21755 */\n  display: inline-block !important;\n  position: relative;\n}\n\n#sk-container-id-17 div.sk-text-repr-fallback {\n  display: none;\n}\n\ndiv.sk-parallel-item,\ndiv.sk-serial,\ndiv.sk-item {\n  /* draw centered vertical line to link estimators */\n  background-image: linear-gradient(var(--sklearn-color-text-on-default-background), var(--sklearn-color-text-on-default-background));\n  background-size: 2px 100%;\n  background-repeat: no-repeat;\n  background-position: center center;\n}\n\n/* Parallel-specific style estimator block */\n\n#sk-container-id-17 div.sk-parallel-item::after {\n  content: \"\";\n  width: 100%;\n  border-bottom: 2px solid var(--sklearn-color-text-on-default-background);\n  flex-grow: 1;\n}\n\n#sk-container-id-17 div.sk-parallel {\n  display: flex;\n  align-items: stretch;\n  justify-content: center;\n  background-color: var(--sklearn-color-background);\n  position: relative;\n}\n\n#sk-container-id-17 div.sk-parallel-item {\n  display: flex;\n  flex-direction: column;\n}\n\n#sk-container-id-17 div.sk-parallel-item:first-child::after {\n  align-self: flex-end;\n  width: 50%;\n}\n\n#sk-container-id-17 div.sk-parallel-item:last-child::after {\n  align-self: flex-start;\n  width: 50%;\n}\n\n#sk-container-id-17 div.sk-parallel-item:only-child::after {\n  width: 0;\n}\n\n/* Serial-specific style estimator block */\n\n#sk-container-id-17 div.sk-serial {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  background-color: var(--sklearn-color-background);\n  padding-right: 1em;\n  padding-left: 1em;\n}\n\n\n/* Toggleable style: style used for estimator/Pipeline/ColumnTransformer box that is\nclickable and can be expanded/collapsed.\n- Pipeline and ColumnTransformer use this feature and define the default style\n- Estimators will overwrite some part of the style using the `sk-estimator` class\n*/\n\n/* Pipeline and ColumnTransformer style (default) */\n\n#sk-container-id-17 div.sk-toggleable {\n  /* Default theme specific background. It is overwritten whether we have a\n  specific estimator or a Pipeline/ColumnTransformer */\n  background-color: var(--sklearn-color-background);\n}\n\n/* Toggleable label */\n#sk-container-id-17 label.sk-toggleable__label {\n  cursor: pointer;\n  display: block;\n  width: 100%;\n  margin-bottom: 0;\n  padding: 0.5em;\n  box-sizing: border-box;\n  text-align: center;\n}\n\n#sk-container-id-17 label.sk-toggleable__label-arrow:before {\n  /* Arrow on the left of the label */\n  content: \"▸\";\n  float: left;\n  margin-right: 0.25em;\n  color: var(--sklearn-color-icon);\n}\n\n#sk-container-id-17 label.sk-toggleable__label-arrow:hover:before {\n  color: var(--sklearn-color-text);\n}\n\n/* Toggleable content - dropdown */\n\n#sk-container-id-17 div.sk-toggleable__content {\n  max-height: 0;\n  max-width: 0;\n  overflow: hidden;\n  text-align: left;\n  /* unfitted */\n  background-color: var(--sklearn-color-unfitted-level-0);\n}\n\n#sk-container-id-17 div.sk-toggleable__content.fitted {\n  /* fitted */\n  background-color: var(--sklearn-color-fitted-level-0);\n}\n\n#sk-container-id-17 div.sk-toggleable__content pre {\n  margin: 0.2em;\n  border-radius: 0.25em;\n  color: var(--sklearn-color-text);\n  /* unfitted */\n  background-color: var(--sklearn-color-unfitted-level-0);\n}\n\n#sk-container-id-17 div.sk-toggleable__content.fitted pre {\n  /* unfitted */\n  background-color: var(--sklearn-color-fitted-level-0);\n}\n\n#sk-container-id-17 input.sk-toggleable__control:checked~div.sk-toggleable__content {\n  /* Expand drop-down */\n  max-height: 200px;\n  max-width: 100%;\n  overflow: auto;\n}\n\n#sk-container-id-17 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {\n  content: \"▾\";\n}\n\n/* Pipeline/ColumnTransformer-specific style */\n\n#sk-container-id-17 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {\n  color: var(--sklearn-color-text);\n  background-color: var(--sklearn-color-unfitted-level-2);\n}\n\n#sk-container-id-17 div.sk-label.fitted input.sk-toggleable__control:checked~label.sk-toggleable__label {\n  background-color: var(--sklearn-color-fitted-level-2);\n}\n\n/* Estimator-specific style */\n\n/* Colorize estimator box */\n#sk-container-id-17 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {\n  /* unfitted */\n  background-color: var(--sklearn-color-unfitted-level-2);\n}\n\n#sk-container-id-17 div.sk-estimator.fitted input.sk-toggleable__control:checked~label.sk-toggleable__label {\n  /* fitted */\n  background-color: var(--sklearn-color-fitted-level-2);\n}\n\n#sk-container-id-17 div.sk-label label.sk-toggleable__label,\n#sk-container-id-17 div.sk-label label {\n  /* The background is the default theme color */\n  color: var(--sklearn-color-text-on-default-background);\n}\n\n/* On hover, darken the color of the background */\n#sk-container-id-17 div.sk-label:hover label.sk-toggleable__label {\n  color: var(--sklearn-color-text);\n  background-color: var(--sklearn-color-unfitted-level-2);\n}\n\n/* Label box, darken color on hover, fitted */\n#sk-container-id-17 div.sk-label.fitted:hover label.sk-toggleable__label.fitted {\n  color: var(--sklearn-color-text);\n  background-color: var(--sklearn-color-fitted-level-2);\n}\n\n/* Estimator label */\n\n#sk-container-id-17 div.sk-label label {\n  font-family: monospace;\n  font-weight: bold;\n  display: inline-block;\n  line-height: 1.2em;\n}\n\n#sk-container-id-17 div.sk-label-container {\n  text-align: center;\n}\n\n/* Estimator-specific */\n#sk-container-id-17 div.sk-estimator {\n  font-family: monospace;\n  border: 1px dotted var(--sklearn-color-border-box);\n  border-radius: 0.25em;\n  box-sizing: border-box;\n  margin-bottom: 0.5em;\n  /* unfitted */\n  background-color: var(--sklearn-color-unfitted-level-0);\n}\n\n#sk-container-id-17 div.sk-estimator.fitted {\n  /* fitted */\n  background-color: var(--sklearn-color-fitted-level-0);\n}\n\n/* on hover */\n#sk-container-id-17 div.sk-estimator:hover {\n  /* unfitted */\n  background-color: var(--sklearn-color-unfitted-level-2);\n}\n\n#sk-container-id-17 div.sk-estimator.fitted:hover {\n  /* fitted */\n  background-color: var(--sklearn-color-fitted-level-2);\n}\n\n/* Specification for estimator info (e.g. \"i\" and \"?\") */\n\n/* Common style for \"i\" and \"?\" */\n\n.sk-estimator-doc-link,\na:link.sk-estimator-doc-link,\na:visited.sk-estimator-doc-link {\n  float: right;\n  font-size: smaller;\n  line-height: 1em;\n  font-family: monospace;\n  background-color: var(--sklearn-color-background);\n  border-radius: 1em;\n  height: 1em;\n  width: 1em;\n  text-decoration: none !important;\n  margin-left: 1ex;\n  /* unfitted */\n  border: var(--sklearn-color-unfitted-level-1) 1pt solid;\n  color: var(--sklearn-color-unfitted-level-1);\n}\n\n.sk-estimator-doc-link.fitted,\na:link.sk-estimator-doc-link.fitted,\na:visited.sk-estimator-doc-link.fitted {\n  /* fitted */\n  border: var(--sklearn-color-fitted-level-1) 1pt solid;\n  color: var(--sklearn-color-fitted-level-1);\n}\n\n/* On hover */\ndiv.sk-estimator:hover .sk-estimator-doc-link:hover,\n.sk-estimator-doc-link:hover,\ndiv.sk-label-container:hover .sk-estimator-doc-link:hover,\n.sk-estimator-doc-link:hover {\n  /* unfitted */\n  background-color: var(--sklearn-color-unfitted-level-3);\n  color: var(--sklearn-color-background);\n  text-decoration: none;\n}\n\ndiv.sk-estimator.fitted:hover .sk-estimator-doc-link.fitted:hover,\n.sk-estimator-doc-link.fitted:hover,\ndiv.sk-label-container:hover .sk-estimator-doc-link.fitted:hover,\n.sk-estimator-doc-link.fitted:hover {\n  /* fitted */\n  background-color: var(--sklearn-color-fitted-level-3);\n  color: var(--sklearn-color-background);\n  text-decoration: none;\n}\n\n/* Span, style for the box shown on hovering the info icon */\n.sk-estimator-doc-link span {\n  display: none;\n  z-index: 9999;\n  position: relative;\n  font-weight: normal;\n  right: .2ex;\n  padding: .5ex;\n  margin: .5ex;\n  width: min-content;\n  min-width: 20ex;\n  max-width: 50ex;\n  color: var(--sklearn-color-text);\n  box-shadow: 2pt 2pt 4pt #999;\n  /* unfitted */\n  background: var(--sklearn-color-unfitted-level-0);\n  border: .5pt solid var(--sklearn-color-unfitted-level-3);\n}\n\n.sk-estimator-doc-link.fitted span {\n  /* fitted */\n  background: var(--sklearn-color-fitted-level-0);\n  border: var(--sklearn-color-fitted-level-3);\n}\n\n.sk-estimator-doc-link:hover span {\n  display: block;\n}\n\n/* \"?\"-specific style due to the `<a>` HTML tag */\n\n#sk-container-id-17 a.estimator_doc_link {\n  float: right;\n  font-size: 1rem;\n  line-height: 1em;\n  font-family: monospace;\n  background-color: var(--sklearn-color-background);\n  border-radius: 1rem;\n  height: 1rem;\n  width: 1rem;\n  text-decoration: none;\n  /* unfitted */\n  color: var(--sklearn-color-unfitted-level-1);\n  border: var(--sklearn-color-unfitted-level-1) 1pt solid;\n}\n\n#sk-container-id-17 a.estimator_doc_link.fitted {\n  /* fitted */\n  border: var(--sklearn-color-fitted-level-1) 1pt solid;\n  color: var(--sklearn-color-fitted-level-1);\n}\n\n/* On hover */\n#sk-container-id-17 a.estimator_doc_link:hover {\n  /* unfitted */\n  background-color: var(--sklearn-color-unfitted-level-3);\n  color: var(--sklearn-color-background);\n  text-decoration: none;\n}\n\n#sk-container-id-17 a.estimator_doc_link.fitted:hover {\n  /* fitted */\n  background-color: var(--sklearn-color-fitted-level-3);\n}\n</style><div id=\"sk-container-id-17\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>AdaBoostClassifier()</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item\"><div class=\"sk-estimator  sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-17\" type=\"checkbox\" checked><label for=\"sk-estimator-id-17\" class=\"sk-toggleable__label  sk-toggleable__label-arrow \">&nbsp;&nbsp;AdaBoostClassifier<a class=\"sk-estimator-doc-link \" rel=\"noreferrer\" target=\"_blank\" href=\"https://scikit-learn.org/1.4/modules/generated/sklearn.ensemble.AdaBoostClassifier.html\">?<span>Documentation for AdaBoostClassifier</span></a><span class=\"sk-estimator-doc-link \">i<span>Not fitted</span></span></label><div class=\"sk-toggleable__content \"><pre>AdaBoostClassifier()</pre></div> </div></div></div></div>"
+     },
+     "execution_count": 92,
+     "metadata": {},
+     "output_type": "execute_result"
+    }
+   ],
+   "source": [
+    "clf=AdaBoostClassifier()\n",
+    "clf"
+   ],
+   "metadata": {
+    "collapsed": false,
+    "ExecuteTime": {
+     "end_time": "2024-07-14T13:18:11.526198700Z",
+     "start_time": "2024-07-14T13:18:11.442360Z"
+    }
+   },
+   "id": "5d6d7021aa641c27",
+   "execution_count": 92
+  },
+  {
+   "cell_type": "markdown",
+   "source": [
+    "* 训练"
+   ],
+   "metadata": {
+    "collapsed": false
+   },
+   "id": "7b825409da286f31"
+  },
+  {
+   "cell_type": "code",
+   "outputs": [
+    {
+     "name": "stderr",
+     "output_type": "stream",
+     "text": [
+      "D:\\app\\anaconda3\\envs\\ai\\lib\\site-packages\\sklearn\\ensemble\\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.\n",
+      "  warnings.warn(\n"
+     ]
+    },
+    {
+     "data": {
+      "text/plain": "AdaBoostClassifier()",
+      "text/html": "<style>#sk-container-id-18 {\n  /* Definition of color scheme common for light and dark mode */\n  --sklearn-color-text: black;\n  --sklearn-color-line: gray;\n  /* Definition of color scheme for unfitted estimators */\n  --sklearn-color-unfitted-level-0: #fff5e6;\n  --sklearn-color-unfitted-level-1: #f6e4d2;\n  --sklearn-color-unfitted-level-2: #ffe0b3;\n  --sklearn-color-unfitted-level-3: chocolate;\n  /* Definition of color scheme for fitted estimators */\n  --sklearn-color-fitted-level-0: #f0f8ff;\n  --sklearn-color-fitted-level-1: #d4ebff;\n  --sklearn-color-fitted-level-2: #b3dbfd;\n  --sklearn-color-fitted-level-3: cornflowerblue;\n\n  /* Specific color for light theme */\n  --sklearn-color-text-on-default-background: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, black)));\n  --sklearn-color-background: var(--sg-background-color, var(--theme-background, var(--jp-layout-color0, white)));\n  --sklearn-color-border-box: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, black)));\n  --sklearn-color-icon: #696969;\n\n  @media (prefers-color-scheme: dark) {\n    /* Redefinition of color scheme for dark theme */\n    --sklearn-color-text-on-default-background: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, white)));\n    --sklearn-color-background: var(--sg-background-color, var(--theme-background, var(--jp-layout-color0, #111)));\n    --sklearn-color-border-box: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, white)));\n    --sklearn-color-icon: #878787;\n  }\n}\n\n#sk-container-id-18 {\n  color: var(--sklearn-color-text);\n}\n\n#sk-container-id-18 pre {\n  padding: 0;\n}\n\n#sk-container-id-18 input.sk-hidden--visually {\n  border: 0;\n  clip: rect(1px 1px 1px 1px);\n  clip: rect(1px, 1px, 1px, 1px);\n  height: 1px;\n  margin: -1px;\n  overflow: hidden;\n  padding: 0;\n  position: absolute;\n  width: 1px;\n}\n\n#sk-container-id-18 div.sk-dashed-wrapped {\n  border: 1px dashed var(--sklearn-color-line);\n  margin: 0 0.4em 0.5em 0.4em;\n  box-sizing: border-box;\n  padding-bottom: 0.4em;\n  background-color: var(--sklearn-color-background);\n}\n\n#sk-container-id-18 div.sk-container {\n  /* jupyter's `normalize.less` sets `[hidden] { display: none; }`\n     but bootstrap.min.css set `[hidden] { display: none !important; }`\n     so we also need the `!important` here to be able to override the\n     default hidden behavior on the sphinx rendered scikit-learn.org.\n     See: https://github.com/scikit-learn/scikit-learn/issues/21755 */\n  display: inline-block !important;\n  position: relative;\n}\n\n#sk-container-id-18 div.sk-text-repr-fallback {\n  display: none;\n}\n\ndiv.sk-parallel-item,\ndiv.sk-serial,\ndiv.sk-item {\n  /* draw centered vertical line to link estimators */\n  background-image: linear-gradient(var(--sklearn-color-text-on-default-background), var(--sklearn-color-text-on-default-background));\n  background-size: 2px 100%;\n  background-repeat: no-repeat;\n  background-position: center center;\n}\n\n/* Parallel-specific style estimator block */\n\n#sk-container-id-18 div.sk-parallel-item::after {\n  content: \"\";\n  width: 100%;\n  border-bottom: 2px solid var(--sklearn-color-text-on-default-background);\n  flex-grow: 1;\n}\n\n#sk-container-id-18 div.sk-parallel {\n  display: flex;\n  align-items: stretch;\n  justify-content: center;\n  background-color: var(--sklearn-color-background);\n  position: relative;\n}\n\n#sk-container-id-18 div.sk-parallel-item {\n  display: flex;\n  flex-direction: column;\n}\n\n#sk-container-id-18 div.sk-parallel-item:first-child::after {\n  align-self: flex-end;\n  width: 50%;\n}\n\n#sk-container-id-18 div.sk-parallel-item:last-child::after {\n  align-self: flex-start;\n  width: 50%;\n}\n\n#sk-container-id-18 div.sk-parallel-item:only-child::after {\n  width: 0;\n}\n\n/* Serial-specific style estimator block */\n\n#sk-container-id-18 div.sk-serial {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  background-color: var(--sklearn-color-background);\n  padding-right: 1em;\n  padding-left: 1em;\n}\n\n\n/* Toggleable style: style used for estimator/Pipeline/ColumnTransformer box that is\nclickable and can be expanded/collapsed.\n- Pipeline and ColumnTransformer use this feature and define the default style\n- Estimators will overwrite some part of the style using the `sk-estimator` class\n*/\n\n/* Pipeline and ColumnTransformer style (default) */\n\n#sk-container-id-18 div.sk-toggleable {\n  /* Default theme specific background. It is overwritten whether we have a\n  specific estimator or a Pipeline/ColumnTransformer */\n  background-color: var(--sklearn-color-background);\n}\n\n/* Toggleable label */\n#sk-container-id-18 label.sk-toggleable__label {\n  cursor: pointer;\n  display: block;\n  width: 100%;\n  margin-bottom: 0;\n  padding: 0.5em;\n  box-sizing: border-box;\n  text-align: center;\n}\n\n#sk-container-id-18 label.sk-toggleable__label-arrow:before {\n  /* Arrow on the left of the label */\n  content: \"▸\";\n  float: left;\n  margin-right: 0.25em;\n  color: var(--sklearn-color-icon);\n}\n\n#sk-container-id-18 label.sk-toggleable__label-arrow:hover:before {\n  color: var(--sklearn-color-text);\n}\n\n/* Toggleable content - dropdown */\n\n#sk-container-id-18 div.sk-toggleable__content {\n  max-height: 0;\n  max-width: 0;\n  overflow: hidden;\n  text-align: left;\n  /* unfitted */\n  background-color: var(--sklearn-color-unfitted-level-0);\n}\n\n#sk-container-id-18 div.sk-toggleable__content.fitted {\n  /* fitted */\n  background-color: var(--sklearn-color-fitted-level-0);\n}\n\n#sk-container-id-18 div.sk-toggleable__content pre {\n  margin: 0.2em;\n  border-radius: 0.25em;\n  color: var(--sklearn-color-text);\n  /* unfitted */\n  background-color: var(--sklearn-color-unfitted-level-0);\n}\n\n#sk-container-id-18 div.sk-toggleable__content.fitted pre {\n  /* unfitted */\n  background-color: var(--sklearn-color-fitted-level-0);\n}\n\n#sk-container-id-18 input.sk-toggleable__control:checked~div.sk-toggleable__content {\n  /* Expand drop-down */\n  max-height: 200px;\n  max-width: 100%;\n  overflow: auto;\n}\n\n#sk-container-id-18 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {\n  content: \"▾\";\n}\n\n/* Pipeline/ColumnTransformer-specific style */\n\n#sk-container-id-18 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {\n  color: var(--sklearn-color-text);\n  background-color: var(--sklearn-color-unfitted-level-2);\n}\n\n#sk-container-id-18 div.sk-label.fitted input.sk-toggleable__control:checked~label.sk-toggleable__label {\n  background-color: var(--sklearn-color-fitted-level-2);\n}\n\n/* Estimator-specific style */\n\n/* Colorize estimator box */\n#sk-container-id-18 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {\n  /* unfitted */\n  background-color: var(--sklearn-color-unfitted-level-2);\n}\n\n#sk-container-id-18 div.sk-estimator.fitted input.sk-toggleable__control:checked~label.sk-toggleable__label {\n  /* fitted */\n  background-color: var(--sklearn-color-fitted-level-2);\n}\n\n#sk-container-id-18 div.sk-label label.sk-toggleable__label,\n#sk-container-id-18 div.sk-label label {\n  /* The background is the default theme color */\n  color: var(--sklearn-color-text-on-default-background);\n}\n\n/* On hover, darken the color of the background */\n#sk-container-id-18 div.sk-label:hover label.sk-toggleable__label {\n  color: var(--sklearn-color-text);\n  background-color: var(--sklearn-color-unfitted-level-2);\n}\n\n/* Label box, darken color on hover, fitted */\n#sk-container-id-18 div.sk-label.fitted:hover label.sk-toggleable__label.fitted {\n  color: var(--sklearn-color-text);\n  background-color: var(--sklearn-color-fitted-level-2);\n}\n\n/* Estimator label */\n\n#sk-container-id-18 div.sk-label label {\n  font-family: monospace;\n  font-weight: bold;\n  display: inline-block;\n  line-height: 1.2em;\n}\n\n#sk-container-id-18 div.sk-label-container {\n  text-align: center;\n}\n\n/* Estimator-specific */\n#sk-container-id-18 div.sk-estimator {\n  font-family: monospace;\n  border: 1px dotted var(--sklearn-color-border-box);\n  border-radius: 0.25em;\n  box-sizing: border-box;\n  margin-bottom: 0.5em;\n  /* unfitted */\n  background-color: var(--sklearn-color-unfitted-level-0);\n}\n\n#sk-container-id-18 div.sk-estimator.fitted {\n  /* fitted */\n  background-color: var(--sklearn-color-fitted-level-0);\n}\n\n/* on hover */\n#sk-container-id-18 div.sk-estimator:hover {\n  /* unfitted */\n  background-color: var(--sklearn-color-unfitted-level-2);\n}\n\n#sk-container-id-18 div.sk-estimator.fitted:hover {\n  /* fitted */\n  background-color: var(--sklearn-color-fitted-level-2);\n}\n\n/* Specification for estimator info (e.g. \"i\" and \"?\") */\n\n/* Common style for \"i\" and \"?\" */\n\n.sk-estimator-doc-link,\na:link.sk-estimator-doc-link,\na:visited.sk-estimator-doc-link {\n  float: right;\n  font-size: smaller;\n  line-height: 1em;\n  font-family: monospace;\n  background-color: var(--sklearn-color-background);\n  border-radius: 1em;\n  height: 1em;\n  width: 1em;\n  text-decoration: none !important;\n  margin-left: 1ex;\n  /* unfitted */\n  border: var(--sklearn-color-unfitted-level-1) 1pt solid;\n  color: var(--sklearn-color-unfitted-level-1);\n}\n\n.sk-estimator-doc-link.fitted,\na:link.sk-estimator-doc-link.fitted,\na:visited.sk-estimator-doc-link.fitted {\n  /* fitted */\n  border: var(--sklearn-color-fitted-level-1) 1pt solid;\n  color: var(--sklearn-color-fitted-level-1);\n}\n\n/* On hover */\ndiv.sk-estimator:hover .sk-estimator-doc-link:hover,\n.sk-estimator-doc-link:hover,\ndiv.sk-label-container:hover .sk-estimator-doc-link:hover,\n.sk-estimator-doc-link:hover {\n  /* unfitted */\n  background-color: var(--sklearn-color-unfitted-level-3);\n  color: var(--sklearn-color-background);\n  text-decoration: none;\n}\n\ndiv.sk-estimator.fitted:hover .sk-estimator-doc-link.fitted:hover,\n.sk-estimator-doc-link.fitted:hover,\ndiv.sk-label-container:hover .sk-estimator-doc-link.fitted:hover,\n.sk-estimator-doc-link.fitted:hover {\n  /* fitted */\n  background-color: var(--sklearn-color-fitted-level-3);\n  color: var(--sklearn-color-background);\n  text-decoration: none;\n}\n\n/* Span, style for the box shown on hovering the info icon */\n.sk-estimator-doc-link span {\n  display: none;\n  z-index: 9999;\n  position: relative;\n  font-weight: normal;\n  right: .2ex;\n  padding: .5ex;\n  margin: .5ex;\n  width: min-content;\n  min-width: 20ex;\n  max-width: 50ex;\n  color: var(--sklearn-color-text);\n  box-shadow: 2pt 2pt 4pt #999;\n  /* unfitted */\n  background: var(--sklearn-color-unfitted-level-0);\n  border: .5pt solid var(--sklearn-color-unfitted-level-3);\n}\n\n.sk-estimator-doc-link.fitted span {\n  /* fitted */\n  background: var(--sklearn-color-fitted-level-0);\n  border: var(--sklearn-color-fitted-level-3);\n}\n\n.sk-estimator-doc-link:hover span {\n  display: block;\n}\n\n/* \"?\"-specific style due to the `<a>` HTML tag */\n\n#sk-container-id-18 a.estimator_doc_link {\n  float: right;\n  font-size: 1rem;\n  line-height: 1em;\n  font-family: monospace;\n  background-color: var(--sklearn-color-background);\n  border-radius: 1rem;\n  height: 1rem;\n  width: 1rem;\n  text-decoration: none;\n  /* unfitted */\n  color: var(--sklearn-color-unfitted-level-1);\n  border: var(--sklearn-color-unfitted-level-1) 1pt solid;\n}\n\n#sk-container-id-18 a.estimator_doc_link.fitted {\n  /* fitted */\n  border: var(--sklearn-color-fitted-level-1) 1pt solid;\n  color: var(--sklearn-color-fitted-level-1);\n}\n\n/* On hover */\n#sk-container-id-18 a.estimator_doc_link:hover {\n  /* unfitted */\n  background-color: var(--sklearn-color-unfitted-level-3);\n  color: var(--sklearn-color-background);\n  text-decoration: none;\n}\n\n#sk-container-id-18 a.estimator_doc_link.fitted:hover {\n  /* fitted */\n  background-color: var(--sklearn-color-fitted-level-3);\n}\n</style><div id=\"sk-container-id-18\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>AdaBoostClassifier()</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item\"><div class=\"sk-estimator fitted sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-18\" type=\"checkbox\" checked><label for=\"sk-estimator-id-18\" class=\"sk-toggleable__label fitted sk-toggleable__label-arrow fitted\">&nbsp;&nbsp;AdaBoostClassifier<a class=\"sk-estimator-doc-link fitted\" rel=\"noreferrer\" target=\"_blank\" href=\"https://scikit-learn.org/1.4/modules/generated/sklearn.ensemble.AdaBoostClassifier.html\">?<span>Documentation for AdaBoostClassifier</span></a><span class=\"sk-estimator-doc-link fitted\">i<span>Fitted</span></span></label><div class=\"sk-toggleable__content fitted\"><pre>AdaBoostClassifier()</pre></div> </div></div></div></div>"
+     },
+     "execution_count": 93,
+     "metadata": {},
+     "output_type": "execute_result"
+    }
+   ],
+   "source": [
+    "clf.fit(iris_x_train,iris_y_train)"
+   ],
+   "metadata": {
+    "collapsed": false,
+    "ExecuteTime": {
+     "end_time": "2024-07-14T13:18:28.078736900Z",
+     "start_time": "2024-07-14T13:18:28.024127500Z"
+    }
+   },
+   "id": "de47857db6672b26",
+   "execution_count": 93
+  },
+  {
+   "cell_type": "markdown",
+   "source": [
+    "* 预测"
+   ],
+   "metadata": {
+    "collapsed": false
+   },
+   "id": "4e0c1822d9a1ae3e"
+  },
+  {
+   "cell_type": "code",
+   "outputs": [
+    {
+     "name": "stdout",
+     "output_type": "stream",
+     "text": [
+      "[1 1 0 0 0 2 2 2 0 1 0 2 1 2 1 1 1 2 0 2 1 2 0 0 2 0 1 0 2 0]\n",
+      "[2 1 0 0 0 1 2 2 0 2 0 2 1 2 1 1 2 2 0 2 1 2 0 0 2 0 1 0 2 0]\n"
+     ]
+    }
+   ],
+   "source": [
+    "res=clf.predict(iris_x_test)\n",
+    "print(res)\n",
+    "print(iris_y_test.values)"
+   ],
+   "metadata": {
+    "collapsed": false,
+    "ExecuteTime": {
+     "end_time": "2024-07-14T13:19:02.057266200Z",
+     "start_time": "2024-07-14T13:19:01.972358200Z"
+    }
+   },
+   "id": "96653209409dac62",
+   "execution_count": 94
+  },
+  {
+   "cell_type": "markdown",
+   "source": [
+    "* 评估"
+   ],
+   "metadata": {
+    "collapsed": false
+   },
+   "id": "479e64c29e4c33bd"
+  },
+  {
+   "cell_type": "code",
+   "outputs": [
+    {
+     "name": "stdout",
+     "output_type": "stream",
+     "text": [
+      "预测正确率：87%\n"
+     ]
+    }
+   ],
+   "source": [
+    "accuracy=clf.score(iris_x_test,iris_y_test)\n",
+    "print(f\"预测正确率：{accuracy:.0%}\")"
+   ],
+   "metadata": {
+    "collapsed": false,
+    "ExecuteTime": {
+     "end_time": "2024-07-14T13:19:20.813880300Z",
+     "start_time": "2024-07-14T13:19:20.757880Z"
+    }
+   },
+   "id": "dabaaa399eb8fbd4",
+   "execution_count": 95
+  },
+  {
+   "cell_type": "markdown",
+   "source": [
+    "### 8.3可视化"
+   ],
+   "metadata": {
+    "collapsed": false
+   },
+   "id": "c6ebe4deef00271b"
+  },
+  {
+   "cell_type": "code",
+   "outputs": [
+    {
+     "name": "stderr",
+     "output_type": "stream",
+     "text": [
+      "D:\\app\\anaconda3\\envs\\ai\\lib\\site-packages\\sklearn\\base.py:493: UserWarning: X does not have valid feature names, but AdaBoostClassifier was fitted with feature names\n",
+      "  warnings.warn(\n",
+      "C:\\Users\\Lenovo\\AppData\\Local\\Temp\\ipykernel_1968\\2867276073.py:24: MatplotlibDeprecationWarning: shading='flat' when X and Y have the same dimensions as C is deprecated since 3.3.  Either specify the corners of the quadrilaterals with X and Y, or pass shading='auto', 'nearest' or 'gouraud', or set rcParams['pcolor.shading'].  This will become an error two minor releases later.\n",
+      "  plt.pcolormesh(t1,t2,y_predict.reshape(x1.shape),cmap=cm_light)\n"
+     ]
+    },
+    {
+     "data": {
+      "text/plain": "<Figure size 1000x600 with 1 Axes>",
+      "image/png": ""
+     },
+     "metadata": {},
+     "output_type": "display_data"
+    }
+   ],
+   "source": [
+    "draw(clf)"
+   ],
+   "metadata": {
+    "collapsed": false,
+    "ExecuteTime": {
+     "end_time": "2024-07-14T13:19:50.848922400Z",
+     "start_time": "2024-07-14T13:19:49.318288400Z"
+    }
+   },
+   "id": "50fad9be11b02fa3",
+   "execution_count": 96
+  },
+  {
+   "cell_type": "markdown",
+   "source": [
+    "## 9.集成方法——梯度提升树GBDT\n",
+    "### 9.1基本思想\n",
+    "**训练集m，获得一个弱分类器，获得残差，然后不断地拟合残差\n",
+    "所有弱分类器相加得到强分类器**\n",
+    "### 9.2sklearn实现"
+   ],
+   "metadata": {
+    "collapsed": false
+   },
+   "id": "d62cfedf3ad90f47"
+  },
+  {
+   "cell_type": "code",
+   "outputs": [],
+   "source": [
+    "from sklearn.ensemble import GradientBoostingClassifier"
+   ],
+   "metadata": {
+    "collapsed": false,
+    "ExecuteTime": {
+     "end_time": "2024-07-14T13:21:31.713797300Z",
+     "start_time": "2024-07-14T13:21:31.653291600Z"
+    }
+   },
+   "id": "8d76acd3ad59a836",
+   "execution_count": 97
+  },
+  {
+   "cell_type": "markdown",
+   "source": [
+    "* 构建分类器对象"
+   ],
+   "metadata": {
+    "collapsed": false
+   },
+   "id": "9d78f1e06bc9b27f"
+  },
+  {
+   "cell_type": "code",
+   "outputs": [
+    {
+     "data": {
+      "text/plain": "GradientBoostingClassifier()",
+      "text/html": "<style>#sk-container-id-19 {\n  /* Definition of color scheme common for light and dark mode */\n  --sklearn-color-text: black;\n  --sklearn-color-line: gray;\n  /* Definition of color scheme for unfitted estimators */\n  --sklearn-color-unfitted-level-0: #fff5e6;\n  --sklearn-color-unfitted-level-1: #f6e4d2;\n  --sklearn-color-unfitted-level-2: #ffe0b3;\n  --sklearn-color-unfitted-level-3: chocolate;\n  /* Definition of color scheme for fitted estimators */\n  --sklearn-color-fitted-level-0: #f0f8ff;\n  --sklearn-color-fitted-level-1: #d4ebff;\n  --sklearn-color-fitted-level-2: #b3dbfd;\n  --sklearn-color-fitted-level-3: cornflowerblue;\n\n  /* Specific color for light theme */\n  --sklearn-color-text-on-default-background: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, black)));\n  --sklearn-color-background: var(--sg-background-color, var(--theme-background, var(--jp-layout-color0, white)));\n  --sklearn-color-border-box: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, black)));\n  --sklearn-color-icon: #696969;\n\n  @media (prefers-color-scheme: dark) {\n    /* Redefinition of color scheme for dark theme */\n    --sklearn-color-text-on-default-background: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, white)));\n    --sklearn-color-background: var(--sg-background-color, var(--theme-background, var(--jp-layout-color0, #111)));\n    --sklearn-color-border-box: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, white)));\n    --sklearn-color-icon: #878787;\n  }\n}\n\n#sk-container-id-19 {\n  color: var(--sklearn-color-text);\n}\n\n#sk-container-id-19 pre {\n  padding: 0;\n}\n\n#sk-container-id-19 input.sk-hidden--visually {\n  border: 0;\n  clip: rect(1px 1px 1px 1px);\n  clip: rect(1px, 1px, 1px, 1px);\n  height: 1px;\n  margin: -1px;\n  overflow: hidden;\n  padding: 0;\n  position: absolute;\n  width: 1px;\n}\n\n#sk-container-id-19 div.sk-dashed-wrapped {\n  border: 1px dashed var(--sklearn-color-line);\n  margin: 0 0.4em 0.5em 0.4em;\n  box-sizing: border-box;\n  padding-bottom: 0.4em;\n  background-color: var(--sklearn-color-background);\n}\n\n#sk-container-id-19 div.sk-container {\n  /* jupyter's `normalize.less` sets `[hidden] { display: none; }`\n     but bootstrap.min.css set `[hidden] { display: none !important; }`\n     so we also need the `!important` here to be able to override the\n     default hidden behavior on the sphinx rendered scikit-learn.org.\n     See: https://github.com/scikit-learn/scikit-learn/issues/21755 */\n  display: inline-block !important;\n  position: relative;\n}\n\n#sk-container-id-19 div.sk-text-repr-fallback {\n  display: none;\n}\n\ndiv.sk-parallel-item,\ndiv.sk-serial,\ndiv.sk-item {\n  /* draw centered vertical line to link estimators */\n  background-image: linear-gradient(var(--sklearn-color-text-on-default-background), var(--sklearn-color-text-on-default-background));\n  background-size: 2px 100%;\n  background-repeat: no-repeat;\n  background-position: center center;\n}\n\n/* Parallel-specific style estimator block */\n\n#sk-container-id-19 div.sk-parallel-item::after {\n  content: \"\";\n  width: 100%;\n  border-bottom: 2px solid var(--sklearn-color-text-on-default-background);\n  flex-grow: 1;\n}\n\n#sk-container-id-19 div.sk-parallel {\n  display: flex;\n  align-items: stretch;\n  justify-content: center;\n  background-color: var(--sklearn-color-background);\n  position: relative;\n}\n\n#sk-container-id-19 div.sk-parallel-item {\n  display: flex;\n  flex-direction: column;\n}\n\n#sk-container-id-19 div.sk-parallel-item:first-child::after {\n  align-self: flex-end;\n  width: 50%;\n}\n\n#sk-container-id-19 div.sk-parallel-item:last-child::after {\n  align-self: flex-start;\n  width: 50%;\n}\n\n#sk-container-id-19 div.sk-parallel-item:only-child::after {\n  width: 0;\n}\n\n/* Serial-specific style estimator block */\n\n#sk-container-id-19 div.sk-serial {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  background-color: var(--sklearn-color-background);\n  padding-right: 1em;\n  padding-left: 1em;\n}\n\n\n/* Toggleable style: style used for estimator/Pipeline/ColumnTransformer box that is\nclickable and can be expanded/collapsed.\n- Pipeline and ColumnTransformer use this feature and define the default style\n- Estimators will overwrite some part of the style using the `sk-estimator` class\n*/\n\n/* Pipeline and ColumnTransformer style (default) */\n\n#sk-container-id-19 div.sk-toggleable {\n  /* Default theme specific background. It is overwritten whether we have a\n  specific estimator or a Pipeline/ColumnTransformer */\n  background-color: var(--sklearn-color-background);\n}\n\n/* Toggleable label */\n#sk-container-id-19 label.sk-toggleable__label {\n  cursor: pointer;\n  display: block;\n  width: 100%;\n  margin-bottom: 0;\n  padding: 0.5em;\n  box-sizing: border-box;\n  text-align: center;\n}\n\n#sk-container-id-19 label.sk-toggleable__label-arrow:before {\n  /* Arrow on the left of the label */\n  content: \"▸\";\n  float: left;\n  margin-right: 0.25em;\n  color: var(--sklearn-color-icon);\n}\n\n#sk-container-id-19 label.sk-toggleable__label-arrow:hover:before {\n  color: var(--sklearn-color-text);\n}\n\n/* Toggleable content - dropdown */\n\n#sk-container-id-19 div.sk-toggleable__content {\n  max-height: 0;\n  max-width: 0;\n  overflow: hidden;\n  text-align: left;\n  /* unfitted */\n  background-color: var(--sklearn-color-unfitted-level-0);\n}\n\n#sk-container-id-19 div.sk-toggleable__content.fitted {\n  /* fitted */\n  background-color: var(--sklearn-color-fitted-level-0);\n}\n\n#sk-container-id-19 div.sk-toggleable__content pre {\n  margin: 0.2em;\n  border-radius: 0.25em;\n  color: var(--sklearn-color-text);\n  /* unfitted */\n  background-color: var(--sklearn-color-unfitted-level-0);\n}\n\n#sk-container-id-19 div.sk-toggleable__content.fitted pre {\n  /* unfitted */\n  background-color: var(--sklearn-color-fitted-level-0);\n}\n\n#sk-container-id-19 input.sk-toggleable__control:checked~div.sk-toggleable__content {\n  /* Expand drop-down */\n  max-height: 200px;\n  max-width: 100%;\n  overflow: auto;\n}\n\n#sk-container-id-19 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {\n  content: \"▾\";\n}\n\n/* Pipeline/ColumnTransformer-specific style */\n\n#sk-container-id-19 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {\n  color: var(--sklearn-color-text);\n  background-color: var(--sklearn-color-unfitted-level-2);\n}\n\n#sk-container-id-19 div.sk-label.fitted input.sk-toggleable__control:checked~label.sk-toggleable__label {\n  background-color: var(--sklearn-color-fitted-level-2);\n}\n\n/* Estimator-specific style */\n\n/* Colorize estimator box */\n#sk-container-id-19 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {\n  /* unfitted */\n  background-color: var(--sklearn-color-unfitted-level-2);\n}\n\n#sk-container-id-19 div.sk-estimator.fitted input.sk-toggleable__control:checked~label.sk-toggleable__label {\n  /* fitted */\n  background-color: var(--sklearn-color-fitted-level-2);\n}\n\n#sk-container-id-19 div.sk-label label.sk-toggleable__label,\n#sk-container-id-19 div.sk-label label {\n  /* The background is the default theme color */\n  color: var(--sklearn-color-text-on-default-background);\n}\n\n/* On hover, darken the color of the background */\n#sk-container-id-19 div.sk-label:hover label.sk-toggleable__label {\n  color: var(--sklearn-color-text);\n  background-color: var(--sklearn-color-unfitted-level-2);\n}\n\n/* Label box, darken color on hover, fitted */\n#sk-container-id-19 div.sk-label.fitted:hover label.sk-toggleable__label.fitted {\n  color: var(--sklearn-color-text);\n  background-color: var(--sklearn-color-fitted-level-2);\n}\n\n/* Estimator label */\n\n#sk-container-id-19 div.sk-label label {\n  font-family: monospace;\n  font-weight: bold;\n  display: inline-block;\n  line-height: 1.2em;\n}\n\n#sk-container-id-19 div.sk-label-container {\n  text-align: center;\n}\n\n/* Estimator-specific */\n#sk-container-id-19 div.sk-estimator {\n  font-family: monospace;\n  border: 1px dotted var(--sklearn-color-border-box);\n  border-radius: 0.25em;\n  box-sizing: border-box;\n  margin-bottom: 0.5em;\n  /* unfitted */\n  background-color: var(--sklearn-color-unfitted-level-0);\n}\n\n#sk-container-id-19 div.sk-estimator.fitted {\n  /* fitted */\n  background-color: var(--sklearn-color-fitted-level-0);\n}\n\n/* on hover */\n#sk-container-id-19 div.sk-estimator:hover {\n  /* unfitted */\n  background-color: var(--sklearn-color-unfitted-level-2);\n}\n\n#sk-container-id-19 div.sk-estimator.fitted:hover {\n  /* fitted */\n  background-color: var(--sklearn-color-fitted-level-2);\n}\n\n/* Specification for estimator info (e.g. \"i\" and \"?\") */\n\n/* Common style for \"i\" and \"?\" */\n\n.sk-estimator-doc-link,\na:link.sk-estimator-doc-link,\na:visited.sk-estimator-doc-link {\n  float: right;\n  font-size: smaller;\n  line-height: 1em;\n  font-family: monospace;\n  background-color: var(--sklearn-color-background);\n  border-radius: 1em;\n  height: 1em;\n  width: 1em;\n  text-decoration: none !important;\n  margin-left: 1ex;\n  /* unfitted */\n  border: var(--sklearn-color-unfitted-level-1) 1pt solid;\n  color: var(--sklearn-color-unfitted-level-1);\n}\n\n.sk-estimator-doc-link.fitted,\na:link.sk-estimator-doc-link.fitted,\na:visited.sk-estimator-doc-link.fitted {\n  /* fitted */\n  border: var(--sklearn-color-fitted-level-1) 1pt solid;\n  color: var(--sklearn-color-fitted-level-1);\n}\n\n/* On hover */\ndiv.sk-estimator:hover .sk-estimator-doc-link:hover,\n.sk-estimator-doc-link:hover,\ndiv.sk-label-container:hover .sk-estimator-doc-link:hover,\n.sk-estimator-doc-link:hover {\n  /* unfitted */\n  background-color: var(--sklearn-color-unfitted-level-3);\n  color: var(--sklearn-color-background);\n  text-decoration: none;\n}\n\ndiv.sk-estimator.fitted:hover .sk-estimator-doc-link.fitted:hover,\n.sk-estimator-doc-link.fitted:hover,\ndiv.sk-label-container:hover .sk-estimator-doc-link.fitted:hover,\n.sk-estimator-doc-link.fitted:hover {\n  /* fitted */\n  background-color: var(--sklearn-color-fitted-level-3);\n  color: var(--sklearn-color-background);\n  text-decoration: none;\n}\n\n/* Span, style for the box shown on hovering the info icon */\n.sk-estimator-doc-link span {\n  display: none;\n  z-index: 9999;\n  position: relative;\n  font-weight: normal;\n  right: .2ex;\n  padding: .5ex;\n  margin: .5ex;\n  width: min-content;\n  min-width: 20ex;\n  max-width: 50ex;\n  color: var(--sklearn-color-text);\n  box-shadow: 2pt 2pt 4pt #999;\n  /* unfitted */\n  background: var(--sklearn-color-unfitted-level-0);\n  border: .5pt solid var(--sklearn-color-unfitted-level-3);\n}\n\n.sk-estimator-doc-link.fitted span {\n  /* fitted */\n  background: var(--sklearn-color-fitted-level-0);\n  border: var(--sklearn-color-fitted-level-3);\n}\n\n.sk-estimator-doc-link:hover span {\n  display: block;\n}\n\n/* \"?\"-specific style due to the `<a>` HTML tag */\n\n#sk-container-id-19 a.estimator_doc_link {\n  float: right;\n  font-size: 1rem;\n  line-height: 1em;\n  font-family: monospace;\n  background-color: var(--sklearn-color-background);\n  border-radius: 1rem;\n  height: 1rem;\n  width: 1rem;\n  text-decoration: none;\n  /* unfitted */\n  color: var(--sklearn-color-unfitted-level-1);\n  border: var(--sklearn-color-unfitted-level-1) 1pt solid;\n}\n\n#sk-container-id-19 a.estimator_doc_link.fitted {\n  /* fitted */\n  border: var(--sklearn-color-fitted-level-1) 1pt solid;\n  color: var(--sklearn-color-fitted-level-1);\n}\n\n/* On hover */\n#sk-container-id-19 a.estimator_doc_link:hover {\n  /* unfitted */\n  background-color: var(--sklearn-color-unfitted-level-3);\n  color: var(--sklearn-color-background);\n  text-decoration: none;\n}\n\n#sk-container-id-19 a.estimator_doc_link.fitted:hover {\n  /* fitted */\n  background-color: var(--sklearn-color-fitted-level-3);\n}\n</style><div id=\"sk-container-id-19\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>GradientBoostingClassifier()</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item\"><div class=\"sk-estimator  sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-19\" type=\"checkbox\" checked><label for=\"sk-estimator-id-19\" class=\"sk-toggleable__label  sk-toggleable__label-arrow \">&nbsp;&nbsp;GradientBoostingClassifier<a class=\"sk-estimator-doc-link \" rel=\"noreferrer\" target=\"_blank\" href=\"https://scikit-learn.org/1.4/modules/generated/sklearn.ensemble.GradientBoostingClassifier.html\">?<span>Documentation for GradientBoostingClassifier</span></a><span class=\"sk-estimator-doc-link \">i<span>Not fitted</span></span></label><div class=\"sk-toggleable__content \"><pre>GradientBoostingClassifier()</pre></div> </div></div></div></div>"
+     },
+     "execution_count": 98,
+     "metadata": {},
+     "output_type": "execute_result"
+    }
+   ],
+   "source": [
+    "clf=GradientBoostingClassifier()\n",
+    "clf"
+   ],
+   "metadata": {
+    "collapsed": false,
+    "ExecuteTime": {
+     "end_time": "2024-07-14T13:21:56.325815400Z",
+     "start_time": "2024-07-14T13:21:56.243021700Z"
+    }
+   },
+   "id": "4bd5376c8a0b6c73",
+   "execution_count": 98
+  },
+  {
+   "cell_type": "markdown",
+   "source": [
+    "* 训练"
+   ],
+   "metadata": {
+    "collapsed": false
+   },
+   "id": "5638641c2aa69058"
+  },
+  {
+   "cell_type": "code",
+   "outputs": [
+    {
+     "data": {
+      "text/plain": "GradientBoostingClassifier()",
+      "text/html": "<style>#sk-container-id-20 {\n  /* Definition of color scheme common for light and dark mode */\n  --sklearn-color-text: black;\n  --sklearn-color-line: gray;\n  /* Definition of color scheme for unfitted estimators */\n  --sklearn-color-unfitted-level-0: #fff5e6;\n  --sklearn-color-unfitted-level-1: #f6e4d2;\n  --sklearn-color-unfitted-level-2: #ffe0b3;\n  --sklearn-color-unfitted-level-3: chocolate;\n  /* Definition of color scheme for fitted estimators */\n  --sklearn-color-fitted-level-0: #f0f8ff;\n  --sklearn-color-fitted-level-1: #d4ebff;\n  --sklearn-color-fitted-level-2: #b3dbfd;\n  --sklearn-color-fitted-level-3: cornflowerblue;\n\n  /* Specific color for light theme */\n  --sklearn-color-text-on-default-background: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, black)));\n  --sklearn-color-background: var(--sg-background-color, var(--theme-background, var(--jp-layout-color0, white)));\n  --sklearn-color-border-box: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, black)));\n  --sklearn-color-icon: #696969;\n\n  @media (prefers-color-scheme: dark) {\n    /* Redefinition of color scheme for dark theme */\n    --sklearn-color-text-on-default-background: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, white)));\n    --sklearn-color-background: var(--sg-background-color, var(--theme-background, var(--jp-layout-color0, #111)));\n    --sklearn-color-border-box: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, white)));\n    --sklearn-color-icon: #878787;\n  }\n}\n\n#sk-container-id-20 {\n  color: var(--sklearn-color-text);\n}\n\n#sk-container-id-20 pre {\n  padding: 0;\n}\n\n#sk-container-id-20 input.sk-hidden--visually {\n  border: 0;\n  clip: rect(1px 1px 1px 1px);\n  clip: rect(1px, 1px, 1px, 1px);\n  height: 1px;\n  margin: -1px;\n  overflow: hidden;\n  padding: 0;\n  position: absolute;\n  width: 1px;\n}\n\n#sk-container-id-20 div.sk-dashed-wrapped {\n  border: 1px dashed var(--sklearn-color-line);\n  margin: 0 0.4em 0.5em 0.4em;\n  box-sizing: border-box;\n  padding-bottom: 0.4em;\n  background-color: var(--sklearn-color-background);\n}\n\n#sk-container-id-20 div.sk-container {\n  /* jupyter's `normalize.less` sets `[hidden] { display: none; }`\n     but bootstrap.min.css set `[hidden] { display: none !important; }`\n     so we also need the `!important` here to be able to override the\n     default hidden behavior on the sphinx rendered scikit-learn.org.\n     See: https://github.com/scikit-learn/scikit-learn/issues/21755 */\n  display: inline-block !important;\n  position: relative;\n}\n\n#sk-container-id-20 div.sk-text-repr-fallback {\n  display: none;\n}\n\ndiv.sk-parallel-item,\ndiv.sk-serial,\ndiv.sk-item {\n  /* draw centered vertical line to link estimators */\n  background-image: linear-gradient(var(--sklearn-color-text-on-default-background), var(--sklearn-color-text-on-default-background));\n  background-size: 2px 100%;\n  background-repeat: no-repeat;\n  background-position: center center;\n}\n\n/* Parallel-specific style estimator block */\n\n#sk-container-id-20 div.sk-parallel-item::after {\n  content: \"\";\n  width: 100%;\n  border-bottom: 2px solid var(--sklearn-color-text-on-default-background);\n  flex-grow: 1;\n}\n\n#sk-container-id-20 div.sk-parallel {\n  display: flex;\n  align-items: stretch;\n  justify-content: center;\n  background-color: var(--sklearn-color-background);\n  position: relative;\n}\n\n#sk-container-id-20 div.sk-parallel-item {\n  display: flex;\n  flex-direction: column;\n}\n\n#sk-container-id-20 div.sk-parallel-item:first-child::after {\n  align-self: flex-end;\n  width: 50%;\n}\n\n#sk-container-id-20 div.sk-parallel-item:last-child::after {\n  align-self: flex-start;\n  width: 50%;\n}\n\n#sk-container-id-20 div.sk-parallel-item:only-child::after {\n  width: 0;\n}\n\n/* Serial-specific style estimator block */\n\n#sk-container-id-20 div.sk-serial {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  background-color: var(--sklearn-color-background);\n  padding-right: 1em;\n  padding-left: 1em;\n}\n\n\n/* Toggleable style: style used for estimator/Pipeline/ColumnTransformer box that is\nclickable and can be expanded/collapsed.\n- Pipeline and ColumnTransformer use this feature and define the default style\n- Estimators will overwrite some part of the style using the `sk-estimator` class\n*/\n\n/* Pipeline and ColumnTransformer style (default) */\n\n#sk-container-id-20 div.sk-toggleable {\n  /* Default theme specific background. It is overwritten whether we have a\n  specific estimator or a Pipeline/ColumnTransformer */\n  background-color: var(--sklearn-color-background);\n}\n\n/* Toggleable label */\n#sk-container-id-20 label.sk-toggleable__label {\n  cursor: pointer;\n  display: block;\n  width: 100%;\n  margin-bottom: 0;\n  padding: 0.5em;\n  box-sizing: border-box;\n  text-align: center;\n}\n\n#sk-container-id-20 label.sk-toggleable__label-arrow:before {\n  /* Arrow on the left of the label */\n  content: \"▸\";\n  float: left;\n  margin-right: 0.25em;\n  color: var(--sklearn-color-icon);\n}\n\n#sk-container-id-20 label.sk-toggleable__label-arrow:hover:before {\n  color: var(--sklearn-color-text);\n}\n\n/* Toggleable content - dropdown */\n\n#sk-container-id-20 div.sk-toggleable__content {\n  max-height: 0;\n  max-width: 0;\n  overflow: hidden;\n  text-align: left;\n  /* unfitted */\n  background-color: var(--sklearn-color-unfitted-level-0);\n}\n\n#sk-container-id-20 div.sk-toggleable__content.fitted {\n  /* fitted */\n  background-color: var(--sklearn-color-fitted-level-0);\n}\n\n#sk-container-id-20 div.sk-toggleable__content pre {\n  margin: 0.2em;\n  border-radius: 0.25em;\n  color: var(--sklearn-color-text);\n  /* unfitted */\n  background-color: var(--sklearn-color-unfitted-level-0);\n}\n\n#sk-container-id-20 div.sk-toggleable__content.fitted pre {\n  /* unfitted */\n  background-color: var(--sklearn-color-fitted-level-0);\n}\n\n#sk-container-id-20 input.sk-toggleable__control:checked~div.sk-toggleable__content {\n  /* Expand drop-down */\n  max-height: 200px;\n  max-width: 100%;\n  overflow: auto;\n}\n\n#sk-container-id-20 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {\n  content: \"▾\";\n}\n\n/* Pipeline/ColumnTransformer-specific style */\n\n#sk-container-id-20 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {\n  color: var(--sklearn-color-text);\n  background-color: var(--sklearn-color-unfitted-level-2);\n}\n\n#sk-container-id-20 div.sk-label.fitted input.sk-toggleable__control:checked~label.sk-toggleable__label {\n  background-color: var(--sklearn-color-fitted-level-2);\n}\n\n/* Estimator-specific style */\n\n/* Colorize estimator box */\n#sk-container-id-20 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {\n  /* unfitted */\n  background-color: var(--sklearn-color-unfitted-level-2);\n}\n\n#sk-container-id-20 div.sk-estimator.fitted input.sk-toggleable__control:checked~label.sk-toggleable__label {\n  /* fitted */\n  background-color: var(--sklearn-color-fitted-level-2);\n}\n\n#sk-container-id-20 div.sk-label label.sk-toggleable__label,\n#sk-container-id-20 div.sk-label label {\n  /* The background is the default theme color */\n  color: var(--sklearn-color-text-on-default-background);\n}\n\n/* On hover, darken the color of the background */\n#sk-container-id-20 div.sk-label:hover label.sk-toggleable__label {\n  color: var(--sklearn-color-text);\n  background-color: var(--sklearn-color-unfitted-level-2);\n}\n\n/* Label box, darken color on hover, fitted */\n#sk-container-id-20 div.sk-label.fitted:hover label.sk-toggleable__label.fitted {\n  color: var(--sklearn-color-text);\n  background-color: var(--sklearn-color-fitted-level-2);\n}\n\n/* Estimator label */\n\n#sk-container-id-20 div.sk-label label {\n  font-family: monospace;\n  font-weight: bold;\n  display: inline-block;\n  line-height: 1.2em;\n}\n\n#sk-container-id-20 div.sk-label-container {\n  text-align: center;\n}\n\n/* Estimator-specific */\n#sk-container-id-20 div.sk-estimator {\n  font-family: monospace;\n  border: 1px dotted var(--sklearn-color-border-box);\n  border-radius: 0.25em;\n  box-sizing: border-box;\n  margin-bottom: 0.5em;\n  /* unfitted */\n  background-color: var(--sklearn-color-unfitted-level-0);\n}\n\n#sk-container-id-20 div.sk-estimator.fitted {\n  /* fitted */\n  background-color: var(--sklearn-color-fitted-level-0);\n}\n\n/* on hover */\n#sk-container-id-20 div.sk-estimator:hover {\n  /* unfitted */\n  background-color: var(--sklearn-color-unfitted-level-2);\n}\n\n#sk-container-id-20 div.sk-estimator.fitted:hover {\n  /* fitted */\n  background-color: var(--sklearn-color-fitted-level-2);\n}\n\n/* Specification for estimator info (e.g. \"i\" and \"?\") */\n\n/* Common style for \"i\" and \"?\" */\n\n.sk-estimator-doc-link,\na:link.sk-estimator-doc-link,\na:visited.sk-estimator-doc-link {\n  float: right;\n  font-size: smaller;\n  line-height: 1em;\n  font-family: monospace;\n  background-color: var(--sklearn-color-background);\n  border-radius: 1em;\n  height: 1em;\n  width: 1em;\n  text-decoration: none !important;\n  margin-left: 1ex;\n  /* unfitted */\n  border: var(--sklearn-color-unfitted-level-1) 1pt solid;\n  color: var(--sklearn-color-unfitted-level-1);\n}\n\n.sk-estimator-doc-link.fitted,\na:link.sk-estimator-doc-link.fitted,\na:visited.sk-estimator-doc-link.fitted {\n  /* fitted */\n  border: var(--sklearn-color-fitted-level-1) 1pt solid;\n  color: var(--sklearn-color-fitted-level-1);\n}\n\n/* On hover */\ndiv.sk-estimator:hover .sk-estimator-doc-link:hover,\n.sk-estimator-doc-link:hover,\ndiv.sk-label-container:hover .sk-estimator-doc-link:hover,\n.sk-estimator-doc-link:hover {\n  /* unfitted */\n  background-color: var(--sklearn-color-unfitted-level-3);\n  color: var(--sklearn-color-background);\n  text-decoration: none;\n}\n\ndiv.sk-estimator.fitted:hover .sk-estimator-doc-link.fitted:hover,\n.sk-estimator-doc-link.fitted:hover,\ndiv.sk-label-container:hover .sk-estimator-doc-link.fitted:hover,\n.sk-estimator-doc-link.fitted:hover {\n  /* fitted */\n  background-color: var(--sklearn-color-fitted-level-3);\n  color: var(--sklearn-color-background);\n  text-decoration: none;\n}\n\n/* Span, style for the box shown on hovering the info icon */\n.sk-estimator-doc-link span {\n  display: none;\n  z-index: 9999;\n  position: relative;\n  font-weight: normal;\n  right: .2ex;\n  padding: .5ex;\n  margin: .5ex;\n  width: min-content;\n  min-width: 20ex;\n  max-width: 50ex;\n  color: var(--sklearn-color-text);\n  box-shadow: 2pt 2pt 4pt #999;\n  /* unfitted */\n  background: var(--sklearn-color-unfitted-level-0);\n  border: .5pt solid var(--sklearn-color-unfitted-level-3);\n}\n\n.sk-estimator-doc-link.fitted span {\n  /* fitted */\n  background: var(--sklearn-color-fitted-level-0);\n  border: var(--sklearn-color-fitted-level-3);\n}\n\n.sk-estimator-doc-link:hover span {\n  display: block;\n}\n\n/* \"?\"-specific style due to the `<a>` HTML tag */\n\n#sk-container-id-20 a.estimator_doc_link {\n  float: right;\n  font-size: 1rem;\n  line-height: 1em;\n  font-family: monospace;\n  background-color: var(--sklearn-color-background);\n  border-radius: 1rem;\n  height: 1rem;\n  width: 1rem;\n  text-decoration: none;\n  /* unfitted */\n  color: var(--sklearn-color-unfitted-level-1);\n  border: var(--sklearn-color-unfitted-level-1) 1pt solid;\n}\n\n#sk-container-id-20 a.estimator_doc_link.fitted {\n  /* fitted */\n  border: var(--sklearn-color-fitted-level-1) 1pt solid;\n  color: var(--sklearn-color-fitted-level-1);\n}\n\n/* On hover */\n#sk-container-id-20 a.estimator_doc_link:hover {\n  /* unfitted */\n  background-color: var(--sklearn-color-unfitted-level-3);\n  color: var(--sklearn-color-background);\n  text-decoration: none;\n}\n\n#sk-container-id-20 a.estimator_doc_link.fitted:hover {\n  /* fitted */\n  background-color: var(--sklearn-color-fitted-level-3);\n}\n</style><div id=\"sk-container-id-20\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>GradientBoostingClassifier()</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item\"><div class=\"sk-estimator fitted sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-20\" type=\"checkbox\" checked><label for=\"sk-estimator-id-20\" class=\"sk-toggleable__label fitted sk-toggleable__label-arrow fitted\">&nbsp;&nbsp;GradientBoostingClassifier<a class=\"sk-estimator-doc-link fitted\" rel=\"noreferrer\" target=\"_blank\" href=\"https://scikit-learn.org/1.4/modules/generated/sklearn.ensemble.GradientBoostingClassifier.html\">?<span>Documentation for GradientBoostingClassifier</span></a><span class=\"sk-estimator-doc-link fitted\">i<span>Fitted</span></span></label><div class=\"sk-toggleable__content fitted\"><pre>GradientBoostingClassifier()</pre></div> </div></div></div></div>"
+     },
+     "execution_count": 99,
+     "metadata": {},
+     "output_type": "execute_result"
+    }
+   ],
+   "source": [
+    "clf.fit(iris_x_train,iris_y_train)"
+   ],
+   "metadata": {
+    "collapsed": false,
+    "ExecuteTime": {
+     "end_time": "2024-07-14T13:22:18.339776600Z",
+     "start_time": "2024-07-14T13:22:18.239578300Z"
+    }
+   },
+   "id": "56a7a6bb07102d2d",
+   "execution_count": 99
+  },
+  {
+   "cell_type": "markdown",
+   "source": [
+    "* 预测"
+   ],
+   "metadata": {
+    "collapsed": false
+   },
+   "id": "a250a78ca238ed13"
+  },
+  {
+   "cell_type": "code",
+   "outputs": [
+    {
+     "name": "stdout",
+     "output_type": "stream",
+     "text": [
+      "[2 1 0 0 0 2 2 2 0 2 0 2 1 2 1 1 1 2 0 2 1 2 0 0 2 0 1 0 2 0]\n",
+      "[2 1 0 0 0 1 2 2 0 2 0 2 1 2 1 1 2 2 0 2 1 2 0 0 2 0 1 0 2 0]\n"
+     ]
+    }
+   ],
+   "source": [
+    "res=clf.predict(iris_x_test)\n",
+    "print(res)\n",
+    "print(iris_y_test.values)"
+   ],
+   "metadata": {
+    "collapsed": false,
+    "ExecuteTime": {
+     "end_time": "2024-07-14T13:22:42.771087400Z",
+     "start_time": "2024-07-14T13:22:42.705698300Z"
+    }
+   },
+   "id": "9876631c17b5e585",
+   "execution_count": 100
+  },
+  {
+   "cell_type": "markdown",
+   "source": [
+    "* 评估"
+   ],
+   "metadata": {
+    "collapsed": false
+   },
+   "id": "f2a36813a2e5ea1a"
+  },
+  {
+   "cell_type": "code",
+   "outputs": [
+    {
+     "name": "stdout",
+     "output_type": "stream",
+     "text": [
+      "预测正确率：93%\n"
+     ]
+    }
+   ],
+   "source": [
+    "accuracy=clf.score(iris_x_test,iris_y_test)\n",
+    "print(f\"预测正确率：{accuracy:.0%}\")"
+   ],
+   "metadata": {
+    "collapsed": false,
+    "ExecuteTime": {
+     "end_time": "2024-07-14T13:23:03.446860700Z",
+     "start_time": "2024-07-14T13:23:03.354291400Z"
+    }
+   },
+   "id": "9311857c7f301cfe",
+   "execution_count": 101
+  },
+  {
+   "cell_type": "markdown",
+   "source": [
+    "### 9.3可视化"
+   ],
+   "metadata": {
+    "collapsed": false
+   },
+   "id": "9b634eafee3be275"
+  },
+  {
+   "cell_type": "code",
+   "outputs": [
+    {
+     "name": "stderr",
+     "output_type": "stream",
+     "text": [
+      "D:\\app\\anaconda3\\envs\\ai\\lib\\site-packages\\sklearn\\base.py:493: UserWarning: X does not have valid feature names, but GradientBoostingClassifier was fitted with feature names\n",
+      "  warnings.warn(\n",
+      "C:\\Users\\Lenovo\\AppData\\Local\\Temp\\ipykernel_1968\\2867276073.py:24: MatplotlibDeprecationWarning: shading='flat' when X and Y have the same dimensions as C is deprecated since 3.3.  Either specify the corners of the quadrilaterals with X and Y, or pass shading='auto', 'nearest' or 'gouraud', or set rcParams['pcolor.shading'].  This will become an error two minor releases later.\n",
+      "  plt.pcolormesh(t1,t2,y_predict.reshape(x1.shape),cmap=cm_light)\n"
+     ]
+    },
+    {
+     "data": {
+      "text/plain": "<Figure size 1000x600 with 1 Axes>",
+      "image/png": ""
+     },
+     "metadata": {},
+     "output_type": "display_data"
+    }
+   ],
+   "source": [
+    "draw(clf)"
+   ],
+   "metadata": {
+    "collapsed": false,
+    "ExecuteTime": {
+     "end_time": "2024-07-14T13:23:24.577422200Z",
+     "start_time": "2024-07-14T13:23:23.630502Z"
+    }
+   },
+   "id": "cddee1f44c46426",
+   "execution_count": 102
+  },
+  {
+   "cell_type": "markdown",
+   "source": [
+    "## 10.大杀器\n",
+    "### 10.1XGBoost\n",
+    "GBDT的损失函数只对误差部分做负梯度（一节泰勒）展开\n",
+    "XGBoost损失函数对误差部分做二阶泰勒展开，更加准确，更快收敛\n",
+    "### 10.2Lightgbm\n",
+    "微软：快速的，分布式的，高性能的基于决策树算法的梯度提升框架\n",
+    "速度更快\n",
+    "### 10.3stacking\n",
+    "堆叠或者叫模型融合\n",
+    "先建立几个简单的模型进行训练，第二级学习器会基于前级模型的预测结果进行再训练\n",
+    "### 10.4神经网络"
+   ],
+   "metadata": {
+    "collapsed": false
+   },
+   "id": "82fccee33c289d48"
+  },
+  {
+   "cell_type": "code",
+   "outputs": [
+    {
+     "name": "stdout",
+     "output_type": "stream",
+     "text": [
+      "The Zen of Python, by Tim Peters\n",
+      "\n",
+      "Beautiful is better than ugly.\n",
+      "Explicit is better than implicit.\n",
+      "Simple is better than complex.\n",
+      "Complex is better than complicated.\n",
+      "Flat is better than nested.\n",
+      "Sparse is better than dense.\n",
+      "Readability counts.\n",
+      "Special cases aren't special enough to break the rules.\n",
+      "Although practicality beats purity.\n",
+      "Errors should never pass silently.\n",
+      "Unless explicitly silenced.\n",
+      "In the face of ambiguity, refuse the temptation to guess.\n",
+      "There should be one-- and preferably only one --obvious way to do it.\n",
+      "Although that way may not be obvious at first unless you're Dutch.\n",
+      "Now is better than never.\n",
+      "Although never is often better than *right* now.\n",
+      "If the implementation is hard to explain, it's a bad idea.\n",
+      "If the implementation is easy to explain, it may be a good idea.\n",
+      "Namespaces are one honking great idea -- let's do more of those!\n"
+     ]
+    }
+   ],
+   "source": [
+    "import this"
+   ],
+   "metadata": {
+    "collapsed": false,
+    "ExecuteTime": {
+     "end_time": "2024-07-14T13:34:45.069898800Z",
+     "start_time": "2024-07-14T13:34:44.993689800Z"
+    }
+   },
+   "id": "aed3f5b150dce231",
+   "execution_count": 103
+  }
+ ],
+ "metadata": {
+  "kernelspec": {
+   "display_name": "Python 3",
+   "language": "python",
+   "name": "python3"
+  },
+  "language_info": {
+   "codemirror_mode": {
+    "name": "ipython",
+    "version": 2
+   },
+   "file_extension": ".py",
+   "mimetype": "text/x-python",
+   "name": "python",
+   "nbconvert_exporter": "python",
+   "pygments_lexer": "ipython2",
+   "version": "2.7.6"
+  }
+ },
+ "nbformat": 4,
+ "nbformat_minor": 5
+}
Index: 闭包.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/闭包.py b/闭包.py
new file mode 100644
--- /dev/null	
+++ b/闭包.py	
@@ -0,0 +1,65 @@
+# 闭包是指有权访问另一个函数作用域中的变量的函数。
+
+# 闭包的优点是可以保存状态，返回函数，并且在不同的函数中使用。
+
+# 以下是闭包的例子：
+
+
+'''python
+def outer():
+    x = 10
+
+
+    def inner():
+        nonlocal x
+        x += 1
+        return x
+
+    return inner
+
+f = outer()
+print(f())  # 11
+print(f())  # 12
+print(f())  # 13
+'''
+
+
+# 以上代码定义了一个函数outer，它返回另一个函数inner。inner函数可以访问outer函数的变量x，并且可以修改它。
+
+# 调用outer函数，并将返回值赋值给变量f。
+
+# 调用f函数，每次调用都会返回x+1。
+
+# 因此，输出结果为11，12，13。
+
+# 闭包
+# ①有嵌套 ②有引用 ③有返回
+
+# def outer():
+#     # outer函数定义了一个变量x
+#     x = 10
+#
+#     def inner():
+#         return x
+#
+#     # 返回内部函数
+#     return inner
+#
+#
+# fn = outer()  # 当outer函数执行完毕后，把inner函数名称赋值给左边的fn这个全局变量
+# print(fn)
+# print(fn())
+
+
+def outer():
+    num = 10
+
+    def inner():
+        nonlocal num
+        num = 100
+
+    inner()
+    return num
+
+
+print(outer())
Index: 装饰器.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/装饰器.py b/装饰器.py
new file mode 100644
--- /dev/null	
+++ b/装饰器.py	
@@ -0,0 +1,75 @@
+# 装饰器是一种特殊的函数，它可以用来修改另一个函数的行为。
+# 装饰器都有一个默认参数叫fn,代表要修饰的函数
+# 装饰器的返回值也是一个函数，它会在原函数调用前后自动执行。
+
+def loggin(fn):
+    def inner():
+        # 在引用fn函数之前，增加额外功能
+        print("Start logging")
+        # 引用局部变量fn
+        fn()
+        return "End logging"
+
+    return inner
+
+
+@loggin
+def comment():
+    print("This is a comment")
+
+
+print(comment())
+
+
+# 带有参数的装饰器
+
+def decoration(flag):
+    def loggin(fn):
+        def inner(*args, **kwargs):
+            if flag == '+':
+                print("add")
+            elif flag == '-':
+                print("minus")
+            return fn(*args, **kwargs)
+
+        return inner
+
+    return loggin
+
+
+@decoration('+')
+def add(a, b):
+    return a + b
+
+
+@decoration('-')
+def minus(a, b):
+    return a - b
+
+
+print(add(10, 20))
+print(minus(10, 20))
+
+
+# 类装饰器
+
+class Check:
+    def __init__(self, fn):
+        # fn就是被装饰的函数，当类装饰器被调用时，会传入被装饰的函数
+        self.__fn = fn
+
+    # __call__方法：把一个类转换为函数的形式进行调用
+    def __call__(self, *args, **kwargs):
+        # 编写装饰器代码
+        print("Start checking")
+        self.__fn(*args, **kwargs)
+
+
+@Check
+def comment():
+    print("This is a comment")
+
+
+comment()
+
+
Index: .idea/jupyter-settings.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/jupyter-settings.xml b/.idea/jupyter-settings.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/jupyter-settings.xml	
@@ -0,0 +1,17 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="JupyterPersistentConnectionParameters">
+    <option name="moduleParameters">
+      <map>
+        <entry key="$PROJECT_DIR$/.idea/python_basic.iml">
+          <value>
+            <JupyterConnectionParameters>
+              <option name="managed" value="true" />
+              <option name="sdkName" value="" />
+            </JupyterConnectionParameters>
+          </value>
+        </entry>
+      </map>
+    </option>
+  </component>
+</project>
\ No newline at end of file
diff --git a/学生管理系统/v2.py b/学生管理系统/v2.py
new file mode 100644
